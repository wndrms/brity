[{"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\index.js":"1","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\App.js":"2","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\fbase.js":"3","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\Router.js":"4","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\SignUp.js":"5","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\Navigation.js":"6","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\CertForm.js":"7","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Home.js":"8","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Auth.js":"9","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Profile.js":"10","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\CardDragList.js":"11","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\AuthForm.js":"12","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\Findemail.js":"13","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\Findpw.js":"14"},{"size":230,"mtime":1606495515000,"results":"15","hashOfConfig":"16"},{"size":1020,"mtime":1606646088000,"results":"17","hashOfConfig":"16"},{"size":722,"mtime":1606454209000,"results":"18","hashOfConfig":"16"},{"size":1871,"mtime":1608774965645,"results":"19","hashOfConfig":"16"},{"size":16529,"mtime":1608903925907,"results":"20","hashOfConfig":"16"},{"size":611,"mtime":1607264218000,"results":"21","hashOfConfig":"16"},{"size":1729,"mtime":1608095199705,"results":"22","hashOfConfig":"16"},{"size":5098,"mtime":1608774880887,"results":"23","hashOfConfig":"16"},{"size":1009,"mtime":1607579080818,"results":"24","hashOfConfig":"16"},{"size":1979,"mtime":1606495403000,"results":"25","hashOfConfig":"16"},{"size":2933,"mtime":1608774931940,"results":"26","hashOfConfig":"16"},{"size":5710,"mtime":1608909530872,"results":"27","hashOfConfig":"16"},{"size":6561,"mtime":1608774912450,"results":"28","hashOfConfig":"16"},{"size":6779,"mtime":1608800585380,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ocvamv",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\index.js",[],["64","65"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\App.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\fbase.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\Router.js",["66"],"import React from \"react\";\nimport {HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\nimport SignUp from \"./SignUp\";\nimport Findemail from \"./Findemail\";\nimport Findpw from \"./Findpw\";\n\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\n    return (\n        <Router>\n            \n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                            maxWidth: 890,\n                            width: \"100%\",\n                            margin: \"0 auto\",\n                            marginTop: 80,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj}/>\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile refreshUser={refreshUser} userObj={userObj}/>\n                        </Route>\n                    </div>\n                ) : (\n                    <>\n                        <Route exact path=\"/\">\n                            <Auth/>\n                        </Route>\n                        <Route exact path=\"/SignUp\">\n                            <SignUp/>\n                        </Route>\n                        <Route exact path=\"/Findemail\">\n                            <Findemail/>\n                        </Route>\n                        <Route exact path=\"/Findpw\">\n                            <Findpw/>\n                        </Route>\n                    </>\n                )}\n            </Switch>\n        </Router>\n    )\n}\nexport default AppRouter;","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\SignUp.js",["67"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\Navigation.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\CertForm.js",["68"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Home.js",["69"],"import { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport Popup from 'reactjs-popup';\nimport CardDragList from \"components/CardDragList\";\n\nconst Home = ({userObj}) => {\n    const [nweets, setNweets] = useState([]);\n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\n            const nweetArray = snapshot.docs.map((doc) => ({\n                id:doc.id, \n                ...doc.data(),\n            }));\n            setNweets(nweetArray);\n        });\n    }, []);\n    return (\n        <div id=\"wrap\">\n            <header className=\"header\">\n                <div className=\"menu-wrap\">\n                    <p className=\"user-name\">{userObj.displayName}</p>\n                    <p><span className=\"admin\">admin</span>with by <u>brity</u></p>\n                    <button type=\"submit\" className=\"menu\">\n                        <img src=\"\" alt=\"menu\"/>\n                    </button>\n                </div>\n            </header>\n            <div className=\"content\">\n                {\n                    (nweets.length > 0 ? (\n                        <>\n                            <div className=\"card-wrap\">\n                                <CardDragList nweets={nweets}/>\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <div className=\"empty-box\">\n                                <p>💁</p>\n                                <p>생성된 카드가 아직 없어요</p>\n                                <p>버튼을 눌러 새로운 카드를<br/>\n                                    만들어 볼까요?</p>\n                            </div>\n                        </>\n                    ))\n                }\n                <div className=\"ad-card-btn\">\n                    <img src=\"\" alt=\"카드만들기\"/>\n                    <p>카드만들기</p>\n                </div>\n            </div>\n        </div>\n        /*<div className=\"container\">\n            <div style={{marginTop: 30}}>\n                <CardDragList nweets={nweets}></CardDragList>\n            </div>\n            <Popup \n                trigger={<button>+</button>} \n                position=\"top center\"\n                className=\"menu\">\n                    <div className=\"menu\">\n                        <div className=\"menu-header\">카드 만들기</div>\n                        <Popup\n                            trigger={<div className=\"menu-item\">🔗 Link Card 만들기</div>}\n                            modal\n                            contentStyle={{width: \"80%\", height: \"80%\"}}\n                        >\n                            <div className=\"menu-header\">🔗 Link Card 만들기</div>\n                            <div>\n                                <span>홈 카드에 보여질 이름을 적어주세요</span>\n                            </div>\n                            <div>\n                                <input type=\"text\" placeholder=\"어떤 이름의 링크를 만들어드릴까요?\"></input>\n                            </div>\n                            <div>\n                                <span>연결 할 링크 주소를 입력해주세요</span>\n                            </div>\n                            <div>\n                                <input type=\"text\" placeholder=\"연결할 링크 주소 전체를 입력해주세요\"></input>\n                            </div>\n                            <div>\n                                <label>링크 공개 여부</label>\n                            </div>\n                            <button>링크 만들기 완료</button>\n                        </Popup>\n                        <Popup\n                            trigger={<div className=\"menu-item\">📢Notice Card 만들기</div>}\n                            modal\n                            contentStyle={{width: \"80%\", height: \"80%\"}}\n                        >\n                            <div className=\"menu-header\">📢Notice Card 만들기</div>\n                            <div>\n                                <span>홈 카드에 보여질 이름을 적어주세요*</span>\n                            </div>\n                            <div>\n                                <input type=\"text\" placeholder=\"어떤 이름의 링크를 만들어드릴까요?\"></input>\n                            </div>\n                            <div>\n                                <span>연결 할 링크 주소를 입력해주세요*</span>\n                            </div>\n                            <div>\n                                <input type=\"text\" placeholder=\"연결할 링크 주소 전체를 입력해주세요\"></input>\n                            </div>\n                            <div>\n                                <label>공지 공개 여부</label>\n                            </div>\n                            <button>공지 만들기 완료</button>\n                        </Popup>\n                    </div>\n            </Popup>\n            </div>*/\n    );\n};\nexport default Home;","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Auth.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Profile.js",["70"],"import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n        refreshUser();\n    };\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n        }\n        refreshUser();\n    };\n    const getMyNweets = async() => {\n        const nweets = await dbService\n            .collection(\"nweets\")\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\")\n            .get();\n            console.log(nweets.docs.map((doc) => doc.data()));\n    };\n    useEffect(() => {\n        getMyNweets();\n    }, []);\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input \n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Display name\"\n                    value={newDisplayName}\n                    onChange={onChange}\n                    className=\"formInput\" />\n                <input \n                    type=\"submit\" \n                    value=\"Update Profile\" \n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}/>\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n}\n\nexport default Profile;","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\CardDragList.js",["71"],"import React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\n\nconst CardDragList = (nweets) => {\n    const [Cardlist, setlist] = useState([]);\n    useEffect(() => {\n        setlist(nweets.nweets);\n    }, []);\n    const reorder = (list, startIndex, endIndex) => {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n\n        return result;\n    };\n    const grid = 8;\n\n    const getItemStyle = (isDragging, draggableStyle) => ({\n        userSelect: \"none\",\n        padding: grid * 2,\n        margin: `0 0 ${grid}px 0`,\n\n        background: isDragging ? \"lightgreen\" : \"grey\",\n\n        ...draggableStyle\n    });\n\n    const getListStyle = isDraggingOver => ({\n        background: isDraggingOver ? \"white\" : \"white\",\n        padding: grid,\n        width: 320\n    });\n\n    const onDragEnd = (result) => {\n        if (!result.destination) {\n            return;\n        }\n\n        const Cardlists = reorder(\n            Cardlist,\n            result.source.index,\n            result.destination.index\n        );\n        setlist(Cardlists);\n    };\n    console.log(Cardlist);\n    return (\n        <>\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"droppable\">\n                {(provided, snapshot) => (\n                    <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        style={getListStyle(snapshot.isDraggingOver)}>\n                        {Cardlist.map((nweet, index) => (\n                            <Draggable key={nweet.id} draggableId={nweet.id} index={index}>\n                                {(provided, snapshot) => (\n                                    <div\n                                        className=\"card\"\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        style={getItemStyle(\n                                            snapshot.isDragging,\n                                            provided.draggableProps.style\n                                        )} href={\"http://\" + nweet.text}>\n                                        <h3>📢</h3>\n                                        <button><img src=\"\" alt=\"이동화살표\"></img></button>\n                                        <p>{nweet.text}</p>\n                                    </div>\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext>\n            \n        </>\n    );\n}\n\nexport default CardDragList;","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\AuthForm.js",["72","73","74","75"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\Findemail.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\Findpw.js",["76","77"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Findpw = () => {\n    const [Proceeding, setProceeding] = useState(0);\n    const [email, setemail] = useState(\"\");\n    const [error, seterror] = useState(\"\");\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if(name === \"email\"){\n            setemail(value);\n        }\n    };\n    const onDecrease = () => setProceeding(Proceeding - 1);\n    const onIncrease = () => setProceeding(Proceeding + 1);\n\n    return(\n        <>\n            <div id=\"wrap\" className={\"reset-pw0\" + Proceeding + \" reset-pw\"}>\n                <header id=\"header\">\n                    { Proceeding > 0 ? (\n                        <button onClick={onDecrease}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\n                    ) : (\n                        <>\n                            <Link to=\"/\">\n                                <button><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>            \n                            </Link>\n                        </>\n                    )}\n                </header>\n                <div id=\"content\" className=\"content\">\n                {\n                    (() => {\n                        if (Proceeding === 0) {\n                            return(\n                                <>\n                                    <div className=\"logo-wrap\">\n                                        <h2>비밀번호 재설정🔏</h2>\n                                    </div>\n                                    <p>잊어버린 비밀번호를 새롭게 변경할 수 있어요 🧐</p>\n                                    <div className=\"form-box\">\n                                        <form>\n                                            <label for=\"user-id\">이메일 or 아이디<span className=\"required\">*</span></label>\n                                            <input \n                                                type=\"text\" \n                                                name=\"email\"\n                                                id=\"user-id\" \n                                                className=\"input-basic\" \n                                                placeholder=\"이메일이나 아이디를 입력하세요\"\n                                                onChange={onChange}/>\n                                            <button type=\"submit\"></button>\n                                            <div className=\"message\">다음 버튼을 누르면 인증번호가 발송됩니다.</div>\n                                        </form>\n\n                                        <form className=\"btn-wrap\">\n                                            <button className=\"btn-basic next\" onClick={onIncrease}>다음</button>\n                                        </form>\n                                    </div>\n                                </>\n                            );\n                        }\n                        else if (Proceeding === 1) {\n                            return(\n                                <>\n                                    <div className=\"logo-wrap\">\n                                        <h2>비밀번호 변경하기</h2>\n                                    </div>\n                                    <p><span className=\"user-id\">{email}</span> 님의 비밀번호를 변경하겠습니다<br/>\n                                        새로운 번호를 입력해주세요</p>\n                                    <div className=\"form-box\">\n                                        <div>\n                                            <form>\n                                                <label for=\"new-pw\">새 비밀번호<span className=\"required\">*</span></label>\n                                                <input type=\"password\" className=\"input-basic\" id=\"new-pw\" placeholder=\"새롭게 설정할 비밀번호를 입력하세요\"/>\n                                                <button type=\"submit\"></button>\n                                                <div className=\"message\">새롭게 설정할 비밀번호를 적어주세요</div>\n                                            </form>\n                                            <form>\n                                                <label for=\"new-pw\">새 비밀번호 확인</label>\n                                                <input type=\"password\" className=\"input-basic\" id=\"new-pw\" placeholder=\"새 비밀번호를 확인해주세요\"/>\n                                                <button type=\"submit\"></button>\n                                                <div className=\"message\">{error}</div>\n                                            </form>\n                                        </div>\n                                        <form className=\"btn-wrap\">\n                                            <button className=\"btn-basic\" onClick={onIncrease}>비밀번호 변경하기</button>\n                                        </form>\n                                    </div>\n                                </>\n                            );\n                        }\n                        else if(Proceeding === 2){\n                            return(\n                                <>\n                                    <div className=\"logo-wrap\">\n                                        <h2>비밀번호 변경이 완료되었어요 :)</h2>\n                                    </div>\n                                    <p>새로운 비밀번호로 변경 완료되었습니다<br/>\n                                        바뀐 비밀번호로 다시 로그인해 주세요</p>\n                                    <div className=\"text-box\">\n                                        <p>e-mail</p>\n                                        <p className=\"user-id\">{email}</p>\n                                    </div>\n                                    <div className=\"form-box\">\n                                        <form className=\"btn-wrap\">\n                                            <Link to=\"/\">\n                                                <button className=\"btn-purple enable\">로그인 하기</button>\n                                            </Link>\n                                        </form>\n                                    </div>\n                                </>\n                            );\n                        }\n                    })()\n                } \n                </div>\n                <footer id=\"footer\"></footer>\n            </div>\n        </>\n    );\n};\n\nexport default Findpw;",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":18},{"ruleId":"82","severity":1,"message":"86","line":6,"column":19,"nodeType":"84","messageId":"85","endLine":6,"endColumn":27},{"ruleId":"82","severity":1,"message":"86","line":5,"column":19,"nodeType":"84","messageId":"85","endLine":5,"endColumn":27},{"ruleId":"82","severity":1,"message":"87","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":38,"column":8,"nodeType":"90","endLine":38,"endColumn":10,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"92","line":8,"column":8,"nodeType":"90","endLine":8,"endColumn":10,"suggestions":"93"},{"ruleId":"82","severity":1,"message":"94","line":8,"column":24,"nodeType":"84","messageId":"85","endLine":8,"endColumn":37},{"ruleId":"95","severity":1,"message":"96","line":76,"column":41,"nodeType":"97","endLine":76,"endColumn":44},{"ruleId":"95","severity":1,"message":"96","line":105,"column":41,"nodeType":"97","endLine":105,"endColumn":44},{"ruleId":"95","severity":1,"message":"98","line":110,"column":29,"nodeType":"97","endLine":110,"endColumn":84},{"ruleId":"82","severity":1,"message":"99","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":36},{"ruleId":"82","severity":1,"message":"86","line":7,"column":19,"nodeType":"84","messageId":"85","endLine":7,"endColumn":27},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Navigation' is defined but never used.","Identifier","unusedVar","'seterror' is assigned a value but never used.","'Popup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyNweets'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has a missing dependency: 'nweets.nweets'. Either include it or remove the dependency array. If 'setlist' needs the current value of 'nweets.nweets', you can also switch to useReducer instead of useState and read 'nweets.nweets' in the reducer.",["103"],"'setNewAccount' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [getMyNweets]",{"range":"108","text":"109"},"Update the dependencies array to be: [nweets.nweets]",{"range":"110","text":"111"},[1173,1175],"[getMyNweets]",[271,273],"[nweets.nweets]"]