[{"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\index.js":"1","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\App.js":"2","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\fbase.js":"3","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Router.js":"4","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\SignUp.js":"5","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Findpw.js":"6","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Addcard.js":"7","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Findemail.js":"8","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Addnotice.js":"9","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\AuthForm.js":"10","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Profile.js":"11","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Home.js":"12","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\CardDragList.js":"13","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Customerhelp.js":"14","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\AccountDelete.js":"15","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\UserHome.js":"16"},{"size":241,"mtime":1609825542236,"results":"17","hashOfConfig":"18"},{"size":1063,"mtime":1609750977819,"results":"19","hashOfConfig":"18"},{"size":742,"mtime":1609750977857,"results":"20","hashOfConfig":"18"},{"size":2467,"mtime":1609908119870,"results":"21","hashOfConfig":"18"},{"size":26991,"mtime":1609907340618,"results":"22","hashOfConfig":"18"},{"size":8212,"mtime":1609750977839,"results":"23","hashOfConfig":"18"},{"size":19795,"mtime":1609991052175,"results":"24","hashOfConfig":"18"},{"size":1061,"mtime":1609831006797,"results":"25","hashOfConfig":"18"},{"size":24792,"mtime":1609991096930,"results":"26","hashOfConfig":"18"},{"size":7508,"mtime":1609919826255,"results":"27","hashOfConfig":"18"},{"size":26622,"mtime":1609956923265,"results":"28","hashOfConfig":"18"},{"size":12165,"mtime":1609937597020,"results":"29","hashOfConfig":"18"},{"size":3300,"mtime":1609927986673,"results":"30","hashOfConfig":"18"},{"size":1025,"mtime":1609828780883,"results":"31","hashOfConfig":"18"},{"size":5058,"mtime":1609899773065,"results":"32","hashOfConfig":"18"},{"size":6628,"mtime":1609928622374,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ll13vf",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\index.js",[],["73","74"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\App.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\fbase.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Router.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\SignUp.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Findpw.js",["75"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Findpw = () => {\r\n    const [Proceeding, setProceeding] = useState(0);\r\n    const [email, setemail] = useState(\"\");\r\n    const [newpw, setnewpw] = useState();\r\n    const [newpw2, setnewpw2] = useState();\r\n    const [error, seterror] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setemail(value);\r\n        } else if(name === \"new-pw\"){\r\n            setnewpw(value);\r\n        } else if(name === \"new-pw-re\"){\r\n            setnewpw2(value);\r\n        }\r\n    };\r\n    const onDecrease = () => setProceeding(Proceeding - 1);\r\n    const onIncrease = () => setProceeding(Proceeding + 1);\r\n\r\n    return(\r\n        <>\r\n            <div id=\"wrap\" className={\"reset-pw0\" + Proceeding + \" reset-pw\"}>\r\n                <header id=\"header\">\r\n                    { Proceeding > 0 ? (\r\n                        <button onClick={onDecrease}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\r\n                    ) : (\r\n                        <>\r\n                            <Link to=\"/\">\r\n                                <button><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>            \r\n                            </Link>\r\n                        </>\r\n                    )}\r\n                </header>\r\n                <div id=\"content\" className=\"content\">\r\n                {\r\n                    (() => {\r\n                        if (Proceeding === 0) {\r\n                            return(\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>비밀번호 재설정🔏</h2>\r\n                                    </div>\r\n                                    <p>잊어버린 비밀번호를 새롭게 변경할 수 있어요 🧐</p>\r\n                                    <div className=\"form-box\">\r\n                                        <form>\r\n                                            <label for=\"user-id\">이메일 or 아이디<span className=\"required\">*</span></label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                name=\"email\"\r\n                                                id=\"user-id\" \r\n                                                className=\"input-basic\" \r\n                                                placeholder=\"이메일이나 아이디를 입력하세요\"\r\n                                                onChange={onChange}/>\r\n                                            <button></button>\r\n                                        </form>\r\n\r\n                                        <form className=\"btn-wrap\">\r\n                                            {email ? (\r\n                                                <button className=\"btn-basic next enable\" onClick={onIncrease}>다음</button>\r\n                                            ) : (\r\n                                                <button className=\"btn-basic next\">다음</button>\r\n                                            )}\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                        else if (Proceeding === 1) {\r\n                            return(\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>비밀번호 변경하기</h2>\r\n                                    </div>\r\n                                    <p><span className=\"user-id\">{email}</span> 님의 비밀번호를 변경하겠습니다<br/>\r\n                                        새로운 번호를 입력해주세요</p>\r\n                                    <div className=\"form-box\">\r\n                                        <div>\r\n                                            <form>\r\n                                                <label for=\"new-pw\">새 비밀번호<span className=\"required\">*</span></label>\r\n                                                <input \r\n                                                    type=\"password\" \r\n                                                    className=\"input-basic\" \r\n                                                    id=\"new-pw\"\r\n                                                    name=\"new-pw\"\r\n                                                    onChange={onChange}\r\n                                                    placeholder=\"새롭게 설정할 비밀번호를 입력하세요\"/>\r\n                                                <button type=\"submit\"></button>\r\n                                                <div className=\"message\">새롭게 설정할 비밀번호를 적어주세요</div>\r\n                                            </form>\r\n                                            <form>\r\n                                                <label for=\"new-pw\">새 비밀번호 확인</label>\r\n                                                <input \r\n                                                    type=\"password\" \r\n                                                    className=\"input-basic\" \r\n                                                    id=\"new-pw\" \r\n                                                    name=\"new-pw-re\"\r\n                                                    onChange={onChange}\r\n                                                    placeholder=\"새 비밀번호를 확인해주세요\"/>\r\n                                                <button type=\"submit\"></button>\r\n                                                <div className=\"message\">{error}</div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <form className=\"btn-wrap\">\r\n                                            {newpw && newpw2 ? (\r\n                                                <button className=\"btn-basic next enable\" onClick={onIncrease}>다음</button>\r\n                                            ) : (\r\n                                                <button className=\"btn-basic next\">다음</button>\r\n                                            )}\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                        else if(Proceeding === 2){\r\n                            return(\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>비밀번호 변경이 완료되었어요 :)</h2>\r\n                                    </div>\r\n                                    <p>새로운 비밀번호로 변경 완료되었습니다<br/>\r\n                                        바뀐 비밀번호로 다시 로그인해 주세요</p>\r\n                                    <div className=\"text-box\">\r\n                                        <p>e-mail</p>\r\n                                        <p className=\"user-id\">{email}</p>\r\n                                    </div>\r\n                                    <div className=\"form-box\">\r\n                                        <form className=\"btn-wrap\">\r\n                                            <Link to=\"/\">\r\n                                                <button className=\"btn-purple enable\">로그인 하기</button>\r\n                                            </Link>\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                    })()\r\n                } \r\n                </div>\r\n                <footer id=\"footer\"></footer>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Findpw;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Addcard.js",["76","77"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Findemail.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Addnotice.js",["78","79","80","81","82"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\AuthForm.js",["83"],"import { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [Proceeding, setProceeding] = useState(false);\r\n    const [focusemail, setfocusemail] = useState(false);\r\n    const [focuspw, setfocuspw] = useState(false);\r\n    const [pwshow, setpwshow] = useState(false);\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            data = await authService.signInWithEmailAndPassword(\r\n                email, \r\n                password\r\n            );\r\n            console.log(data);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    };\r\n    const toggleProceeding = () => setProceeding((prev) => !prev);\r\n    const onFocus = (event) => {\r\n        const {target: {name}} = event;\r\n        if(name === \"email\"){\r\n            setfocusemail((prev) => !prev);\r\n        } else if(name === \"password\"){\r\n            setfocuspw((prev) => !prev);\r\n        }\r\n    };\r\n    const togglepwshow = (event) => {\r\n        event.preventDefault();\r\n        setpwshow((prev) => !prev);\r\n    }\r\n    const onDelete = (event) => {\r\n        event.preventDefault();\r\n        setEmail(\"\");\r\n    }\r\n    return(\r\n        <>\r\n            <div id=\"wrap\" className={Proceeding ? \"login-pw join\" : \"login-email join\"}>\r\n                <header id=\"header\">\r\n                    <button onClick={toggleProceeding}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\r\n                </header>\r\n                <div id=\"content\" className=\"content\">\r\n                    \r\n                    {!Proceeding ? (\r\n                        <>\r\n                            <div className=\"logo-wrap\">\r\n                                <h1>Brity</h1>\r\n                                <p>admin</p>\r\n                            </div>\r\n                            <p>안녕하세요, 브리티 관리자 페이지 입니다😀<br></br>\r\n                                브리티와 함께 영역을 확장해볼까요?</p>\r\n                            <div className=\"form-box\">\r\n                                <form className={(focusemail ? \"selected\" : \"\") + (email ? \" filled\" : \"\")}>\r\n                                    <label for=\"user-email\">이메일</label>\r\n                                    <input \r\n                                        name=\"email\" \r\n                                        type=\"email\" \r\n                                        className=\"input-basic\"\r\n                                        id=\"user-email\" \r\n                                        placeholder=\"이메일이나 아이디를 입력하세요\"\r\n                                        value={email}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onFocus}\r\n                                        onChange={onChange}/>\r\n                                    <button onClick={onDelete}></button>\r\n                                    <div className=\"message\">{error}</div>\r\n                                </form>\r\n                                <div className=\"btn-wrap\">\r\n                                    <Link to=\"/Findemail\">\r\n                                        이메일을 잊으셨나요?\r\n                                    </Link>\r\n                                    {email ? (\r\n                                        <button className=\"btn-basic next enable\" onClick={toggleProceeding}>다음</button>\r\n                                    ) : (\r\n                                        <button className=\"btn-basic next\">다음</button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <a onClick={onSocialClick} name=\"google\" className=\"login-google btn-purple enable\">Continue with &nbsp;<img src={process.env.PUBLIC_URL + 'google.svg'} alt=\"google\"/></a>         \r\n                        </>\r\n                        ) : (\r\n                        <>\r\n                            <div className=\"logo-wrap\">\r\n                                <h2>Brity</h2>\r\n                                <p>admin</p>\r\n                            </div>\r\n                            <p className=\"user-id\">{email}</p>\r\n                            <div className=\"form-box\">\r\n                                <form className={(focuspw ? \"selected\" : \"\") + (pwshow ? \" pw-veiw\" : \" pw-hide\")}>\r\n                                    <label for=\"login-pw\">비밀번호</label>\r\n                                    <input \r\n                                        name=\"password\" \r\n                                        type={pwshow ? \"text\" : \"password\"}\r\n                                        className=\"input-basic\" \r\n                                        id=\"login-pw\"\r\n                                        placeholder=\"비밀번호를 입력하세요\"\r\n                                        value={password}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onFocus}\r\n                                        onChange={onChange}/>\r\n                                        <button onClick={togglepwshow}></button>\r\n                                        <div className=\"message\">{error}</div>\r\n                                </form>\r\n                                <div className=\"check-circle square\">\r\n                                    <input type=\"checkbox\" id=\"pw-save\"/>\r\n                                    <label for=\"pw-save\">로그인 유지하기</label>\r\n                                </div>\r\n                                <div className=\"btn-wrap\">\r\n                                    <Link to=\"/Findpw\">\r\n                                        비밀번호를 잊으셨나요?\r\n                                    </Link>\r\n                                    {password ? (\r\n                                        <button className=\"btn-basic next enable\" onClick={onSubmit}>다음</button>\r\n                                    ) : (\r\n                                        <button className=\"btn-basic next\">다음</button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    <Link to=\"/SignUp\">\r\n                        <button className=\"btn-purple fix-bottom enable\">Brity 계정 만들기</button>\r\n                    </Link>   \r\n                </div>\r\n            </div>\r\n            <footer id=\"footer\"></footer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Profile.js",["84","85","86","87","88"],"import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nconst Profile = ({refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [page, setpage] = useState(0);\r\n    const [fix, setfix] = useState(false);\r\n    const [email, setemail] = useState();\r\n    const [name, setname] = useState();\r\n    const [birth, setbirth] = useState();\r\n    const [gender, setgender] = useState();\r\n    const [address, setaddress] = useState();\r\n    const [subadd, setsubadd] = useState();\r\n    const [newpw, setnewpw] = useState();\r\n    const [newpwre, setnewpwre] = useState();\r\n    const ref = useRef(null);\r\n    const handleScroll = () => {\r\n        if(ref.current) {\r\n            setfix(ref.current.getBoundingClientRect().top <= 0);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        let userdata = dbService.collection(\"users\").doc(authService.currentUser.email);\r\n        let getdoc = userdata.get()\r\n            .then(doc => {\r\n                if(!doc.exists) {\r\n                    console.log(\"NO!\");\r\n                } else {\r\n                    console.log(\"DATA : \", doc.data());\r\n                    setemail(doc.data().email);\r\n                    setname(doc.data().name);\r\n                    setbirth(doc.data().birth);\r\n                    setgender(doc.data().gender);\r\n                    setaddress(doc.data().address);\r\n                    setsubadd(doc.data().subadd);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', () => handleScroll);\r\n        };\r\n    }, []);\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"name\"){\r\n            setname(value);\r\n        } else if(name === \"user-email\"){\r\n            setemail(value);\r\n        } else if(name === \"year\"){\r\n            let tbirth = Number(birth % 10000);\r\n            setbirth(value*10000 + tbirth);\r\n        } else if(name === \"month\"){\r\n            let tbirth = Number(birth/10000) + Number(birth % 100);\r\n            setbirth(value*100 + tbirth);\r\n        } else if(name === \"date\"){\r\n            let tbirth = Number(birth/100);\r\n            setbirth(value + tbirth);\r\n        } else if(name === \"detail-address\"){\r\n            setsubadd(value);\r\n        }\r\n    };\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n        refreshUser();\r\n    };\r\n    const gethome = () => history.push(\"/\");\r\n    const getdelete =() => history.push(\"/delete\");\r\n    const togglepage0 = () => setpage(0);\r\n    const togglepage1 = () => setpage(1);\r\n    const togglepage2 = () => setpage(2);\r\n    const togglepage = (num) => setpage(num);\r\n    const toggleclassName = () => {\r\n        if(page === 0) return \"ad-card account-menu account\"\r\n        else if(page === 1) return \"ad-card account-sns account\"\r\n        else if(page === 2) return \"account-info01 account\"\r\n        else if(page > 2) return \"account-info0\" + (page-1).toString + \" account account-info\"\r\n    }\r\n    const togglemenuName = () => {\r\n        if(page === 0) return \"🛠 내 계정 관리\"\r\n        else if(page === 1) return \"SNS 계정 정보\"\r\n        else if(page >= 2) return \"개인 정보\" \r\n    }\r\n    return (\r\n        <div id=\"wrap\" className={toggleclassName()}>\r\n            <header className={`header${fix ? ' fix' : ''}`} ref={ref}>\r\n                <div className=\"menu-wrap\">\r\n                    <button className=\"back\" onClick={togglepage0}><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-chevron-left.svg\"} alt=\"이전으로\"/></button>\r\n                    <p>{togglemenuName()}</p>\r\n                    <button className=\"close\" onClick={gethome}><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-times.svg\"} alt=\"닫기\"/></button>\r\n                </div>\r\n            </header>\r\n            <div className=\"content\">\r\n                { \r\n                    (() => {\r\n                    if (page === 0){\r\n                        return(\r\n                            <>\r\n                                <div className=\"form-box border-bottom\">\r\n                                    <form className=\"hover-style\"><button onClick={togglepage1}>SNS 계정 정보<img src={process.env.PUBLIC_URL + \"02-icon-03-18-px-outline-chevron-right.svg\"} alt=\"바로가기\"/></button></form>\r\n                                    <form className=\"hover-style\"><button onClick={togglepage2}>개인 정보<img src={process.env.PUBLIC_URL + \"02-icon-03-18-px-outline-chevron-right.svg\"} alt=\"바로가기\"/></button></form>\r\n                                </div>\r\n                                <div className=\"form-box\">\r\n                                    <form className=\"hover-style\"><Popup\r\n                                        trigger={<button>로그아웃</button>}\r\n                                        modal>\r\n                                        {close => (<div className=\"bg-opacity alert on\">\r\n                                            <div className=\"alert-wrap\">\r\n                                                <div className=\"alert-box\">\r\n                                                    <div className=\"text-box\">\r\n                                                        <p className=\"p-header\">😨 로그아웃 하실 건가요?</p>\r\n                                                        <p className=\"p-text\">정말로 로그아웃 하시는 거라면<br/>\r\n                                                            아쉽지만, 다음에 또 만나요 🙋‍♀️</p>\r\n                                                    </div>\r\n                                                    <div className=\"btn-box\">\r\n                                                        <button onClick={close}>취소</button>\r\n                                                        <button onClick={onLogOutClick}>로그아웃</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        )}\r\n                                    </Popup></form>\r\n                                    <form className=\"hover-style\"><button onClick={getdelete}>계정삭제</button></form>\r\n                                </div>\r\n                            </>\r\n                        );\r\n                    } else if(page === 1){\r\n                        return(\r\n                            <>\r\n                                <div className=\"form-box\">\r\n                                    <form>\r\n                                        <label for=\"insta-id\">Instagram</label>\r\n                                        <input id=\"insta-id\" type=\"text\" placeholder=\"아이디를 입력해주세요\"/>\r\n                                    </form>\r\n                                    <form>\r\n                                        <label for=\"facebook-id\">Facebook</label>\r\n                                        <input id=\"facebook-id\" type=\"text\" placeholder=\"아이디를 입력해주세요\"/>\r\n                                    </form>\r\n                                    <form>\r\n                                        <label for=\"youtube-id\">YouTube</label>\r\n                                        <input id=\"youtube-id\" type=\"text\" placeholder=\"채널 주소를 입력해주세요\"/>\r\n                                    </form>\r\n                                    <form>\r\n                                        <label for=\"tiktok-id\">TikTok</label>\r\n                                        <input id=\"tiktok-id\" type=\"text\" placeholder=\"아이디를 입력해주세요\"/>\r\n                                    </form>\r\n                                    <form>\r\n                                        <label for=\"twitter-id\">Twitter</label>\r\n                                        <input id=\"twitter-id\" type=\"text\" placeholder=\"아이디를 입력해주세요\"/>\r\n                                    </form>\r\n                                </div>\r\n                                <Popup\r\n                                    trigger={<button className=\"btn-purple fix-bottom enable\">🔒저장하기</button>}\r\n                                    modal\r\n                                    onClose={togglepage0}>\r\n                                        {close => (\r\n                                            <div className=\"bg-opacity alert on\">\r\n                                                <div className=\"alert-wrap\">\r\n                                                    <div className=\"alert-box small\">\r\n                                                        <div className=\"text-box\">\r\n                                                            <p className=\"p-header\">🔒 저장완료</p>\r\n                                                            <p className=\"p-text\">입력하신 정보가 저장 되었어요 👍</p>\r\n                                                        </div>\r\n                                                        <div className=\"btn-box\">\r\n                                                            <button onClick={close}>닫기</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                </Popup>\r\n                            </>\r\n                        );\r\n                    } else if(page === 2){\r\n                        return(\r\n                            <>\r\n                                <div className=\"form-box border-bottom\">\r\n                                    <div className=\"hover-style\">\r\n                                        <button>\r\n                                            <span>이름</span>\r\n                                            <p className=\"user-name\">{name}</p>\r\n                                            <img src={process.env.PUBLIC_URL + \"02-icon-03-18-px-outline-chevron-right.svg\"} alt=\"수정하기\" onClick={() => togglepage(3)}/>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"hover-style\">\r\n                                        <button>\r\n                                            <span>생년월일</span>\r\n                                            <p className=\"user-birth\">{birth}</p>\r\n                                            <img src={process.env.PUBLIC_URL + \"02-icon-03-18-px-outline-chevron-right.svg\"} alt=\"수정하기\" onClick={() => togglepage(4)}/>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"hover-style\">\r\n                                        <button>\r\n                                            <span>성별</span>\r\n                                            <p className=\"user-gender\">{gender ? \"남성\" : \"여성\"}</p>\r\n                                            <img src={process.env.PUBLIC_URL + \"02-icon-03-18-px-outline-chevron-right.svg\"} alt=\"수정하기\" onClick={() => togglepage(5)}/>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"hover-style\">\r\n                                        <button>\r\n                                            <span>주소</span>\r\n                                            <p className=\"user-address\">\r\n                                                <span>{address}</span>\r\n                                                <span>{subadd}</span>\r\n                                            </p>\r\n                                            <img src={process.env.PUBLIC_URL + \"02-icon-03-18-px-outline-chevron-right.svg\"} alt=\"수정하기\" onClick={() => togglepage(6)}/>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-box border-bottom\">\r\n                                    <div className=\"hover-style\">\r\n                                        <button>\r\n                                            <span>이메일 주소</span>\r\n                                            <p className=\"user-email\">{email}</p>\r\n                                            <img src={process.env.PUBLIC_URL + \"02-icon-03-18-px-outline-chevron-right.svg\"} alt=\"수정하기\" onClick={() => togglepage(7)}/>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"hover-style\">\r\n                                        <button>\r\n                                            <span>비밀번호</span>\r\n                                            <p className=\"user-pw\">••••••••</p>\r\n                                            <img src={process.env.PUBLIC_URL + \"02-icon-03-18-px-outline-chevron-right.svg\"} alt=\"수정하기\" onClick={() => togglepage(8)}/>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </>\r\n                        );\r\n                    } else if(page === 3){\r\n                        return(\r\n                            <>\r\n                                <h2>이름 수정하기</h2>\r\n                                <p>🖍 수정할 내용을 입력해 주세요</p>\r\n                                <div className=\"form-box\">\r\n                                    <form>\r\n                                        <label for=\"user-name\">이름</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"user-name\"\r\n                                            name=\"name\"\r\n                                            className=\"input-basic\"\r\n                                            placeholder={name}\r\n                                            onChange={onChange}/>\r\n                                        <button></button>\r\n                                        <div className=\"message\">이름을 입력해주세요</div>\r\n                                    </form>\r\n                                </div>\r\n                                <button className=\"btn-purple fix-bottom enable\" onClick={() => togglepage(2)}>🔒저장하기</button>\r\n                            </>\r\n                        );\r\n                    } else if(page === 4){\r\n                        return(\r\n                            <>\r\n                                <h2>생일 수정하기</h2>\r\n                                <p>개인정보는 공개되지 않는 정보에요 🤫<br/>\r\n                                    🖍 수정할 내용을 입력해 주세요</p>\r\n                                <div className=\"form-box\">\r\n                                    <p>생일</p>\r\n                                    <div className=\"birth\">\r\n                                        <form>\r\n                                            <label for=\"year\"></label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                id=\"year\"\r\n                                                name=\"year\"\r\n                                                min=\"1900\"\r\n                                                max=\"2020\"\r\n                                                onChange={onChange}\r\n                                                className=\"input-basic\"\r\n                                                placeholder=\"연도\"/>\r\n                                        </form>\r\n                                        <form>\r\n                                            <label for=\"month\"></label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                id=\"month\"\r\n                                                name=\"month\"\r\n                                                min=\"1\"\r\n                                                max=\"12\"\r\n                                                onChange={onChange}\r\n                                                className=\"input-basic\"\r\n                                                placeholder=\"월\"/>\r\n                                        </form>\r\n                                        <form>\r\n                                            <label for=\"date\"></label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                id=\"date\"\r\n                                                name=\"date\"\r\n                                                min=\"1\"\r\n                                                max=\"31\"\r\n                                                onChange={onChange}\r\n                                                className=\"input-basic\"\r\n                                                placeholder=\"일\"/>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn-purple fix-bottom enable\" onClick={() => togglepage(2)}>🔒저장하기</button>\r\n                            </>\r\n                        );\r\n                    } else if(page === 5){\r\n                        return(\r\n                            <>\r\n                                <h2>성별 수정하기</h2>\r\n                                <p>성별</p>\r\n                                <div className=\"form-box hover-style\">\r\n                                    <form className=\"check-circle\">\r\n                                        <input type=\"checkbox\" id=\"male\"/>\r\n                                        <label for=\"male\">남자</label>\r\n                                    </form>\r\n                                    <form className=\"check-circle\">\r\n                                        <input type=\"checkbox\" id=\"female\"/>\r\n                                        <label for=\"female\">여자</label>\r\n                                    </form>\r\n                                    <form className=\"check-circle\">\r\n                                        <input type=\"checkbox\" id=\"none\"/>\r\n                                        <label for=\"none\">선택안함</label>\r\n                                    </form>\r\n                                </div>\r\n                                <button className=\"btn-purple fix-bottom enable\" onClick={() => togglepage(2)}>🔒저장하기</button>\r\n                            </>\r\n                        );\r\n                    } else if(page === 6){\r\n                        return(\r\n                            <>\r\n                                <h2>주소 수정하기</h2>\r\n                                <p>개인정보는 공개되지 않는 정보에요 🤫<br/>\r\n                                    🖍 수정할 내용을 입력해 주세요</p>\r\n                                <div className=\"form-box\">\r\n                                    <form className=\"search-address\">\r\n                                        <label for=\"address\">주소</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"input-basic\"\r\n                                            id=\"address\"\r\n                                            placeholder=\"우편번호를 입력하세요\"/>\r\n                                        <button><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-search.svg\"} alt=\"검색\"/></button>\r\n                                        <div className=\"message\">우편번호를 입력해주세요</div>\r\n                                    </form>\r\n                                    <form>\r\n                                        <label for=\"detail-address\"></label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"input-basic\"\r\n                                            id=\"detail-address\"\r\n                                            name=\"detail-address\"\r\n                                            onChange={onChange}\r\n                                            placeholder=\"상세주소를 입력하세요\" />\r\n                                        <button></button>\r\n                                        <div className=\"message\">상세 주소를 입력해주세요</div>\r\n                                    </form>\r\n                                </div>\r\n                                <button className=\"btn-purple fix-bottom enable\" onClick={() => togglepage(2)}>🔒저장하기</button>\r\n                            </>\r\n                        );\r\n                    } else if(page === 7){\r\n                        return(\r\n                            <>\r\n                                <h2>이메일 수정하기</h2>\r\n                                <p>🖍 수정할 내용을 입력해 주세요</p>\r\n                                <div className=\"form-box\">\r\n                                    <form>\r\n                                        <label for=\"user-email\">이메일</label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"input-basic\"\r\n                                            id=\"user-email\"\r\n                                            name=\"user-email\"\r\n                                            placeholder={email} />\r\n                                        <button></button>\r\n                                        <div className=\"message\">이메일 형식이 올바르지 않아요</div>\r\n                                    </form>\r\n                                </div>\r\n                                <button className=\"btn-purple fix-bottom enable\" onClick={() => togglepage(2)}>🔒저장하기</button>\r\n                            </>\r\n                        );\r\n                    } else if(page === 8){\r\n                        return(\r\n                            <>\r\n                                <h2>비밀번호 수정하기</h2>\r\n                                <p>정보를 안전하게 보호하기 위해<br/>\r\n                                    본인임을 인증해 주세요</p>\r\n                                <div className=\"form-box\">\r\n                                    <form>\r\n                                        <label for=\"user-pw\">비밀번호</label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"input-basic\"\r\n                                            id=\"user-email\"\r\n                                            placeholder=\"\" />\r\n                                        <button></button>\r\n                                        <div className=\"message\">비밀번호가 일치하지 않아요</div>\r\n                                    </form>\r\n                                </div>\r\n                                <button className=\"btn-basic next\" onClick={() => togglepage(9)}>계속</button>\r\n                            </>\r\n                        );\r\n                    } else if(page === 9){\r\n                        return(\r\n                            <>\r\n                                <h2>비밀번호 수정하기</h2>\r\n                                <p>새로운 비밀번호로 변경하겠습니다 🤓<br/>\r\n                                    앞으로 로그인할 때 변경한 비밀번호를 입력해 주세요</p>\r\n                                <div className=\"form-box\">\r\n                                    <form>\r\n                                        <label for=\"new-user-pw\">새 비밀번호<span className=\"required\">*</span></label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"input-basic\"\r\n                                            id=\"new-user-pw\"\r\n                                            placeholder=\"새롭게 설정할 비밀번호를 입력하세요\" />\r\n                                        <button></button>\r\n                                        <div className=\"message\">8자 이상, 소문자 숫자가 포함되어야 합니다</div>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"form-box\">\r\n                                    <form>\r\n                                        <label for=\"new-user-pw-re\">새 비밀번호 확인<span class=\"required\">*</span></label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"input-basic\"\r\n                                            id=\"new-user-pw-re\"\r\n                                            placeholder=\"새 비밀번호를 확인해주세요\" />\r\n                                        <button></button>\r\n                                        <div className=\"message\">비밀번호가 일치하지 않아요</div>\r\n                                    </form>\r\n                                </div>\r\n                                <button className=\"btn-purple fix-bottom enable\" onClick={() => togglepage(2)}>🔒저장하기</button>\r\n                            </>\r\n                        );\r\n                    }\r\n                })()\r\n            }     \r\n            </div>\r\n            <footer className=\"footer\"></footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Home.js",["89","90"],"import { dbService } from \"fbase\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport Popup from 'reactjs-popup';\r\nimport CardDragList from \"components/CardDragList\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Home = ({refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [nweets, setNweets] = useState([]);\r\n    const [isDelete ,setisDelete] = useState(false);\r\n    const [fix, setfix] = useState(false);\r\n    const [delcards, setdelcards] = useState([]); \r\n    const ref = useRef(null);\r\n    const handleScroll = () => {\r\n        if(ref.current) {\r\n            setfix(ref.current.getBoundingClientRect().top <= 0);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n                id:doc.id, \r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', () => handleScroll);\r\n        };\r\n    }, []);\r\n    const toggleaddcard1 = () => history.push(\"/addcard\");\r\n    const toggleaddcard2 = () => history.push(\"/addnotice\");\r\n    const togglemenu1 = () => history.push(\"/Profile\");\r\n    const togglemenu2 = () => history.push(\"/help\");\r\n    const toggleisDelete = () => setisDelete((prev) => !prev);\r\n    const toggleuser = () => history.push(\"/user\");\r\n    const adddelcard = (cardid) => {\r\n        let cardArray = delcards;\r\n        if(!cardArray.includes(cardid)){\r\n            cardArray = [cardid,\r\n                ...cardArray];\r\n        }\r\n        else cardArray = cardArray.filter(id => id!==cardid);\r\n        setdelcards(cardArray);\r\n    }\r\n    const alldelcard = () => {\r\n        if(delcards.length === nweets.length){\r\n            setdelcards([]);\r\n        } else {\r\n            let cardArray = [];\r\n            nweets.map((card) => {\r\n                cardArray.push(card.id);\r\n            });\r\n            setdelcards(cardArray);\r\n        }\r\n    }\r\n    const emptydelcard = () => setdelcards([]);\r\n    const deletecards = async () => {\r\n        let cardArray = delcards;\r\n        await cardArray.map((card) => {\r\n            dbService.doc(`nweets/${card}`).delete();\r\n        });\r\n        setdelcards([]);\r\n        history.push(\"/\");\r\n    }\r\n    return (\r\n        <div id=\"wrap\" className=\"admin-home\">\r\n            <header className={`header${fix ? ' fix' : ''}`} ref={ref}>\r\n                <div className=\"menu-wrap home-menu-btn\">\r\n                    <Popup\r\n                        trigger={<p className=\"user-name\">{userObj.displayName}</p>}\r\n                        modal>\r\n                        { close => (\r\n                            <div className=\"bg-opacity alert on\">\r\n                                <div className=\"alert-wrap\">\r\n                                    <div className=\"alert-box\">\r\n                                        <div className=\"text-box\">\r\n                                            <p className=\"p-header\">@{userObj.displayName}</p>\r\n                                            <p className=\"p-text\">링크 주소가 복사되었습니다.<br/>\r\n                                                바로 이동할까요?</p>\r\n                                        </div>\r\n                                        <div className=\"btn-box\">\r\n                                            <button onClick={close}>닫기</button>\r\n                                            <button onClick={toggleuser}>바로이동👉</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </Popup>\r\n                    <p><span className=\"admin\">Admin</span>with by <u>brity</u></p>\r\n                    <button type=\"submit\" className=\"menu\">\r\n                        <Popup\r\n                            trigger={<img src={process.env.PUBLIC_URL + \"02-icon-01-outline-bars.svg\"} alt=\"menu\"/>}\r\n                            modal\r\n                            closeOnDocumentClick>\r\n                            <nav className=\"bg-opacity on\" style={{height: \"calc(100% - 200px)\"}}>\r\n                                <div className=\"sheet-wrap nav-sheet\">\r\n                                    <div className=\"sheet-box\">\r\n                                        <button className=\"drag-btn\"><span></span></button>\r\n                                        <div className=\"sheet-name\">메뉴</div>\r\n                                        <ul className=\"sheet-list\">\r\n                                            <li><button onClick={togglemenu1}>🛠 내 계정 관리</button></li>\r\n                                            <li><button onClick={togglemenu2}>🧑‍🔧 고객 도움</button></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </nav>\r\n                        </Popup>\r\n                    </button>\r\n                </div>\r\n            </header>\r\n            <div className=\"content\">\r\n                {\r\n                    (nweets.length > 0 ? (\r\n                        <>\r\n                            <div className=\"del-text-box\">\r\n                                <Popup\r\n                                    trigger={<button><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-check-000.svg\"} alt=\"체크\"/>카드선택 및 삭제</button>}\r\n                                    closeOnDocumentClick={false}\r\n                                    onOpen={toggleisDelete}\r\n                                    onClose={() => {\r\n                                        toggleisDelete();\r\n                                        emptydelcard();\r\n                                    }}>\r\n                                    { close => (\r\n                                        <div className=\"card-del-wrap on\">\r\n                                            <div className=\"card-del-box\">\r\n                                                <button onClick={close}><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-times.svg\"} alt=\"닫기\"/></button>\r\n                                                {delcards.length > 0 ? (\r\n                                                    <p className=\"del-message \"><span className=\"count\">{delcards.length}</span>개의 카드가 선택 되었어요</p>\r\n                                                ) : (\r\n                                                    <p className=\"del-message \"><span className=\"count\"></span>삭제할 카드를 선택하세요</p>\r\n                                                )}\r\n                                                <form className=\"check-circle-all-del\">\r\n                                                    <input type=\"checkbox\" id=\"all-del\" onClick={alldelcard}/>\r\n                                                    <label for=\"all-del\" className=\"all-del\" >전체 선택</label>\r\n                                                </form>\r\n                                                <div className=\"btn-wrap\">\r\n                                                    { delcards.length > 0 ? (\r\n                                                        <>\r\n                                                            <button className=\"btn-purple enable\" onClick={emptydelcard}>선택 해제</button>\r\n                                                            <button className=\"btn-purple-filled enable\" onClick={deletecards}>선택 삭제하기</button>\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        <>\r\n                                                            <button className=\"btn-purple\">선택 해제</button>\r\n                                                            <button className=\"btn-purple-filled\">선택 삭제하기</button>\r\n                                                        </>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </Popup>\r\n                                \r\n                            </div>\r\n                            <div className=\"card-wrap\">\r\n                                {!isDelete ? (\r\n                                    <CardDragList nweets={nweets}/>\r\n                                ) : (\r\n                                    nweets.map((nweet) => (\r\n                                        <div className=\"card del\">\r\n                                            <h3>{nweet.subtitle}</h3>\r\n                                            <button onClick={() => adddelcard(nweet.id)}>\r\n                                                { delcards.includes(nweet.id) ? (\r\n                                                    <img src={process.env.PUBLIC_URL + \"02-icon-01-outline-check-000.svg\"} alt=\"삭제 체크\" />\r\n                                                ) : (\r\n                                                    <img src={process.env.PUBLIC_URL + \"02-icon-02-solid-check-circle.svg\"} alt=\"삭제 체크\" />\r\n                                                )}\r\n                                                </button>\r\n                                            <p>{nweet.title}</p>\r\n                                        </div>\r\n                                    ))\r\n                                )}\r\n                                \r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"empty-box\">\r\n                                <p>💁</p>\r\n                                <p>생성된 카드가 아직 없어요</p>\r\n                                <p>버튼을 눌러 새로운 카드를<br/>\r\n                                    만들어 볼까요?</p>\r\n                            </div>\r\n                        </>\r\n                    ))\r\n                }\r\n                <div className={\"ad-card-btn\" + (!nweets.length ? \" emrty-ani\" : \"\")}>\r\n                    <img src={process.env.PUBLIC_URL + \"02-icon-01-outline-plus.svg\"} alt=\"카드만들기\"/>\r\n                    <Popup\r\n                        trigger={<p>카드만들기</p>}\r\n                        modal\r\n                        >\r\n                        { close => (\r\n                            <div className=\"bg-opacity on\" style={{height: \"calc(100% - 200px)\"}}>\r\n                                <div className=\"sheet-wrap ad-card\">\r\n                                    <div className=\"sheet-box\">\r\n                                        <button className=\"drag-btn\"><span></span></button>\r\n                                        <div className=\"sheet-name\">메뉴</div>\r\n                                        <ul className=\"sheet-list\">\r\n                                            <li><button onClick={event => {\r\n                                                close();\r\n                                                toggleaddcard1();\r\n                                                }}>🔗 링크 카드 만들기</button></li>\r\n                                            <li><button onClick={event => {\r\n                                                close();\r\n                                                toggleaddcard2();\r\n                                                }}>📢 공지 카드 만들기</button></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </Popup>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\CardDragList.js",["91"],"import React, { useEffect, useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\r\n\r\nconst CardDragList = ({nweets, isDelete}) => {\r\n    const [Cardlist, setlist] = useState([]);\r\n    useEffect(() => {\r\n        setlist(nweets);\r\n    }, []);\r\n    const reorder = (list, startIndex, endIndex) => {\r\n        const result = Array.from(list);\r\n        const [removed] = result.splice(startIndex, 1);\r\n        result.splice(endIndex, 0, removed);\r\n\r\n        return result;\r\n    };\r\n\r\n    const getItemStyle = (isDragging, draggableStyle) => ({\r\n        userSelect: \"none\",\r\n        boxShadow: isDragging ? \"0 8px 15px 0 rgba(0, 0, 0, 0.2), 0 5px 8px 0 rgba(0, 0, 0, 0.3)\" : \"\",\r\n        background: isDragging && \"rgba(52, 52, 52, 0.8)\",\r\n\r\n        ...draggableStyle\r\n    });\r\n\r\n    const getListStyle = isDraggingOver => ({\r\n    });\r\n\r\n    const onDragEnd = (result) => {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const Cardlists = reorder(\r\n            Cardlist,\r\n            result.source.index,\r\n            result.destination.index\r\n        );\r\n        setlist(Cardlists);\r\n    };\r\n    return (\r\n        <>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId=\"droppable\">\r\n                {(provided, snapshot) => (\r\n                    <div\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                        style={getListStyle(snapshot.isDraggingOver)}>\r\n                        {Cardlist.map((nweet, index) => (\r\n                            <Draggable key={nweet.id} draggableId={nweet.id} index={index}>\r\n                                {(provided, snapshot) => (\r\n                                    <div\r\n                                        className={\"card\" + (isDelete ? \" del\" : \"\")}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                        style={getItemStyle(\r\n                                            snapshot.isDragging,\r\n                                            provided.draggableProps.style\r\n                                        )}>\r\n                                        <h3>{nweet.subtitle}</h3>\r\n                                        {isDelete ? (\r\n                                            <button><img src={process.env.PUBLIC_URL + \"02-icon-02-solid-check-circle.svg\"} alt=\"삭제 체크\"></img></button>\r\n                                        ) : (\r\n                                            <button><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-arrows.svg\"} alt=\"이동화살표\"></img></button>\r\n                                        )}       \r\n                                        <p>{nweet.title}</p>\r\n                                    </div>\r\n                                )}\r\n                            </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardDragList;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Customerhelp.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\AccountDelete.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\UserHome.js",["92"],"import { dbService } from \"fbase\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nconst UserHome = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    const [fix, setfix] = useState(false);\r\n    const [check, setcheck] = useState(false);\r\n    const ref = useRef(null);\r\n    const handleScroll = () => {\r\n        if(ref.current) {\r\n            setfix(ref.current.getBoundingClientRect().top <= 0);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n                id:doc.id, \r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', () => handleScroll);\r\n        };\r\n    }, []);\r\n    return(\r\n        <div id=\"wrap\" className=\"user-home admin-home\">\r\n            <header className={`header${fix ? ' fix' : ''}`} ref={ref}>\r\n                <div className=\"menu-wrap home-menu-btn\">\r\n                    <Popup\r\n                        trigger={<p className=\"user-name\">{userObj.displayName}</p>}\r\n                        modal>\r\n                        { close => (\r\n                            <div className=\"bg-opacity alert on\">\r\n                                <div className=\"alert-wrap\">\r\n                                    <div className=\"alert-box small\">\r\n                                        <div className=\"text-box\">\r\n                                            <p className=\"p-header\">@{userObj.displayName}</p>\r\n                                            <p className=\"p-text\">링크 주소가 복사되었어요</p>\r\n                                        </div>\r\n                                        <div className=\"btn-box\">\r\n                                            <button onClick={close}>닫기</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </Popup>\r\n                    <p>with by <u>brity</u></p>\r\n                    <button className=\"menu\">\r\n                        <Popup\r\n                            trigger={<img src={process.env.PUBLIC_URL + \"02-icon-01-outline-bars.svg\"} alt=\"menu\"/>}\r\n                            modal\r\n                            closeOnDocumentClick>\r\n                            <nav className=\"bg-opacity on\" style={{height: \"calc(100% - 200px)\"}}>\r\n                                <div className=\"sheet-wrap sns-sheet\">\r\n                                    <div className=\"sheet-box\">\r\n                                        <button className=\"drag-btn\"><span></span></button>\r\n                                        <div className=\"sheet-name\">SNS</div>\r\n                                        <ul className=\"sheet-list\">\r\n                                            { check ? (\r\n                                                <>\r\n                                                    <li>\r\n                                                        <button>\r\n                                                            <img src={process.env.PUBLIC_URL + \"instagram-icon.svg\"} alt=\"instagram\"/>\r\n                                                        </button>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <button>\r\n                                                            <img src={process.env.PUBLIC_URL + \"facebook-icon.svg\"} alt=\"facebook\"/>\r\n                                                        </button>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <button>\r\n                                                            <img src={process.env.PUBLIC_URL + \"youtube-icon.svg\"} alt=\"youtube\"/>\r\n                                                        </button>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <button>\r\n                                                            <img src={process.env.PUBLIC_URL + \"tiktok-icon.svg\"} alt=\"Tiktok\"/>\r\n                                                        </button>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <button>\r\n                                                            <img src={process.env.PUBLIC_URL + \"twitter-icon.svg\"} alt=\"twitter\"/>\r\n                                                        </button>\r\n                                                    </li>\r\n                                                </>\r\n                                            ) : (\r\n                                                <li className=\"none-sns-message\">현재 등록된 SNS 주소가 없어요😯</li>\r\n                                            )}\r\n                                        </ul>\r\n                                        <p>go to. <u>Brity</u></p>\r\n                                    </div>\r\n                                </div>\r\n                            </nav>\r\n                        </Popup>\r\n                    </button>\r\n                </div>\r\n            </header>\r\n            <div className=\"content\">\r\n                {\r\n                    (nweets.length > 0 ? (\r\n                        nweets.map((nweet) => (\r\n                            <div className=\"card\">\r\n                                <h3>{nweet.subtitle}</h3>\r\n                                <p>{nweet.title}</p>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"empty-box\">\r\n                                <p>💁</p>\r\n                                <p>생성된 카드가 아직 없어요</p>\r\n                                <p>버튼을 눌러 새로운 카드를<br/>\r\n                                    만들어 볼까요?</p>\r\n                            </div>\r\n                        </>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserHome;",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":9,"column":19,"nodeType":"99","messageId":"100","endLine":9,"endColumn":27},{"ruleId":"97","severity":1,"message":"101","line":13,"column":12,"nodeType":"99","messageId":"100","endLine":13,"endColumn":15},{"ruleId":"102","severity":1,"message":"103","line":179,"column":100,"nodeType":"104","endLine":179,"endColumn":127},{"ruleId":"97","severity":1,"message":"105","line":16,"column":12,"nodeType":"99","messageId":"100","endLine":16,"endColumn":23},{"ruleId":"97","severity":1,"message":"106","line":16,"column":25,"nodeType":"99","messageId":"100","endLine":16,"endColumn":39},{"ruleId":"97","severity":1,"message":"107","line":79,"column":19,"nodeType":"99","messageId":"100","endLine":79,"endColumn":32},{"ruleId":"102","severity":1,"message":"103","line":158,"column":49,"nodeType":"104","endLine":158,"endColumn":60},{"ruleId":"102","severity":1,"message":"103","line":241,"column":104,"nodeType":"104","endLine":241,"endColumn":131},{"ruleId":"108","severity":1,"message":"109","line":105,"column":29,"nodeType":"110","endLine":105,"endColumn":113},{"ruleId":"97","severity":1,"message":"111","line":16,"column":12,"nodeType":"99","messageId":"100","endLine":16,"endColumn":17},{"ruleId":"97","severity":1,"message":"112","line":16,"column":19,"nodeType":"99","messageId":"100","endLine":16,"endColumn":27},{"ruleId":"97","severity":1,"message":"113","line":17,"column":12,"nodeType":"99","messageId":"100","endLine":17,"endColumn":19},{"ruleId":"97","severity":1,"message":"114","line":17,"column":21,"nodeType":"99","messageId":"100","endLine":17,"endColumn":31},{"ruleId":"97","severity":1,"message":"115","line":26,"column":13,"nodeType":"99","messageId":"100","endLine":26,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":53,"column":31,"nodeType":"118","messageId":"119","endLine":53,"endColumn":33},{"ruleId":"116","severity":1,"message":"117","line":62,"column":36,"nodeType":"118","messageId":"119","endLine":62,"endColumn":38},{"ruleId":"120","severity":1,"message":"121","line":8,"column":8,"nodeType":"122","endLine":8,"endColumn":10,"suggestions":"123"},{"ruleId":"97","severity":1,"message":"124","line":8,"column":19,"nodeType":"99","messageId":"100","endLine":8,"endColumn":27},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'seterror' is assigned a value but never used.","Identifier","unusedVar","'fix' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'attachment2' is assigned a value but never used.","'setAttachment2' is assigned a value but never used.","'attachmentUrl' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'newpw' is assigned a value but never used.","'setnewpw' is assigned a value but never used.","'newpwre' is assigned a value but never used.","'setnewpwre' is assigned a value but never used.","'getdoc' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'nweets'. Either include it or remove the dependency array. If 'setlist' needs the current value of 'nweets', you can also switch to useReducer instead of useState and read 'nweets' in the reducer.","ArrayExpression",["127"],"'setcheck' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [nweets]",{"range":"130","text":"131"},[283,285],"[nweets]"]