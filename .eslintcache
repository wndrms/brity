[{"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\index.js":"1","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\App.js":"2","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\fbase.js":"3","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Router.js":"4","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Findemail.js":"5","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Findpw.js":"6","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\SignUp.js":"7","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Navigation.js":"8","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Auth.js":"9","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Home.js":"10","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Profile.js":"11","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\AuthForm.js":"12","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\CardDragList.js":"13","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Addcard.js":"14"},{"size":242,"mtime":1609288775280,"results":"15","hashOfConfig":"16"},{"size":1063,"mtime":1609113789163,"results":"17","hashOfConfig":"16"},{"size":742,"mtime":1609113789170,"results":"18","hashOfConfig":"16"},{"size":1747,"mtime":1609310512027,"results":"19","hashOfConfig":"16"},{"size":8219,"mtime":1609151173198,"results":"20","hashOfConfig":"16"},{"size":8373,"mtime":1609151362571,"results":"21","hashOfConfig":"16"},{"size":26517,"mtime":1609245470956,"results":"22","hashOfConfig":"16"},{"size":627,"mtime":1609113789167,"results":"23","hashOfConfig":"16"},{"size":1040,"mtime":1609113789181,"results":"24","hashOfConfig":"16"},{"size":5945,"mtime":1609310602871,"results":"25","hashOfConfig":"16"},{"size":2042,"mtime":1609113789182,"results":"26","hashOfConfig":"16"},{"size":7694,"mtime":1609254159609,"results":"27","hashOfConfig":"16"},{"size":3014,"mtime":1609290042474,"results":"28","hashOfConfig":"16"},{"size":4697,"mtime":1609311313377,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ll13vf",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\index.js",[],["64","65"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\App.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\fbase.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Router.js",["66"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Findemail.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Findpw.js",["67","68"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Findpw = () => {\r\n    const [Proceeding, setProceeding] = useState(0);\r\n    const [email, setemail] = useState(\"\");\r\n    const [newpw, setnewpw] = useState();\r\n    const [newpw2, setnewpw2] = useState();\r\n    const [error, seterror] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setemail(value);\r\n        } else if(name === \"new-pw\"){\r\n            setnewpw(value);\r\n        } else if(name === \"new-pw-re\"){\r\n            setnewpw2(value);\r\n        }\r\n    };\r\n    const onDecrease = () => setProceeding(Proceeding - 1);\r\n    const onIncrease = () => setProceeding(Proceeding + 1);\r\n\r\n    return(\r\n        <>\r\n            <div id=\"wrap\" className={\"reset-pw0\" + Proceeding + \" reset-pw\"}>\r\n                <header id=\"header\">\r\n                    { Proceeding > 0 ? (\r\n                        <button onClick={onDecrease}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\r\n                    ) : (\r\n                        <>\r\n                            <Link to=\"/\">\r\n                                <button><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>            \r\n                            </Link>\r\n                        </>\r\n                    )}\r\n                </header>\r\n                <div id=\"content\" className=\"content\">\r\n                {\r\n                    (() => {\r\n                        if (Proceeding === 0) {\r\n                            return(\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>비밀번호 재설정🔏</h2>\r\n                                    </div>\r\n                                    <p>잊어버린 비밀번호를 새롭게 변경할 수 있어요 🧐</p>\r\n                                    <div className=\"form-box\">\r\n                                        <form>\r\n                                            <label for=\"user-id\">이메일 or 아이디<span className=\"required\">*</span></label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                name=\"email\"\r\n                                                id=\"user-id\" \r\n                                                className=\"input-basic\" \r\n                                                placeholder=\"이메일이나 아이디를 입력하세요\"\r\n                                                onChange={onChange}/>\r\n                                            <button type=\"submit\"></button>\r\n                                            <div className=\"message\">다음 버튼을 누르면 인증번호가 발송됩니다.</div>\r\n                                        </form>\r\n\r\n                                        <form className=\"btn-wrap\">\r\n                                            {email ? (\r\n                                                <button className=\"btn-basic next enable\" onClick={onIncrease}>다음</button>\r\n                                            ) : (\r\n                                                <button className=\"btn-basic next\">다음</button>\r\n                                            )}\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                        else if (Proceeding === 1) {\r\n                            return(\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>비밀번호 변경하기</h2>\r\n                                    </div>\r\n                                    <p><span className=\"user-id\">{email}</span> 님의 비밀번호를 변경하겠습니다<br/>\r\n                                        새로운 번호를 입력해주세요</p>\r\n                                    <div className=\"form-box\">\r\n                                        <div>\r\n                                            <form>\r\n                                                <label for=\"new-pw\">새 비밀번호<span className=\"required\">*</span></label>\r\n                                                <input \r\n                                                    type=\"password\" \r\n                                                    className=\"input-basic\" \r\n                                                    id=\"new-pw\"\r\n                                                    name=\"new-pw\"\r\n                                                    onChange={onChange}\r\n                                                    placeholder=\"새롭게 설정할 비밀번호를 입력하세요\"/>\r\n                                                <button type=\"submit\"></button>\r\n                                                <div className=\"message\">새롭게 설정할 비밀번호를 적어주세요</div>\r\n                                            </form>\r\n                                            <form>\r\n                                                <label for=\"new-pw\">새 비밀번호 확인</label>\r\n                                                <input \r\n                                                    type=\"password\" \r\n                                                    className=\"input-basic\" \r\n                                                    id=\"new-pw\" \r\n                                                    name=\"new-pw-re\"\r\n                                                    onChange={onChange}\r\n                                                    placeholder=\"새 비밀번호를 확인해주세요\"/>\r\n                                                <button type=\"submit\"></button>\r\n                                                <div className=\"message\">{error}</div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <form className=\"btn-wrap\">\r\n                                            {newpw && newpw2 ? (\r\n                                                <button className=\"btn-basic next enable\" onClick={onIncrease}>다음</button>\r\n                                            ) : (\r\n                                                <button className=\"btn-basic next\">다음</button>\r\n                                            )}\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                        else if(Proceeding === 2){\r\n                            return(\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>비밀번호 변경이 완료되었어요 :)</h2>\r\n                                    </div>\r\n                                    <p>새로운 비밀번호로 변경 완료되었습니다<br/>\r\n                                        바뀐 비밀번호로 다시 로그인해 주세요</p>\r\n                                    <div className=\"text-box\">\r\n                                        <p>e-mail</p>\r\n                                        <p className=\"user-id\">{email}</p>\r\n                                    </div>\r\n                                    <div className=\"form-box\">\r\n                                        <form className=\"btn-wrap\">\r\n                                            <Link to=\"/\">\r\n                                                <button className=\"btn-purple enable\">로그인 하기</button>\r\n                                            </Link>\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                    })()\r\n                } \r\n                </div>\r\n                <footer id=\"footer\"></footer>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Findpw;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\SignUp.js",["69","70","71"],"import React, { useState, useEffect } from \"react\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport DaumPostcode from \"react-daum-postcode\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst SignUp = () => {\r\n    const history = useHistory();\r\n    const [Proceeding, setProceeding] = useState(0);\r\n    const [name, setname] = useState(\"\");\r\n    const [phnum, setphnum] = useState();\r\n    const [userid, setuserid] = useState(\"\");\r\n    const [password, setpassword] = useState(\"\");\r\n    const [year, setyear] = useState(\"\");\r\n    const [month, setmonth] = useState(\"\");\r\n    const [date, setdate] = useState(\"\");\r\n    const [search, setsearch] = useState(false);\r\n    const [address, setaddress] = useState();\r\n    const [subaddress, setsubaddress] = useState();\r\n    const [error, seterror] = useState();\r\n    const [focusname, setfocusname] = useState(false);\r\n    const [focusph, setfocusph] = useState(false);\r\n    const [focusid, setfocusid] = useState(false);\r\n    const [focuspw, setfocuspw] = useState(false);\r\n    const [focusyear, setfocusyear] = useState(false);\r\n    const [focusmonth, setfocusmonth] = useState(false);\r\n    const [focusdate, setfocusdate] = useState(false);\r\n    const [focussubadd, setfocussubadd] = useState(false);\r\n    const [pwshow, setpwshow] = useState(false);\r\n    const [all, setall] = useState(false);\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"name\"){\r\n            setname(value);\r\n        } else if(name === \"ph-number\"){\r\n            setphnum(value);\r\n        } else if(name === \"user-id\"){\r\n            setuserid(value);\r\n        } else if(name === \"pw\"){\r\n            setpassword(value);\r\n        } else if(name === \"year\"){\r\n            setyear(value);\r\n        } else if(name === \"month\"){\r\n            setmonth(value);\r\n        } else if(name === \"date\"){\r\n            setdate(value);\r\n        } else if(name === \"detail-address\"){\r\n            setsubaddress(value);\r\n        }\r\n    };\r\n    const onDelete = (event) => {\r\n        setname(\"\");\r\n        console.log(name);\r\n    }\r\n    const onFocus = (event) => {\r\n        const {target: {name}} = event;\r\n        if(name === \"name\"){\r\n            setfocusname((prev) => !prev);\r\n        } else if(name === \"ph-number\"){\r\n            setfocusph((prev) => !prev);\r\n        } else if(name === \"user-id\"){\r\n            setfocusid((prev) => !prev);\r\n        } else if(name === \"pw\"){\r\n            setfocuspw((prev) => !prev);\r\n        } else if(name === \"year\"){\r\n            setfocusyear((prev) => !prev);\r\n        } else if(name === \"month\"){\r\n            setfocusmonth((prev) => !prev);\r\n        } else if(name === \"date\"){\r\n            setfocusdate((prev) => !prev);\r\n        } else if(name === \"detail-address\"){\r\n            setfocussubadd((prev) => !prev);\r\n        }\r\n    };\r\n    const decresProceeding = () => setProceeding(Proceeding - 1);\r\n    const incresProceeding = () => setProceeding(Proceeding + 1);\r\n    const togglesearch = () => setsearch((prev) => !prev);\r\n    const handleComplete = (data) => {\r\n        let fullAddress = data.address;\r\n        let extraAddress = '';\r\n\r\n        if (data.addressType === 'R') {\r\n            if (data.bname !== '') {\r\n                extraAddress += data.bname;\r\n            }\r\n            if (data.buildingName !== ''){\r\n                extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        setaddress(fullAddress);\r\n        togglesearch();\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            data = await authService.createUserWithEmailAndPassword(\r\n                userid,\r\n                password\r\n            );\r\n            console.log(data);\r\n        } catch (err) {\r\n            seterror(err.message);\r\n        }\r\n        history.push(\"/\");\r\n    };\r\n    const togglepwshow = (event) => {\r\n        event.preventDefault();\r\n        setpwshow((prev) => !prev);\r\n    }\r\n    const toggleall = () => setall((prev) => !prev);\r\n    return(\r\n        <>\r\n            <div id=\"wrap\" className={\"sign-up-0\" + (Proceeding+1) + \" sign-up\"}>\r\n                <header id=\"header\">\r\n                    { Proceeding > 0 ? (\r\n                        <button onClick={decresProceeding}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\r\n                    ) : (\r\n                        <>\r\n                            <Link to=\"/\">\r\n                                <button onClick={decresProceeding}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\r\n                            </Link> \r\n                        </>\r\n                    )}\r\n                </header>\r\n                <div id=\"content\" className=\"content\">\r\n                {\r\n                    (() => {\r\n                        if(Proceeding === 0) {\r\n                            return(\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>Brity</h2>\r\n                                        <p>admin</p>\r\n                                    </div>\r\n                                    <p>입력하신 이메일로 등록한 계정이 없습니다<br/>\r\n                                        바로 계정 만들기를 시작하겠습니다 😉</p>\r\n                                    <div className=\"form-box\">\r\n                                        <form className={(focusname ? \"selected\" : \"\") + (name ? \" filled\" : \"\")}>\r\n                                            <label for=\"user-name\">이름<span className=\"required\">*</span></label>\r\n                                            <input \r\n                                                type=\"text\"\r\n                                                className=\"input-basic\" \r\n                                                id=\"user-name\"\r\n                                                name=\"name\"\r\n                                                value={name}\r\n                                                onChange={onChange}\r\n                                                onBlur={onFocus}\r\n                                                onFocus={onFocus}\r\n                                                placeholder=\"본인이름을 입력하세요\"/>\r\n                                            <button onClick={onDelete}></button>\r\n                                            <div className=\"message\">{error}</div>\r\n                                        </form>\r\n                                        <form className={(focusph ? \"selected\" : \"\") + (phnum ? \" filled\" : \"\")}>\r\n                                            <label for=\"ph-number\">휴대폰 번호<span className=\"required\">*</span></label>\r\n                                            <input \r\n                                                type=\"number\" \r\n                                                className=\"input-basic\" \r\n                                                id=\"ph-number\" \r\n                                                name=\"ph-number\"\r\n                                                value={phnum}\r\n                                                onChange={onChange}\r\n                                                onBlur={onFocus}\r\n                                                onFocus={onFocus}\r\n                                                placeholder=\"휴대폰 번호를 입력하세요\"/>\r\n                                            <button></button>\r\n                                        </form>\r\n                                        <div className=\"btn-wrap\">\r\n                                            {name && phnum ? (\r\n                                                <button className=\"btn-basic next enable\" onClick={incresProceeding}>다음</button>\r\n                                            ) : (\r\n                                                <button className=\"btn-basic next\">다음</button>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    <Link to=\"/\">\r\n                                        <button className=\"btn-purple fix-bottom enable\">로그인 하기</button>\r\n                                    </Link>\r\n                                </>\r\n                            );\r\n                        }\r\n                        else if (Proceeding === 1){\r\n                            return (\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>아이디 만들기</h2>\r\n                                    </div>\r\n                                    <p>지금 설정하신 아이디으로 링크가 생성됩니다.<br/>\r\n                                        나중엔 변경 불가합니다 🔏</p>\r\n                                    <div className=\"form-box\">\r\n                                        <form className={(focusid ? \"selected\" : \"\") + (userid ? \" filled\" : \"\")}>\r\n                                            <label for=\"user-id\">아이디(닉네임)<span className=\"required\">*</span></label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                className=\"input-basic\" \r\n                                                id=\"user-id\"\r\n                                                name=\"user-id\"\r\n                                                value={userid}\r\n                                                onChange={onChange}\r\n                                                onBlur={onFocus}\r\n                                                onFocus={onFocus}\r\n                                                placeholder=\"아이디를 입력하세요\"/>\r\n                                            <button></button>\r\n                                            <div className=\"message\">변경 불가 사항🔒</div>\r\n                                        </form>\r\n                                        <div className=\"btn-wrap\">\r\n                                            {userid ? (\r\n                                                <button className=\"btn-basic next enable\" onClick={incresProceeding}>다음</button>\r\n                                            ) : (\r\n                                                <button className=\"btn-basic next\">다음</button>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                        else if (Proceeding === 2){\r\n                            return (\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>비밀번호 만들기</h2>\r\n                                    </div>\r\n                                    <p>로그인에 필요한 비밀번호를 만드세요</p>\r\n                                    <div className=\"form-box\">\r\n                                        <form className={(focuspw ? \"selected\" : \"\") + (pwshow ? \" pw-veiw\" : \" pw-hide\")}>\r\n                                            <label for=\"pw\">비밀번호<span className=\"required\">*</span></label>\r\n                                            <input \r\n                                                type=\"password\" \r\n                                                className=\"input-basic\" \r\n                                                name=\"pw\"\r\n                                                value={password}\r\n                                                onChange={onChange}\r\n                                                onBlur={onFocus}\r\n                                                onFocus={onFocus}\r\n                                                id=\"pw\" \r\n                                                placeholder=\"비밀번호를 입력하세요\"/>\r\n                                            <button onClick={togglepwshow}></button>\r\n                                            <div className=\"message\">🤫소문자, 숫자 포함 8자리 이상</div>\r\n                                        </form>\r\n                                        <div className=\"btn-wrap\">\r\n                                            {password ? (\r\n                                                <button className=\"btn-basic next enable\" onClick={incresProceeding}>다음</button>\r\n                                            ) : (\r\n                                                <button className=\"btn-basic next\">다음</button>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                        else if (Proceeding === 3){\r\n                            return (\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>생일 등록하기</h2>\r\n                                    </div>\r\n                                    <p>개인정보는 공개되지 않는 정보에요 🤫<br/>\r\n                                        정보는 나중에 얼마든지 수정할 수 있어요</p>\r\n                                    <div className=\"form-box\">\r\n                                        <p>생일</p>\r\n                                        <form className={(focusyear ? \"selected\" : \"\") + (year ? \" filled\" : \"\")}>\r\n                                            <div>\r\n                                                <label for=\"year\"></label>\r\n                                                <input \r\n                                                    type=\"number\" \r\n                                                    id=\"year\" \r\n                                                    min=\"1900\" \r\n                                                    max=\"2020\" \r\n                                                    className=\"input-basic\" \r\n                                                    name=\"year\"\r\n                                                    onChange={onChange}\r\n                                                    onBlur={onFocus}\r\n                                                    onFocus={onFocus}\r\n                                                    placeholder=\"연도\"/> \r\n                                            </div>\r\n                                            <div>\r\n                                                <label for=\"month\"></label>\r\n                                                <input \r\n                                                    type=\"number\" \r\n                                                    id=\"month\" \r\n                                                    min=\"1\" \r\n                                                    max=\"12\" \r\n                                                    className=\"input-basic\" \r\n                                                    name=\"month\"\r\n                                                    onChange={onChange}\r\n                                                    onBlur={onFocus}\r\n                                                    onFocus={onFocus}\r\n                                                    placeholder=\"월\"/>\r\n                                            </div>\r\n                                            <div>\r\n                                                <label for=\"date\"></label>\r\n                                                <input \r\n                                                    type=\"number\" \r\n                                                    id=\"date\" \r\n                                                    min=\"1\" \r\n                                                    max=\"31\" \r\n                                                    className=\"input-basic\"\r\n                                                    name=\"date\"\r\n                                                    onChange={onChange}\r\n                                                    onBlur={onFocus}\r\n                                                    onFocus={onFocus}\r\n                                                    placeholder=\"일\"/>\r\n                                            </div>\r\n                                        </form>\r\n                                        <div className=\"btn-wrap\">\r\n                                            {(year && month && date) ? (\r\n                                                <button className=\"btn-basic next enable\" onClick={incresProceeding}>다음</button>\r\n                                            ) : (\r\n                                                <button className=\"btn-basic next\">다음</button>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                        else if (Proceeding === 4) {\r\n                            return(\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>주소 등록하기</h2>\r\n                                    </div>\r\n                                    <p>개인정보는 공개되지 않는 정보에요 🤫<br/>\r\n                                        정보는 나중에 얼마든지 수정할 수 있어요</p>\r\n                                    <div className=\"form-box\">\r\n                                        <p>주소</p>\r\n                                        <form className=\"ico-serch\">\r\n                                            { !search ? (\r\n                                                <>\r\n                                                    <label for=\"address\"></label>\r\n                                                    <input \r\n                                                        type=\"text\" \r\n                                                        className=\"input-basic\" \r\n                                                        id=\"address\" \r\n                                                        value={address}\r\n                                                        placeholder=\"우편번호를 입력하세요\"/>\r\n                                                    <button onClick={togglesearch}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-search.svg'} alt=\"검색\"/></button>\r\n                                                </>\r\n                                            ) : (\r\n                                                <DaumPostcode \r\n                                                    onComplete={handleComplete}/>\r\n                                            )}\r\n                                            <div className=\"message\">우편번호를 입력해주세요</div>\r\n                                        </form>\r\n                                        <form className={(focussubadd ? \"selected\" : \"\") + (subaddress ? \" filled\" : \"\")}>\r\n                                            <label for=\"detail-address\"></label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                class=\"input-basic\" \r\n                                                id=\"detail-address\" \r\n                                                name=\"detail-address\"\r\n                                                value={subaddress}\r\n                                                onChange={onChange}\r\n                                                onBlur={onFocus}\r\n                                                onFocus={onFocus}\r\n                                                placeholder=\"상세주소를 입력하세요\"/>\r\n                                            <button></button>\r\n                                            <div className=\"message\">상세주소를 입력해주세요</div>\r\n                                        </form>\r\n                                        <form className=\"btn-wrap\">\r\n                                            {(address && subaddress) ? (\r\n                                                <button className=\"btn-basic next enable\" onClick={incresProceeding}>다음</button>\r\n                                            ) : (\r\n                                                <button className=\"btn-basic next\">다음</button>\r\n                                            )}\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                        else if (Proceeding === 5) {\r\n                            return(\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>약관 동의</h2>\r\n                                    </div>\r\n                                    <p>회원님의 개인 정보를 안전하게 보호합니다 🤫<br/>\r\n                                        모든 약관에 동의하시고, 새로운 서비스를 경험해보세요</p>\r\n                                    <div className=\"form-box\">\r\n                                        <form>\r\n                                            <ul>\r\n                                                <li className=\"check-circle\">\r\n                                                    {all ? (\r\n                                                        <input type=\"checkbox\" id=\"survice-check\" checked/>\r\n                                                    ) : (\r\n                                                        <input type=\"checkbox\" id=\"survice-check\"/>\r\n                                                    )}\r\n                                                    <label for=\"survice-check\">서비스 이용 약관 운영 및 동의<span class=\"required\">(필수)</span></label>\r\n                                                </li>\r\n                                                <li className=\"check-circle\">\r\n                                                    {all ? (\r\n                                                        <input type=\"checkbox\" id=\"info-check\" checked/>\r\n                                                    ) : (\r\n                                                        <input type=\"checkbox\" id=\"info-check\"/>\r\n                                                    )}\r\n                                                    <label for=\"info-check\">개인정보 수집 및 이용 동의<span class=\"required\">(필수)</span></label>\r\n                                                </li>\r\n                                                <li className=\"check-circle\">\r\n                                                    {all ? (\r\n                                                        <input type=\"checkbox\" id=\"ad-check\" checked/>\r\n                                                    ) : (\r\n                                                        <input type=\"checkbox\" id=\"ad-check\"/>\r\n                                                    )}\r\n                                                    <label for=\"ad-check\">마케팅 정보SMS, 이메일 수신 동의<span>(선택)</span></label>\r\n                                                </li>\r\n                                                <li className=\"check-circle all\">\r\n                                                    <input type=\"checkbox\" id=\"all\" onChange={toggleall}/>\r\n                                                    <label for=\"all\">모두 동의하고 계속할래요</label>\r\n                                                    <div className=\"message\">{error}</div>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </form>\r\n                                        <form className=\"btn-wrap\">\r\n                                            {(address && subaddress) ? (\r\n                                                <button className=\"btn-basic next enable\" onClick={incresProceeding}>다음</button>\r\n                                            ) : (\r\n                                                <button className=\"btn-basic next\">다음</button>\r\n                                            )}\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                        else if(Proceeding === 6) {\r\n                            return(\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>Brity에 오신 것을<br/>환영합니다 :)</h2>\r\n                                    </div>\r\n                                    <p>다음 정보로 회원가입이 완료되었습니다 🤩</p>\r\n                                    <div className=\"text-box\">\r\n                                        <p>e-mail</p>\r\n                                        <p>{userid}</p>\r\n                                        <p>link / ID</p>\r\n                                        <p>link.milleniz.com/{userid}</p>\r\n                                    </div>\r\n                                    <form className=\"btn-wrap\">\r\n                                        <button className=\"btn-purple enable\" onClick={onSubmit}>다음</button>\r\n                                    </form>\r\n                                </>\r\n                            );\r\n                        }\r\n                    })()\r\n                }\r\n                </div>\r\n                <footer id=\"footer\"></footer>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignUp;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Navigation.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Auth.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Home.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Profile.js",["72"],"import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n        refreshUser();\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n        }\r\n        refreshUser();\r\n    };\r\n    const getMyNweets = async() => {\r\n        const nweets = await dbService\r\n            .collection(\"nweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\")\r\n            .get();\r\n            console.log(nweets.docs.map((doc) => doc.data()));\r\n    };\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input \r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    onChange={onChange}\r\n                    className=\"formInput\" />\r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Update Profile\" \r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}/>\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\AuthForm.js",["73","74","75","76","77"],"import { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [Proceeding, setProceeding] = useState(false);\r\n    const [focusemail, setfocusemail] = useState(false);\r\n    const [focuspw, setfocuspw] = useState(false);\r\n    const [pwshow, setpwshow] = useState(false);\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            }\r\n            console.log(data);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    };\r\n    const toggleProceeding = () => setProceeding((prev) => !prev);\r\n    const onFocus = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setfocusemail((prev) => !prev);\r\n        } else if(name === \"password\"){\r\n            setfocuspw((prev) => !prev);\r\n        }\r\n    };\r\n    const togglepwshow = (event) => {\r\n        event.preventDefault();\r\n        setpwshow((prev) => !prev);\r\n    }\r\n    const onDelete = (event) => {\r\n        event.preventDefault();\r\n        setEmail(\"\");\r\n    }\r\n    return(\r\n        <>\r\n            <div id=\"wrap\" className={Proceeding ? \"login-pw\" : \"login-email\"}>\r\n                <header id=\"header\">\r\n                    <button onClick={toggleProceeding}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\r\n                </header>\r\n                <div id=\"content\" className=\"content\">\r\n                    \r\n                    {!Proceeding ? (\r\n                        <>\r\n                            <div className=\"logo-wrap\">\r\n                                <h1>Brity</h1>\r\n                                <p>admin</p>\r\n                            </div>\r\n                            <p>안녕하세요, 브리티 관리자 페이지 입니다😀<br></br>\r\n                                브리티와 함께 영역을 확장해볼까요?</p>\r\n                            <div className=\"form-box\">\r\n                                <form className={(focusemail ? \"selected\" : \"\") + (email ? \" filled\" : \"\")}>\r\n                                    <label for=\"user-email\">이메일</label>\r\n                                    <input \r\n                                        name=\"email\" \r\n                                        type=\"email\" \r\n                                        className=\"input-basic\"\r\n                                        id=\"user-email\" \r\n                                        placeholder=\"이메일이나 아이디를 입력하세요\"\r\n                                        value={email}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onFocus}\r\n                                        onChange={onChange}/>\r\n                                    <button onClick={onDelete}></button>\r\n                                    <div className=\"message\">{error}</div>\r\n                                </form>\r\n                                <div className=\"btn-wrap\">\r\n                                    <Link to=\"/Findemail\">\r\n                                        <a>이메일을 잊으셨나요?</a>\r\n                                    </Link>\r\n                                    {email ? (\r\n                                        <button className=\"btn-basic next enable\" onClick={toggleProceeding}>다음</button>\r\n                                    ) : (\r\n                                        <button className=\"btn-basic next\">다음</button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <a onClick={onSocialClick} name=\"google\" className=\"login-google btn-purple enable\">Continue with &nbsp;<img src={process.env.PUBLIC_URL + 'google.svg'} alt=\"google\"/></a>         \r\n                        </>\r\n                        ) : (\r\n                        <>\r\n                            <div className=\"logo-wrap\">\r\n                                <h2>Brity</h2>\r\n                                <p>admin</p>\r\n                            </div>\r\n                            <p className=\"user-id\">{email}</p>\r\n                            <div className=\"form-box\">\r\n                                <form className={(focuspw ? \"selected\" : \"\") + (pwshow ? \" pw-veiw\" : \" pw-hide\")}>\r\n                                    <label for=\"login-pw\">비밀번호</label>\r\n                                    <input \r\n                                        name=\"password\" \r\n                                        type={pwshow ? \"text\" : \"password\"}\r\n                                        className=\"input-basic\" \r\n                                        id=\"login-pw\"\r\n                                        placeholder=\"비밀번호를 입력하세요\"\r\n                                        value={password}\r\n                                        onChange={onChange}/>\r\n                                        <button onClick={togglepwshow}></button>\r\n                                        <div className=\"message\">{error}</div>\r\n                                </form>\r\n                                <div className=\"check-circle square\">\r\n                                    <input type=\"checkbox\" id=\"pw-save\"/>\r\n                                    <label for=\"pw-save\">로그인 유지하기</label>\r\n                                </div>\r\n                                <div className=\"btn-wrap\">\r\n                                    <Link to=\"/Findpw\">\r\n                                        <a>비밀번호를 잊으셨나요?</a>\r\n                                    </Link>\r\n                                    {password ? (\r\n                                        <button className=\"btn-basic next enable\" onClick={onSubmit}>다음</button>\r\n                                    ) : (\r\n                                        <button className=\"btn-basic next\">다음</button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    <Link to=\"/SignUp\">\r\n                        <button className=\"btn-purple fix-bottom enable\">Brity 계정 만들기</button>\r\n                    </Link>   \r\n                </div>\r\n            </div>\r\n            <footer id=\"footer\"></footer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\CardDragList.js",["78","79"],"import React, { useEffect, useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\r\n\r\nconst CardDragList = (nweets) => {\r\n    const [Cardlist, setlist] = useState([]);\r\n    useEffect(() => {\r\n        setlist(nweets.nweets);\r\n    }, []);\r\n    const reorder = (list, startIndex, endIndex) => {\r\n        const result = Array.from(list);\r\n        const [removed] = result.splice(startIndex, 1);\r\n        result.splice(endIndex, 0, removed);\r\n\r\n        return result;\r\n    };\r\n    const grid = 8;\r\n\r\n    const getItemStyle = (isDragging, draggableStyle) => ({\r\n        userSelect: \"none\",\r\n        boxShadow: isDragging ? \"0 8px 15px 0 rgba(0, 0, 0, 0.2), 0 5px 8px 0 rgba(0, 0, 0, 0.3)\" : \"\",\r\n        background: isDragging && \"rgba(52, 52, 52, 0.8)\",\r\n\r\n        ...draggableStyle\r\n    });\r\n\r\n    const getListStyle = isDraggingOver => ({\r\n    });\r\n\r\n    const onDragEnd = (result) => {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const Cardlists = reorder(\r\n            Cardlist,\r\n            result.source.index,\r\n            result.destination.index\r\n        );\r\n        setlist(Cardlists);\r\n    };\r\n    console.log(Cardlist);\r\n    return (\r\n        <>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId=\"droppable\">\r\n                {(provided, snapshot) => (\r\n                    <div\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                        style={getListStyle(snapshot.isDraggingOver)}>\r\n                        {Cardlist.map((nweet, index) => (\r\n                            <Draggable key={nweet.id} draggableId={nweet.id} index={index}>\r\n                                {(provided, snapshot) => (\r\n                                    <div\r\n                                        className=\"card\"\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                        style={getItemStyle(\r\n                                            snapshot.isDragging,\r\n                                            provided.draggableProps.style\r\n                                        )} href={\"http://\" + nweet.text}>\r\n                                        <h3>📢</h3>\r\n                                        <button><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-arrows.svg\"} alt=\"이동화살표\"></img></button>\r\n                                        <p>{nweet.text}</p>\r\n                                    </div>\r\n                                )}\r\n                            </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardDragList;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Addcard.js",["80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":18},{"ruleId":"85","severity":1,"message":"89","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"90","line":9,"column":19,"nodeType":"87","messageId":"88","endLine":9,"endColumn":27},{"ruleId":"85","severity":1,"message":"89","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"91","line":25,"column":12,"nodeType":"87","messageId":"88","endLine":25,"endColumn":22},{"ruleId":"85","severity":1,"message":"92","line":26,"column":12,"nodeType":"87","messageId":"88","endLine":26,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":38,"column":8,"nodeType":"95","endLine":38,"endColumn":10,"suggestions":"96"},{"ruleId":"85","severity":1,"message":"97","line":8,"column":24,"nodeType":"87","messageId":"88","endLine":8,"endColumn":37},{"ruleId":"85","severity":1,"message":"98","line":55,"column":31,"nodeType":"87","messageId":"88","endLine":55,"endColumn":36},{"ruleId":"99","severity":1,"message":"100","line":104,"column":41,"nodeType":"101","endLine":104,"endColumn":44},{"ruleId":"99","severity":1,"message":"100","line":113,"column":29,"nodeType":"101","endLine":113,"endColumn":113},{"ruleId":"99","severity":1,"message":"100","line":142,"column":41,"nodeType":"101","endLine":142,"endColumn":44},{"ruleId":"93","severity":1,"message":"102","line":8,"column":8,"nodeType":"95","endLine":8,"endColumn":10,"suggestions":"103"},{"ruleId":"85","severity":1,"message":"104","line":16,"column":11,"nodeType":"87","messageId":"88","endLine":16,"endColumn":15},{"ruleId":"85","severity":1,"message":"105","line":1,"column":21,"nodeType":"87","messageId":"88","endLine":1,"endColumn":35},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Navigation' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'seterror' is assigned a value but never used.","'focusmonth' is assigned a value but never used.","'focusdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyNweets'. Either include it or remove the dependency array.","ArrayExpression",["108"],"'setNewAccount' is assigned a value but never used.","'value' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'nweets.nweets'. Either include it or remove the dependency array. If 'setlist' needs the current value of 'nweets.nweets', you can also switch to useReducer instead of useState and read 'nweets.nweets' in the reducer.",["109"],"'grid' is assigned a value but never used.","'storageService' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [getMyNweets]",{"range":"114","text":"115"},"Update the dependencies array to be: [nweets.nweets]",{"range":"116","text":"117"},[1210,1212],"[getMyNweets]",[278,280],"[nweets.nweets]"]