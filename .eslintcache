[{"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\index.js":"1","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\App.js":"2","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\fbase.js":"3","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\Router.js":"4","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\SignUp.js":"5","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\Navigation.js":"6","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\CertForm.js":"7","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Home.js":"8","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Auth.js":"9","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Profile.js":"10","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\CardDragList.js":"11","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\AuthForm.js":"12"},{"size":230,"mtime":1606495515000,"results":"13","hashOfConfig":"14"},{"size":1020,"mtime":1606646088000,"results":"15","hashOfConfig":"14"},{"size":722,"mtime":1606454209000,"results":"16","hashOfConfig":"14"},{"size":1596,"mtime":1608008511036,"results":"17","hashOfConfig":"14"},{"size":10533,"mtime":1608188032525,"results":"18","hashOfConfig":"14"},{"size":611,"mtime":1607264218000,"results":"19","hashOfConfig":"14"},{"size":1729,"mtime":1608095199705,"results":"20","hashOfConfig":"14"},{"size":3661,"mtime":1607649892817,"results":"21","hashOfConfig":"14"},{"size":1009,"mtime":1607579080818,"results":"22","hashOfConfig":"14"},{"size":1979,"mtime":1606495403000,"results":"23","hashOfConfig":"14"},{"size":2734,"mtime":1607910564373,"results":"24","hashOfConfig":"14"},{"size":5296,"mtime":1608201346887,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ocvamv",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\index.js",[],["54","55"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\App.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\fbase.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\Router.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\SignUp.js",["56"],"import React, { useState, useEffect } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst SignUp = () => {\r\n    const [Proceeding, setProceeding] = useState(0);\r\n    const [error, seterror] = useState();\r\n    const [counter, setcounter] = useState(0);\r\n    useEffect( () => {\r\n        const timer = (counter > 0) && setInterval(() => setcounter(counter - 1), 1000);\r\n        return () => clearInterval(timer);\r\n    }, [counter]);\r\n    const decresProceeding = () => setProceeding(Proceeding - 1);\r\n    const incresProceeding = () => setProceeding(Proceeding + 1);\r\n    const toggleCertProceeding = () => {\r\n        setProceeding(Proceeding + 1);\r\n        setcounter(180);\r\n    }\r\n    return(\r\n        <>\r\n            <div id=\"wrap\">\r\n                <header id=\"header\">\r\n                    { Proceeding > 0 ? (\r\n                        <button onClick={decresProceeding}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\r\n                    ) : (\r\n                        <>\r\n                            <Link to=\"/\">\r\n                                <button onClick={decresProceeding}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\r\n                            </Link> \r\n                        </>\r\n                    )}\r\n                </header>\r\n                <div id=\"content\" className=\"content\">\r\n                    <div className=\"logo-wrap\">\r\n                        <h2>Brity</h2>\r\n                        <p>admin</p>\r\n                    </div>\r\n                    {\r\n                        (() => {\r\n                            if(Proceeding === 0) {\r\n                                return(\r\n                                    <>\r\n                                        <p>입력하신 이메일로 등록한 계정이 없습니다<br/>\r\n                                            바로 계정 만들기를 시작하겠습니다 😉</p>\r\n                                        <div className=\"form-box\">\r\n                                            <form action=\"\">\r\n                                                <label for=\"name\">이름</label>\r\n                                                <input type=\"text\" className=\"input-basic\" placeholder=\"본인이름을 입력하세요\"/>\r\n                                                <button type=\"button\"></button>\r\n                                                <div className=\"message\">{error}</div>\r\n                                            </form>\r\n                                            <form action=\"\">\r\n                                                <label for=\"ph-number\">휴대폰 번호</label>\r\n                                                <input type=\"text\" className=\"input-basic\" placeholder=\"휴대폰 번호를 입력하세요\"/>\r\n                                                <button type=\"button\"></button>\r\n                                                <div className=\"message\">다음 버튼을 누르면 인증번호가 발송됩니다.</div>\r\n                                            </form>\r\n                                            <div className=\"btn-wrap\">\r\n                                                <button className=\"btn-basic next\" onClick={toggleCertProceeding}>다음</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Link to=\"/\">\r\n                                            <button className=\"btn-purple fix-bottom\">로그인 하기</button>\r\n                                        </Link>\r\n                                    </>\r\n                                );\r\n                            }\r\n                            else if (Proceeding === 1){\r\n                                return (\r\n                                    <>\r\n                                        <p>인증번호가 발송되었습니다 💌<br/>\r\n                                            오지 않았다면, 입력하신 번호를 다시 확인해주세요</p>\r\n                                        <div className=\"form-box\">\r\n                                            <div className=\"certification-number\">\r\n                                                <form action=\"\">\r\n                                                    <label for=\"name\">인증번호</label>\r\n                                                    <input type=\"text\" className=\"input-basic\" placeholder=\"\"/>\r\n                                                    <button type=\"button\"></button>\r\n                                                    <div className=\"message\">{error}</div>\r\n                                                </form>\r\n                                                <form action=\"\">\r\n                                                    <label for=\"name\"></label>\r\n                                                    <input type=\"submit\" className=\"input-basic\" value=\"인증하기\"/>\r\n                                                    <button type=\"button\"></button>\r\n                                                    <div className=\"message\">입력시간 {Math.floor(counter/60)} : {counter%60}</div>\r\n                                                </form>\r\n                                            </div>\r\n                                            <div className=\"btn-wrap\">\r\n                                                <button className=\"btn-basic next\" onClick={incresProceeding}>다음</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                );\r\n                            }\r\n                            else if (Proceeding === 2){\r\n                                return (\r\n                                    <>\r\n                                        <p>지금 설정하신 닉네임으로 링크가 생성됩니다.<br/>\r\n                                            나중엔 변경 불가합니다 🔏</p>\r\n                                        <div className=\"form-box\">\r\n                                            <form action=\"\">\r\n                                                <label for=\"number\" className=\"required\">닉네임(아이디)</label>\r\n                                                <input type=\"text\" className=\"input-basic\" placeholder=\"닉네임을 입력하세요\"/>\r\n                                                <input type=\"button\"></input>\r\n                                                <div className=\"message\">변경 불가 사항🔒</div>\r\n                                            </form>\r\n\r\n                                            <div className=\"btn-wrap\">\r\n                                                <button className=\"btn-basic next\" onClick={incresProceeding}>다음</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                );\r\n                            }\r\n                            else if (Proceeding === 3){\r\n                                return (\r\n                                    <>\r\n                                        <p>로그인에 필요한 비밀번호를 만드세요</p>\r\n                                        <div className=\"form-box\">\r\n                                            <form action=\"\">\r\n                                                <label for=\"number\" className=\"required\">비밀번호</label>\r\n                                                <input type=\"text\" className=\"input-basic\" placeholder=\"비밀번호를 입력하세요\"/>\r\n                                                <button type=\"button\"></button>\r\n                                                <div className=\"message\">🤫소문자, 숫자 포함 8자리 이상</div>\r\n                                            </form>\r\n                                            <div className=\"btn-wrap\">\r\n                                                <button className=\"btn-basic next\" onClick={incresProceeding}>다음</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                );\r\n                            }\r\n                            else if (Proceeding === 4){\r\n                                return (\r\n                                    <>\r\n                                        <p>개인정보는 공개되지 않는 정보에요 🤫<br/>\r\n                                            정보는 나중에 얼마든지 수정할 수 있어요</p>\r\n                                        <div className=\"form-box\">\r\n                                            <p>생일</p>\r\n                                            <form action=\"\">\r\n                                                <div>\r\n                                                    <label for=\"number\"></label>\r\n                                                    <input type=\"number\" className=\"input basic\" placeholder=\"연도\"/> \r\n                                                </div>\r\n                                                <div>\r\n                                                    <label for=\"number\"></label>\r\n                                                    <input type=\"number\" className=\"input basic\" placeholder=\"월\"/>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <label for=\"number\"></label>\r\n                                                    <input type=\"number\" className=\"input basic\" placeholder=\"일\"/>\r\n                                                </div>\r\n                                            </form>\r\n                                            <div className=\"btn-wrap\">\r\n                                                <button className=\"btn-basic next\">다음</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                );\r\n                            }\r\n                        })()\r\n                    }\r\n                </div>\r\n                <footer id=\"footer\"></footer>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignUp;","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\Navigation.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\CertForm.js",["57"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Home.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Auth.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Profile.js",["58"],"import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n        refreshUser();\n    };\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n        }\n        refreshUser();\n    };\n    const getMyNweets = async() => {\n        const nweets = await dbService\n            .collection(\"nweets\")\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\")\n            .get();\n            console.log(nweets.docs.map((doc) => doc.data()));\n    };\n    useEffect(() => {\n        getMyNweets();\n    }, []);\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input \n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Display name\"\n                    value={newDisplayName}\n                    onChange={onChange}\n                    className=\"formInput\" />\n                <input \n                    type=\"submit\" \n                    value=\"Update Profile\" \n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}/>\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n}\n\nexport default Profile;","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\CardDragList.js",["59"],"import React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\n\nconst CardDragList = (nweets) => {\n    const [Cardlist, setlist] = useState([]);\n    useEffect(() => {\n        setlist(nweets.nweets);\n    }, []);\n    const reorder = (list, startIndex, endIndex) => {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n\n        return result;\n    };\n    const grid = 8;\n\n    const getItemStyle = (isDragging, draggableStyle) => ({\n        userSelect: \"none\",\n        padding: grid * 2,\n        margin: `0 0 ${grid}px 0`,\n\n        background: isDragging ? \"lightgreen\" : \"grey\",\n\n        ...draggableStyle\n    });\n\n    const getListStyle = isDraggingOver => ({\n        background: isDraggingOver ? \"white\" : \"white\",\n        padding: grid,\n        width: 320\n    });\n\n    const onDragEnd = (result) => {\n        if (!result.destination) {\n            return;\n        }\n\n        const Cardlists = reorder(\n            Cardlist,\n            result.source.index,\n            result.destination.index\n        );\n        setlist(Cardlists);\n    };\n    console.log(Cardlist);\n    return (\n        <>\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"droppable\">\n                {(provided, snapshot) => (\n                    <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        style={getListStyle(snapshot.isDraggingOver)}>\n                        {Cardlist.map((nweet, index) => (\n                            <Draggable key={nweet.id} draggableId={nweet.id} index={index}>\n                                {(provided, snapshot) => (\n                                    <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        style={getItemStyle(\n                                            snapshot.isDragging,\n                                            provided.draggableProps.style\n                                        )}>\n                                        <h4><a href={\"http://\" + nweet.text} >{nweet.text}</a></h4>\n                                    </div>\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext>\n            \n        </>\n    );\n}\n\nexport default CardDragList;","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\AuthForm.js",["60","61","62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":6,"column":19,"nodeType":"70","messageId":"71","endLine":6,"endColumn":27},{"ruleId":"68","severity":1,"message":"69","line":5,"column":19,"nodeType":"70","messageId":"71","endLine":5,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":38,"column":8,"nodeType":"74","endLine":38,"endColumn":10,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"76","line":8,"column":8,"nodeType":"74","endLine":8,"endColumn":10,"suggestions":"77"},{"ruleId":"68","severity":1,"message":"78","line":8,"column":24,"nodeType":"70","messageId":"71","endLine":8,"endColumn":37},{"ruleId":"79","severity":1,"message":"80","line":76,"column":37,"nodeType":"81","endLine":76,"endColumn":49},{"ruleId":"79","severity":1,"message":"80","line":99,"column":37,"nodeType":"81","endLine":99,"endColumn":49},{"ruleId":"79","severity":1,"message":"80","line":103,"column":29,"nodeType":"81","endLine":103,"endColumn":84},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'seterror' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyNweets'. Either include it or remove the dependency array.","ArrayExpression",["84"],"React Hook useEffect has a missing dependency: 'nweets.nweets'. Either include it or remove the dependency array. If 'setlist' needs the current value of 'nweets.nweets', you can also switch to useReducer instead of useState and read 'nweets.nweets' in the reducer.",["85"],"'setNewAccount' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [getMyNweets]",{"range":"90","text":"91"},"Update the dependencies array to be: [nweets.nweets]",{"range":"92","text":"93"},[1173,1175],"[getMyNweets]",[271,273],"[nweets.nweets]"]