[{"/Users/jeongjung-geun/Desktop/Project/brity/src/index.js":"1","/Users/jeongjung-geun/Desktop/Project/brity/src/components/App.js":"2","/Users/jeongjung-geun/Desktop/Project/brity/src/fbase.js":"3","/Users/jeongjung-geun/Desktop/Project/brity/src/components/Router.js":"4","/Users/jeongjung-geun/Desktop/Project/brity/src/components/Addnotice.js":"5","/Users/jeongjung-geun/Desktop/Project/brity/src/components/SignUp.js":"6","/Users/jeongjung-geun/Desktop/Project/brity/src/components/Addcard.js":"7","/Users/jeongjung-geun/Desktop/Project/brity/src/components/Findemail.js":"8","/Users/jeongjung-geun/Desktop/Project/brity/src/components/Findpw.js":"9","/Users/jeongjung-geun/Desktop/Project/brity/src/components/Navigation.js":"10","/Users/jeongjung-geun/Desktop/Project/brity/src/routes/Profile.js":"11","/Users/jeongjung-geun/Desktop/Project/brity/src/routes/Auth.js":"12","/Users/jeongjung-geun/Desktop/Project/brity/src/routes/Home.js":"13","/Users/jeongjung-geun/Desktop/Project/brity/src/components/AuthForm.js":"14","/Users/jeongjung-geun/Desktop/Project/brity/src/components/CardDragList.js":"15"},{"size":231,"mtime":1609322293241,"results":"16","hashOfConfig":"17"},{"size":1020,"mtime":1609319879571,"results":"18","hashOfConfig":"17"},{"size":722,"mtime":1609319879573,"results":"19","hashOfConfig":"17"},{"size":1837,"mtime":1609323962268,"results":"20","hashOfConfig":"17"},{"size":5950,"mtime":1609324936530,"results":"21","hashOfConfig":"17"},{"size":26119,"mtime":1609324978215,"results":"22","hashOfConfig":"17"},{"size":4615,"mtime":1609324382414,"results":"23","hashOfConfig":"17"},{"size":8069,"mtime":1609319879572,"results":"24","hashOfConfig":"17"},{"size":8214,"mtime":1609324455328,"results":"25","hashOfConfig":"17"},{"size":611,"mtime":1609319879572,"results":"26","hashOfConfig":"17"},{"size":1979,"mtime":1609319879581,"results":"27","hashOfConfig":"17"},{"size":1009,"mtime":1609319879580,"results":"28","hashOfConfig":"17"},{"size":6541,"mtime":1609324779443,"results":"29","hashOfConfig":"17"},{"size":7241,"mtime":1609324437575,"results":"30","hashOfConfig":"17"},{"size":2935,"mtime":1609319879571,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1305hl5",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},"/Users/jeongjung-geun/Desktop/Project/brity/src/index.js",[],"/Users/jeongjung-geun/Desktop/Project/brity/src/components/App.js",[],["65","66"],"/Users/jeongjung-geun/Desktop/Project/brity/src/fbase.js",[],"/Users/jeongjung-geun/Desktop/Project/brity/src/components/Router.js",[],"/Users/jeongjung-geun/Desktop/Project/brity/src/components/Addnotice.js",[],"/Users/jeongjung-geun/Desktop/Project/brity/src/components/SignUp.js",["67","68"],"/Users/jeongjung-geun/Desktop/Project/brity/src/components/Addcard.js",[],"/Users/jeongjung-geun/Desktop/Project/brity/src/components/Findemail.js",[],"/Users/jeongjung-geun/Desktop/Project/brity/src/components/Findpw.js",["69"],"/Users/jeongjung-geun/Desktop/Project/brity/src/components/Navigation.js",[],"/Users/jeongjung-geun/Desktop/Project/brity/src/routes/Profile.js",["70"],"import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n        refreshUser();\n    };\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n        }\n        refreshUser();\n    };\n    const getMyNweets = async() => {\n        const nweets = await dbService\n            .collection(\"nweets\")\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\")\n            .get();\n            console.log(nweets.docs.map((doc) => doc.data()));\n    };\n    useEffect(() => {\n        getMyNweets();\n    }, []);\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input \n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Display name\"\n                    value={newDisplayName}\n                    onChange={onChange}\n                    className=\"formInput\" />\n                <input \n                    type=\"submit\" \n                    value=\"Update Profile\" \n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}/>\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n}\n\nexport default Profile;","/Users/jeongjung-geun/Desktop/Project/brity/src/routes/Auth.js",[],"/Users/jeongjung-geun/Desktop/Project/brity/src/routes/Home.js",["71","72"],"/Users/jeongjung-geun/Desktop/Project/brity/src/components/AuthForm.js",["73","74","75"],"/Users/jeongjung-geun/Desktop/Project/brity/src/components/CardDragList.js",["76","77"],"import React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\n\nconst CardDragList = (nweets) => {\n    const [Cardlist, setlist] = useState([]);\n    useEffect(() => {\n        setlist(nweets.nweets);\n    }, []);\n    const reorder = (list, startIndex, endIndex) => {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n\n        return result;\n    };\n    const grid = 8;\n\n    const getItemStyle = (isDragging, draggableStyle) => ({\n        userSelect: \"none\",\n        boxShadow: isDragging ? \"0 8px 15px 0 rgba(0, 0, 0, 0.2), 0 5px 8px 0 rgba(0, 0, 0, 0.3)\" : \"\",\n        background: isDragging && \"rgba(52, 52, 52, 0.8)\",\n\n        ...draggableStyle\n    });\n\n    const getListStyle = isDraggingOver => ({\n    });\n\n    const onDragEnd = (result) => {\n        if (!result.destination) {\n            return;\n        }\n\n        const Cardlists = reorder(\n            Cardlist,\n            result.source.index,\n            result.destination.index\n        );\n        setlist(Cardlists);\n    };\n    console.log(Cardlist);\n    return (\n        <>\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"droppable\">\n                {(provided, snapshot) => (\n                    <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        style={getListStyle(snapshot.isDraggingOver)}>\n                        {Cardlist.map((nweet, index) => (\n                            <Draggable key={nweet.id} draggableId={nweet.id} index={index}>\n                                {(provided, snapshot) => (\n                                    <div\n                                        className=\"card\"\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        style={getItemStyle(\n                                            snapshot.isDragging,\n                                            provided.draggableProps.style\n                                        )} href={\"http://\" + nweet.text}>\n                                        <h3>📢</h3>\n                                        <button><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-arrows.svg\"} alt=\"이동화살표\"></img></button>\n                                        <p>{nweet.text}</p>\n                                    </div>\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext>\n            \n        </>\n    );\n}\n\nexport default CardDragList;",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":25,"column":12,"nodeType":"84","messageId":"85","endLine":25,"endColumn":22},{"ruleId":"82","severity":1,"message":"86","line":26,"column":12,"nodeType":"84","messageId":"85","endLine":26,"endColumn":21},{"ruleId":"82","severity":1,"message":"87","line":9,"column":19,"nodeType":"84","messageId":"85","endLine":9,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":38,"column":8,"nodeType":"90","endLine":38,"endColumn":10,"suggestions":"91"},{"ruleId":"82","severity":1,"message":"92","line":10,"column":21,"nodeType":"84","messageId":"85","endLine":10,"endColumn":31},{"ruleId":"82","severity":1,"message":"93","line":25,"column":11,"nodeType":"84","messageId":"85","endLine":25,"endColumn":22},{"ruleId":"94","severity":1,"message":"95","line":96,"column":41,"nodeType":"96","endLine":96,"endColumn":44},{"ruleId":"94","severity":1,"message":"95","line":105,"column":29,"nodeType":"96","endLine":105,"endColumn":113},{"ruleId":"94","severity":1,"message":"95","line":134,"column":41,"nodeType":"96","endLine":134,"endColumn":44},{"ruleId":"88","severity":1,"message":"97","line":8,"column":8,"nodeType":"90","endLine":8,"endColumn":10,"suggestions":"98"},{"ruleId":"82","severity":1,"message":"99","line":16,"column":11,"nodeType":"84","messageId":"85","endLine":16,"endColumn":15},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'focusmonth' is assigned a value but never used.","Identifier","unusedVar","'focusdate' is assigned a value but never used.","'seterror' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyNweets'. Either include it or remove the dependency array.","ArrayExpression",["102"],"'setaddcard' is assigned a value but never used.","'linkaddcard' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'nweets.nweets'. Either include it or remove the dependency array. If 'setlist' needs the current value of 'nweets.nweets', you can also switch to useReducer instead of useState and read 'nweets.nweets' in the reducer.",["103"],"'grid' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [getMyNweets]",{"range":"108","text":"109"},"Update the dependencies array to be: [nweets.nweets]",{"range":"110","text":"111"},[1173,1175],"[getMyNweets]",[271,273],"[nweets.nweets]"]