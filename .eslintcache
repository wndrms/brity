[{"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\index.js":"1","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\App.js":"2","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\fbase.js":"3","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Router.js":"4","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\SignUp.js":"5","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Findpw.js":"6","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Addcard.js":"7","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Findemail.js":"8","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Addnotice.js":"9","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\AuthForm.js":"10","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Profile.js":"11","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Home.js":"12","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\CardDragList.js":"13","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Customerhelp.js":"14","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\AccountDelete.js":"15","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\UserHome.js":"16"},{"size":241,"mtime":1609825542236,"results":"17","hashOfConfig":"18"},{"size":1063,"mtime":1609750977819,"results":"19","hashOfConfig":"18"},{"size":742,"mtime":1609750977857,"results":"20","hashOfConfig":"18"},{"size":2467,"mtime":1609908119870,"results":"21","hashOfConfig":"18"},{"size":26991,"mtime":1609907340618,"results":"22","hashOfConfig":"18"},{"size":8212,"mtime":1609750977839,"results":"23","hashOfConfig":"18"},{"size":19521,"mtime":1609940334416,"results":"24","hashOfConfig":"18"},{"size":1061,"mtime":1609831006797,"results":"25","hashOfConfig":"18"},{"size":9910,"mtime":1609940398076,"results":"26","hashOfConfig":"18"},{"size":7508,"mtime":1609919826255,"results":"27","hashOfConfig":"18"},{"size":24015,"mtime":1609952224036,"results":"28","hashOfConfig":"18"},{"size":12165,"mtime":1609937597020,"results":"29","hashOfConfig":"18"},{"size":3300,"mtime":1609927986673,"results":"30","hashOfConfig":"18"},{"size":1025,"mtime":1609828780883,"results":"31","hashOfConfig":"18"},{"size":5058,"mtime":1609899773065,"results":"32","hashOfConfig":"18"},{"size":6628,"mtime":1609928622374,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ll13vf",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\index.js",[],["70","71"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\App.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\fbase.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Router.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\SignUp.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Findpw.js",["72"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Findpw = () => {\r\n    const [Proceeding, setProceeding] = useState(0);\r\n    const [email, setemail] = useState(\"\");\r\n    const [newpw, setnewpw] = useState();\r\n    const [newpw2, setnewpw2] = useState();\r\n    const [error, seterror] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setemail(value);\r\n        } else if(name === \"new-pw\"){\r\n            setnewpw(value);\r\n        } else if(name === \"new-pw-re\"){\r\n            setnewpw2(value);\r\n        }\r\n    };\r\n    const onDecrease = () => setProceeding(Proceeding - 1);\r\n    const onIncrease = () => setProceeding(Proceeding + 1);\r\n\r\n    return(\r\n        <>\r\n            <div id=\"wrap\" className={\"reset-pw0\" + Proceeding + \" reset-pw\"}>\r\n                <header id=\"header\">\r\n                    { Proceeding > 0 ? (\r\n                        <button onClick={onDecrease}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\r\n                    ) : (\r\n                        <>\r\n                            <Link to=\"/\">\r\n                                <button><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>            \r\n                            </Link>\r\n                        </>\r\n                    )}\r\n                </header>\r\n                <div id=\"content\" className=\"content\">\r\n                {\r\n                    (() => {\r\n                        if (Proceeding === 0) {\r\n                            return(\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>비밀번호 재설정🔏</h2>\r\n                                    </div>\r\n                                    <p>잊어버린 비밀번호를 새롭게 변경할 수 있어요 🧐</p>\r\n                                    <div className=\"form-box\">\r\n                                        <form>\r\n                                            <label for=\"user-id\">이메일 or 아이디<span className=\"required\">*</span></label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                name=\"email\"\r\n                                                id=\"user-id\" \r\n                                                className=\"input-basic\" \r\n                                                placeholder=\"이메일이나 아이디를 입력하세요\"\r\n                                                onChange={onChange}/>\r\n                                            <button></button>\r\n                                        </form>\r\n\r\n                                        <form className=\"btn-wrap\">\r\n                                            {email ? (\r\n                                                <button className=\"btn-basic next enable\" onClick={onIncrease}>다음</button>\r\n                                            ) : (\r\n                                                <button className=\"btn-basic next\">다음</button>\r\n                                            )}\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                        else if (Proceeding === 1) {\r\n                            return(\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>비밀번호 변경하기</h2>\r\n                                    </div>\r\n                                    <p><span className=\"user-id\">{email}</span> 님의 비밀번호를 변경하겠습니다<br/>\r\n                                        새로운 번호를 입력해주세요</p>\r\n                                    <div className=\"form-box\">\r\n                                        <div>\r\n                                            <form>\r\n                                                <label for=\"new-pw\">새 비밀번호<span className=\"required\">*</span></label>\r\n                                                <input \r\n                                                    type=\"password\" \r\n                                                    className=\"input-basic\" \r\n                                                    id=\"new-pw\"\r\n                                                    name=\"new-pw\"\r\n                                                    onChange={onChange}\r\n                                                    placeholder=\"새롭게 설정할 비밀번호를 입력하세요\"/>\r\n                                                <button type=\"submit\"></button>\r\n                                                <div className=\"message\">새롭게 설정할 비밀번호를 적어주세요</div>\r\n                                            </form>\r\n                                            <form>\r\n                                                <label for=\"new-pw\">새 비밀번호 확인</label>\r\n                                                <input \r\n                                                    type=\"password\" \r\n                                                    className=\"input-basic\" \r\n                                                    id=\"new-pw\" \r\n                                                    name=\"new-pw-re\"\r\n                                                    onChange={onChange}\r\n                                                    placeholder=\"새 비밀번호를 확인해주세요\"/>\r\n                                                <button type=\"submit\"></button>\r\n                                                <div className=\"message\">{error}</div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <form className=\"btn-wrap\">\r\n                                            {newpw && newpw2 ? (\r\n                                                <button className=\"btn-basic next enable\" onClick={onIncrease}>다음</button>\r\n                                            ) : (\r\n                                                <button className=\"btn-basic next\">다음</button>\r\n                                            )}\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                        else if(Proceeding === 2){\r\n                            return(\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>비밀번호 변경이 완료되었어요 :)</h2>\r\n                                    </div>\r\n                                    <p>새로운 비밀번호로 변경 완료되었습니다<br/>\r\n                                        바뀐 비밀번호로 다시 로그인해 주세요</p>\r\n                                    <div className=\"text-box\">\r\n                                        <p>e-mail</p>\r\n                                        <p className=\"user-id\">{email}</p>\r\n                                    </div>\r\n                                    <div className=\"form-box\">\r\n                                        <form className=\"btn-wrap\">\r\n                                            <Link to=\"/\">\r\n                                                <button className=\"btn-purple enable\">로그인 하기</button>\r\n                                            </Link>\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                    })()\r\n                } \r\n                </div>\r\n                <footer id=\"footer\"></footer>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Findpw;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Addcard.js",["73","74"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Findemail.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Addnotice.js",["75","76"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\AuthForm.js",["77"],"import { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [Proceeding, setProceeding] = useState(false);\r\n    const [focusemail, setfocusemail] = useState(false);\r\n    const [focuspw, setfocuspw] = useState(false);\r\n    const [pwshow, setpwshow] = useState(false);\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            data = await authService.signInWithEmailAndPassword(\r\n                email, \r\n                password\r\n            );\r\n            console.log(data);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    };\r\n    const toggleProceeding = () => setProceeding((prev) => !prev);\r\n    const onFocus = (event) => {\r\n        const {target: {name}} = event;\r\n        if(name === \"email\"){\r\n            setfocusemail((prev) => !prev);\r\n        } else if(name === \"password\"){\r\n            setfocuspw((prev) => !prev);\r\n        }\r\n    };\r\n    const togglepwshow = (event) => {\r\n        event.preventDefault();\r\n        setpwshow((prev) => !prev);\r\n    }\r\n    const onDelete = (event) => {\r\n        event.preventDefault();\r\n        setEmail(\"\");\r\n    }\r\n    return(\r\n        <>\r\n            <div id=\"wrap\" className={Proceeding ? \"login-pw join\" : \"login-email join\"}>\r\n                <header id=\"header\">\r\n                    <button onClick={toggleProceeding}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\r\n                </header>\r\n                <div id=\"content\" className=\"content\">\r\n                    \r\n                    {!Proceeding ? (\r\n                        <>\r\n                            <div className=\"logo-wrap\">\r\n                                <h1>Brity</h1>\r\n                                <p>admin</p>\r\n                            </div>\r\n                            <p>안녕하세요, 브리티 관리자 페이지 입니다😀<br></br>\r\n                                브리티와 함께 영역을 확장해볼까요?</p>\r\n                            <div className=\"form-box\">\r\n                                <form className={(focusemail ? \"selected\" : \"\") + (email ? \" filled\" : \"\")}>\r\n                                    <label for=\"user-email\">이메일</label>\r\n                                    <input \r\n                                        name=\"email\" \r\n                                        type=\"email\" \r\n                                        className=\"input-basic\"\r\n                                        id=\"user-email\" \r\n                                        placeholder=\"이메일이나 아이디를 입력하세요\"\r\n                                        value={email}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onFocus}\r\n                                        onChange={onChange}/>\r\n                                    <button onClick={onDelete}></button>\r\n                                    <div className=\"message\">{error}</div>\r\n                                </form>\r\n                                <div className=\"btn-wrap\">\r\n                                    <Link to=\"/Findemail\">\r\n                                        이메일을 잊으셨나요?\r\n                                    </Link>\r\n                                    {email ? (\r\n                                        <button className=\"btn-basic next enable\" onClick={toggleProceeding}>다음</button>\r\n                                    ) : (\r\n                                        <button className=\"btn-basic next\">다음</button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <a onClick={onSocialClick} name=\"google\" className=\"login-google btn-purple enable\">Continue with &nbsp;<img src={process.env.PUBLIC_URL + 'google.svg'} alt=\"google\"/></a>         \r\n                        </>\r\n                        ) : (\r\n                        <>\r\n                            <div className=\"logo-wrap\">\r\n                                <h2>Brity</h2>\r\n                                <p>admin</p>\r\n                            </div>\r\n                            <p className=\"user-id\">{email}</p>\r\n                            <div className=\"form-box\">\r\n                                <form className={(focuspw ? \"selected\" : \"\") + (pwshow ? \" pw-veiw\" : \" pw-hide\")}>\r\n                                    <label for=\"login-pw\">비밀번호</label>\r\n                                    <input \r\n                                        name=\"password\" \r\n                                        type={pwshow ? \"text\" : \"password\"}\r\n                                        className=\"input-basic\" \r\n                                        id=\"login-pw\"\r\n                                        placeholder=\"비밀번호를 입력하세요\"\r\n                                        value={password}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onFocus}\r\n                                        onChange={onChange}/>\r\n                                        <button onClick={togglepwshow}></button>\r\n                                        <div className=\"message\">{error}</div>\r\n                                </form>\r\n                                <div className=\"check-circle square\">\r\n                                    <input type=\"checkbox\" id=\"pw-save\"/>\r\n                                    <label for=\"pw-save\">로그인 유지하기</label>\r\n                                </div>\r\n                                <div className=\"btn-wrap\">\r\n                                    <Link to=\"/Findpw\">\r\n                                        비밀번호를 잊으셨나요?\r\n                                    </Link>\r\n                                    {password ? (\r\n                                        <button className=\"btn-basic next enable\" onClick={onSubmit}>다음</button>\r\n                                    ) : (\r\n                                        <button className=\"btn-basic next\">다음</button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    <Link to=\"/SignUp\">\r\n                        <button className=\"btn-purple fix-bottom enable\">Brity 계정 만들기</button>\r\n                    </Link>   \r\n                </div>\r\n            </div>\r\n            <footer id=\"footer\"></footer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Profile.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Home.js",["78","79"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\CardDragList.js",["80"],"import React, { useEffect, useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\r\n\r\nconst CardDragList = ({nweets, isDelete}) => {\r\n    const [Cardlist, setlist] = useState([]);\r\n    useEffect(() => {\r\n        setlist(nweets);\r\n    }, []);\r\n    const reorder = (list, startIndex, endIndex) => {\r\n        const result = Array.from(list);\r\n        const [removed] = result.splice(startIndex, 1);\r\n        result.splice(endIndex, 0, removed);\r\n\r\n        return result;\r\n    };\r\n\r\n    const getItemStyle = (isDragging, draggableStyle) => ({\r\n        userSelect: \"none\",\r\n        boxShadow: isDragging ? \"0 8px 15px 0 rgba(0, 0, 0, 0.2), 0 5px 8px 0 rgba(0, 0, 0, 0.3)\" : \"\",\r\n        background: isDragging && \"rgba(52, 52, 52, 0.8)\",\r\n\r\n        ...draggableStyle\r\n    });\r\n\r\n    const getListStyle = isDraggingOver => ({\r\n    });\r\n\r\n    const onDragEnd = (result) => {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const Cardlists = reorder(\r\n            Cardlist,\r\n            result.source.index,\r\n            result.destination.index\r\n        );\r\n        setlist(Cardlists);\r\n    };\r\n    return (\r\n        <>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId=\"droppable\">\r\n                {(provided, snapshot) => (\r\n                    <div\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                        style={getListStyle(snapshot.isDraggingOver)}>\r\n                        {Cardlist.map((nweet, index) => (\r\n                            <Draggable key={nweet.id} draggableId={nweet.id} index={index}>\r\n                                {(provided, snapshot) => (\r\n                                    <div\r\n                                        className={\"card\" + (isDelete ? \" del\" : \"\")}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                        style={getItemStyle(\r\n                                            snapshot.isDragging,\r\n                                            provided.draggableProps.style\r\n                                        )}>\r\n                                        <h3>{nweet.subtitle}</h3>\r\n                                        {isDelete ? (\r\n                                            <button><img src={process.env.PUBLIC_URL + \"02-icon-02-solid-check-circle.svg\"} alt=\"삭제 체크\"></img></button>\r\n                                        ) : (\r\n                                            <button><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-arrows.svg\"} alt=\"이동화살표\"></img></button>\r\n                                        )}       \r\n                                        <p>{nweet.title}</p>\r\n                                    </div>\r\n                                )}\r\n                            </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardDragList;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Customerhelp.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\AccountDelete.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\UserHome.js",["81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":9,"column":19,"nodeType":"88","messageId":"89","endLine":9,"endColumn":27},{"ruleId":"86","severity":1,"message":"90","line":13,"column":12,"nodeType":"88","messageId":"89","endLine":13,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":179,"column":100,"nodeType":"93","endLine":179,"endColumn":127},{"ruleId":"86","severity":1,"message":"94","line":61,"column":19,"nodeType":"88","messageId":"89","endLine":61,"endColumn":32},{"ruleId":"91","severity":1,"message":"92","line":130,"column":29,"nodeType":"93","endLine":130,"endColumn":40},{"ruleId":"95","severity":1,"message":"96","line":105,"column":29,"nodeType":"97","endLine":105,"endColumn":113},{"ruleId":"98","severity":1,"message":"99","line":53,"column":31,"nodeType":"100","messageId":"101","endLine":53,"endColumn":33},{"ruleId":"98","severity":1,"message":"99","line":62,"column":36,"nodeType":"100","messageId":"101","endLine":62,"endColumn":38},{"ruleId":"102","severity":1,"message":"103","line":8,"column":8,"nodeType":"104","endLine":8,"endColumn":10,"suggestions":"105"},{"ruleId":"86","severity":1,"message":"106","line":8,"column":19,"nodeType":"88","messageId":"89","endLine":8,"endColumn":27},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'seterror' is assigned a value but never used.","Identifier","unusedVar","'fix' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'attachmentUrl' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'nweets'. Either include it or remove the dependency array. If 'setlist' needs the current value of 'nweets', you can also switch to useReducer instead of useState and read 'nweets' in the reducer.","ArrayExpression",["109"],"'setcheck' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [nweets]",{"range":"112","text":"113"},[283,285],"[nweets]"]