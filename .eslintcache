[{"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\index.js":"1","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\App.js":"2","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\fbase.js":"3","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\Router.js":"4","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\SignUp.js":"5","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\Navigation.js":"6","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\CertForm.js":"7","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Home.js":"8","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Auth.js":"9","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Profile.js":"10","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\CardDragList.js":"11","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\AuthForm.js":"12"},{"size":230,"mtime":1606495515000,"results":"13","hashOfConfig":"14"},{"size":1020,"mtime":1606646088000,"results":"15","hashOfConfig":"14"},{"size":722,"mtime":1606454209000,"results":"16","hashOfConfig":"14"},{"size":1596,"mtime":1608008511036,"results":"17","hashOfConfig":"14"},{"size":10533,"mtime":1608096284665,"results":"18","hashOfConfig":"14"},{"size":611,"mtime":1607264218000,"results":"19","hashOfConfig":"14"},{"size":1729,"mtime":1608095199705,"results":"20","hashOfConfig":"14"},{"size":3661,"mtime":1607649892817,"results":"21","hashOfConfig":"14"},{"size":1009,"mtime":1607579080818,"results":"22","hashOfConfig":"14"},{"size":1979,"mtime":1606495403000,"results":"23","hashOfConfig":"14"},{"size":2734,"mtime":1607910564373,"results":"24","hashOfConfig":"14"},{"size":4604,"mtime":1608008733824,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ocvamv",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\index.js",[],["54","55"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\App.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\fbase.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\Router.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\SignUp.js",["56"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\Navigation.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\CertForm.js",["57"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Home.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Auth.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\routes\\Profile.js",["58"],"import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n        refreshUser();\n    };\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n        }\n        refreshUser();\n    };\n    const getMyNweets = async() => {\n        const nweets = await dbService\n            .collection(\"nweets\")\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\")\n            .get();\n            console.log(nweets.docs.map((doc) => doc.data()));\n    };\n    useEffect(() => {\n        getMyNweets();\n    }, []);\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input \n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Display name\"\n                    value={newDisplayName}\n                    onChange={onChange}\n                    className=\"formInput\" />\n                <input \n                    type=\"submit\" \n                    value=\"Update Profile\" \n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}/>\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n}\n\nexport default Profile;","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\CardDragList.js",["59"],"import React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\n\nconst CardDragList = (nweets) => {\n    const [Cardlist, setlist] = useState([]);\n    useEffect(() => {\n        setlist(nweets.nweets);\n    }, []);\n    const reorder = (list, startIndex, endIndex) => {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n\n        return result;\n    };\n    const grid = 8;\n\n    const getItemStyle = (isDragging, draggableStyle) => ({\n        userSelect: \"none\",\n        padding: grid * 2,\n        margin: `0 0 ${grid}px 0`,\n\n        background: isDragging ? \"lightgreen\" : \"grey\",\n\n        ...draggableStyle\n    });\n\n    const getListStyle = isDraggingOver => ({\n        background: isDraggingOver ? \"white\" : \"white\",\n        padding: grid,\n        width: 320\n    });\n\n    const onDragEnd = (result) => {\n        if (!result.destination) {\n            return;\n        }\n\n        const Cardlists = reorder(\n            Cardlist,\n            result.source.index,\n            result.destination.index\n        );\n        setlist(Cardlists);\n    };\n    console.log(Cardlist);\n    return (\n        <>\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"droppable\">\n                {(provided, snapshot) => (\n                    <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        style={getListStyle(snapshot.isDraggingOver)}>\n                        {Cardlist.map((nweet, index) => (\n                            <Draggable key={nweet.id} draggableId={nweet.id} index={index}>\n                                {(provided, snapshot) => (\n                                    <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        style={getItemStyle(\n                                            snapshot.isDragging,\n                                            provided.draggableProps.style\n                                        )}>\n                                        <h4><a href={\"http://\" + nweet.text} >{nweet.text}</a></h4>\n                                    </div>\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext>\n            \n        </>\n    );\n}\n\nexport default CardDragList;","C:\\Users\\wndrms\\Desktop\\dev\\project\\my-app\\src\\components\\AuthForm.js",["60","61","62","63"],"import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [Proceeding, setProceeding] = useState(false);\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if(name === \"email\"){\n            setEmail(value);\n        } else if(name === \"password\"){\n            setPassword(value);\n        }\n    };\n    const onSubmit = async(event) => {\n        console.log(\"email : \", email);\n        console.log(\"password : \", password);\n        event.preventDefault();\n        try {\n            let data;\n            if(newAccount){\n                data = await authService.createUserWithEmailAndPassword(\n                    email,\n                    password\n                );\n            } else {\n                data = await authService.signInWithEmailAndPassword(\n                    email, \n                    password\n                );\n            }\n            console.log(data);\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n    const toggleProceeding = () => setProceeding(true);\n    return(\n        <>\n            <div id=\"wrap\">\n                <header id=\"header\">\n                    <button><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\n                </header>\n                <div id=\"content\" className=\"content\">\n                    <div className=\"logo-wrap\">\n                        <h1>Brity</h1>\n                        <p>admin</p>\n                    </div>\n                    { Proceeding ? (\n                        <>\n                            <p>{email}</p>\n                            <div className=\"form-box\">\n                                <form action=\"\">\n                                    <label for=\"password\">비밀번호</label>\n                                    <input \n                                        name=\"password\" \n                                        type=\"password\" \n                                        className=\"input-basic\" \n                                        placeholder=\"비밀번호를 입력하세요\"\n                                        value={password}\n                                        onChange={onChange}/>\n                                </form>\n                                <div className=\"btn-wrap\">\n                                    <a href=\"#\">비밀번호를 잊으셨나요?</a>\n                                    <button className=\"btn-basic next\" onClick={onSubmit}>다음</button>\n                                    {error && <span className=\"authError\">{error}</span>}\n                                </div>\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <p>안녕하세요, 브리티 관리자 페이지 입니다😀<br></br>\n                                브리티와 함께 영역을 확장해볼까요?</p>\n                            <div className=\"form-box\">\n                                <form action=\"\">\n                                    <label for=\"email\">이메일</label>\n                                    <input \n                                        name=\"email\" \n                                        type=\"text\" \n                                        className=\"input-basic\" \n                                        placeholder=\"이메일이나 아이디를 입력하세요\"\n                                        onChange={onChange}/>\n                                </form>\n                                <div className=\"btn-wrap\">\n                                    <a href=\"#\">이메일을 잊으셨나요?</a>\n                                    <button className=\"btn-basic next\" onClick={toggleProceeding}>다음</button>\n                                </div>\n                            </div>\n                            <a href=\"#\" className=\"login-google\">Continue with Google</a>         \n                        </>\n                        )}\n                    <Link to=\"/SignUp\">\n                        <button className=\"btn-purple fix-bottom\">Brity 계정 만들기</button>\n                    </Link>   \n                </div>\n            </div>\n            <footer id=\"footer\"></footer>\n        </>\n    );\n};\n\nexport default AuthForm;",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":6,"column":19,"nodeType":"70","messageId":"71","endLine":6,"endColumn":27},{"ruleId":"68","severity":1,"message":"69","line":5,"column":19,"nodeType":"70","messageId":"71","endLine":5,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":38,"column":8,"nodeType":"74","endLine":38,"endColumn":10,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"76","line":8,"column":8,"nodeType":"74","endLine":8,"endColumn":10,"suggestions":"77"},{"ruleId":"68","severity":1,"message":"78","line":8,"column":24,"nodeType":"70","messageId":"71","endLine":8,"endColumn":37},{"ruleId":"79","severity":1,"message":"80","line":68,"column":37,"nodeType":"81","endLine":68,"endColumn":49},{"ruleId":"79","severity":1,"message":"80","line":89,"column":37,"nodeType":"81","endLine":89,"endColumn":49},{"ruleId":"79","severity":1,"message":"80","line":93,"column":29,"nodeType":"81","endLine":93,"endColumn":66},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'seterror' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyNweets'. Either include it or remove the dependency array.","ArrayExpression",["84"],"React Hook useEffect has a missing dependency: 'nweets.nweets'. Either include it or remove the dependency array. If 'setlist' needs the current value of 'nweets.nweets', you can also switch to useReducer instead of useState and read 'nweets.nweets' in the reducer.",["85"],"'setNewAccount' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [getMyNweets]",{"range":"90","text":"91"},"Update the dependencies array to be: [nweets.nweets]",{"range":"92","text":"93"},[1173,1175],"[getMyNweets]",[271,273],"[nweets.nweets]"]