[{"/Users/jeongjung-geun/Desktop/Project/brity/src/index.js":"1","/Users/jeongjung-geun/Desktop/Project/brity/src/components/App.js":"2","/Users/jeongjung-geun/Desktop/Project/brity/src/fbase.js":"3","/Users/jeongjung-geun/Desktop/Project/brity/src/components/Router.js":"4","/Users/jeongjung-geun/Desktop/Project/brity/src/components/Addnotice.js":"5","/Users/jeongjung-geun/Desktop/Project/brity/src/components/SignUp.js":"6","/Users/jeongjung-geun/Desktop/Project/brity/src/components/Addcard.js":"7","/Users/jeongjung-geun/Desktop/Project/brity/src/components/Findemail.js":"8","/Users/jeongjung-geun/Desktop/Project/brity/src/components/Findpw.js":"9","/Users/jeongjung-geun/Desktop/Project/brity/src/components/Navigation.js":"10","/Users/jeongjung-geun/Desktop/Project/brity/src/routes/Profile.js":"11","/Users/jeongjung-geun/Desktop/Project/brity/src/routes/Home.js":"12","/Users/jeongjung-geun/Desktop/Project/brity/src/components/AuthForm.js":"13","/Users/jeongjung-geun/Desktop/Project/brity/src/components/CardDragList.js":"14"},{"size":252,"mtime":1609586400192,"results":"15","hashOfConfig":"16"},{"size":1020,"mtime":1609586037279,"results":"17","hashOfConfig":"16"},{"size":722,"mtime":1609586037282,"results":"18","hashOfConfig":"16"},{"size":1844,"mtime":1609586037281,"results":"19","hashOfConfig":"16"},{"size":8834,"mtime":1609598072559,"results":"20","hashOfConfig":"16"},{"size":26119,"mtime":1609586037281,"results":"21","hashOfConfig":"16"},{"size":15923,"mtime":1609685023398,"results":"22","hashOfConfig":"16"},{"size":8069,"mtime":1609586037280,"results":"23","hashOfConfig":"16"},{"size":8065,"mtime":1609599417445,"results":"24","hashOfConfig":"16"},{"size":611,"mtime":1609319879572,"results":"25","hashOfConfig":"16"},{"size":1979,"mtime":1609586037289,"results":"26","hashOfConfig":"16"},{"size":8084,"mtime":1609689635267,"results":"27","hashOfConfig":"16"},{"size":7342,"mtime":1609599346987,"results":"28","hashOfConfig":"16"},{"size":3223,"mtime":1609689225850,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1305hl5",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jeongjung-geun/Desktop/Project/brity/src/index.js",[],["66","67"],"/Users/jeongjung-geun/Desktop/Project/brity/src/components/App.js",[],"/Users/jeongjung-geun/Desktop/Project/brity/src/fbase.js",[],"/Users/jeongjung-geun/Desktop/Project/brity/src/components/Router.js",[],"/Users/jeongjung-geun/Desktop/Project/brity/src/components/Addnotice.js",["68","69"],"import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {v4 as uuidv4} from \"uuid\";\n\nconst Addnotice = (userObj) => {\n    const history = useHistory();\n    const [name, setname] = useState(\"\");\n    const [sub, setsub] = useState(\"\");\n    const [text, settext] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if(name === \"name\"){\n            setname(value);\n        } else if(name === \"sub\"){\n            setsub(value);\n        } else if(name === \"text\"){\n            settext(value);\n        }\n    }\n    const onFileChange = (event) => {\n        const {target: {files}, } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: {result},\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n        console.log(attachment);\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n    const onSubmit = async (event) => {\n        if (name === \"\" || sub === \"\" || text === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if(attachment !== \"\"){\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            const attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const cardObj = {\n            title: name,\n            subtitle: sub,\n            text: text,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        }\n        await dbService.collection(\"nweets\").add(cardObj);\n        setname(\"\");\n        setsub(\"\");\n        settext(\"\");\n        setAttachment(\"\");\n    };\n    const gethome = () => history.push(\"/\");\n    return(\n        <div id=\"wrap\" className=\"ad-card ad-card-notice\">\n            <header className=\"header\">\n                <div className=\"menu-wrap\">\n                    <button className=\"back\" onClick={gethome}><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-chevron-left.svg\"} alt=\"이전으로\"/></button>\n                    <p>🔗 링크 카드 만들기</p>\n                    <button className=\"close\" onClick={gethome}><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-times.svg\"} alt=\"닫기\"/></button>\n                </div>\n            </header>\n            <div className=\"content\">\n                <div className=\"exempli border-bottom\">\n                    <h2>카드 예시</h2>\n                    <div className=\"card\">\n                        <h3><span>🛍</span>  |  B. {sub? sub : \"(서브 타이틀)\"}</h3>\n                        <p>카카오톡 문의  |  A. {name ? name : \"(카드 이름)\"}</p>\n                    </div>\n                </div>\n                <div className=\"form-box border-bottom\">\n                    <form>\n                        <label for=\"card-name\">A. 어떤 이름의 공지 카드를 만들어 볼까요?<span className=\"required\">*</span></label>\n                        <input\n                            type=\"text\"\n                            id=\"card-name\"\n                            className=\"input-basic\"\n                            name=\"name\"\n                            value={name}\n                            onChange={onChange}\n                            placeholder=\"카드에 보여질 이름을 적어주세요  ex. 카카오톡 문의\"/>\n                        <div className=\"message\">카드 이름을 적어주세요</div>\n                    </form>\n                    <form>\n                        <label for=\"sub-card-name\">B. 어떤 서브 타이틀을 적어 놓을까요?</label>\n                        <input \n                            type=\"text\" \n                            id=\"sub-card-name\" \n                            className=\"input-basic\" \n                            name=\"sub\"\n                            value={sub}\n                            onChange={onChange}\n                            placeholder=\"서브 타이틀 내용을 적어주세요  ex. 🛍\"/>\n                        <div className=\"message\">정확한 링크 주소를 입력해주세요</div>\n                    </form>\n                    <form>\n                        <label for=\"card-index\">C. 어떤 내용을 공지할까요?</label>\n                        <textarea\n                            name=\"card-index\"\n                            id=\"card-index\"\n                            cols=\"30\"\n                            rows=\"10\"\n                            className=\"input-basic\"\n                            name=\"text\"\n                            value={text}\n                            onChange={onChange}\n                            placeholder=\"공지할 내용을 입력해주세요\"></textarea>\n                        <div className=\"message\">공지 내용을 입력해주세요</div>\n                    </form>\n                    <form>\n                        <label for=\"card-img\" className=\"ad-img-box\">\n                            <p>첨부할 이미지가 있나요?</p>\n                            {attachment ? (\n                                <>\n                                    <div style={{\n                                        background: `url(${attachment})`,\n                                        backgroundSize: \"cover\",\n                                        backgroundRepeat: \"no-repeat\",\n                                        backgroundPosition: \"center center\",}}>\n                                        <p>📷</p>\n                                        <p>이미지 올리기</p>\n                                        <p>클릭 후 이미지 파일을 선택하거나,<br/>\n                                            직접 끌어와서 업로드해주세요 </p>\n                                    </div>\n                                </>\n                            ) : (\n                                <>\n                                    <div>\n                                        <p>📷</p>\n                                        <p>이미지 올리기</p>\n                                        <p>클릭 후 이미지 파일을 선택하거나,<br/>\n                                            직접 끌어와서 업로드해주세요 </p>\n                                    </div>\n                                </>\n                            )}\n                        </label>\n                        <input \n                            type=\"file\" \n                            id=\"card-img\" \n                            className=\"input-basic\"\n                            onChange={onFileChange}/>\n                        <div className=\"img-del-btn\">\n                            <button onClick={onClearAttachment}><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-trash.svg\"} alt=\"삭제\"/></button>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"toggle-box\">\n                    <div className=\"toggle-on\">\n                        <p>공지 공개 여부<span>ON</span></p>\n                        <button className=\"btn-toggle\"><span></span></button>\n                    </div>\n                    <div>\n                        <p>댓글 허용<span>OFF</span></p>\n                        <button className=\"btn-toggle\"><span></span></button>\n                    </div>\n                    <p>📢 지금은 댓글 기능을 지원하지 않고 있어요 😢</p>\n                </div>\n                <div className=\"toggle-box\">\n                    <div className=\"toggle-on\">\n                        <p>링크 공개 여부<span>ON</span></p>\n                        <button className=\"btn-toggle\"><span></span></button>\n                    </div>\n                </div>\n                <div className=\"card-size-box\">\n                    <button className=\"select\">\n                        <p>카드 크기 선택<span>LARGE</span></p>\n                        <img src={process.env.PUBLIC_URL + \"02-icon-01-outline-chevron-right.svg\"} alt=\"선택\"/>\n                    </button>\n                    <button>\n                        <p>카드 커버 선택<span>미선택</span></p>\n                        <img src={process.env.PUBLIC_URL + \"02-icon-01-outline-chevron-right.svg\"} alt=\"선택\"/>\n                    </button>\n                </div>\n                <button className=\"btn-purple-filled\" onClick={onSubmit}>공지 만들기 완료</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Addnotice;\n","/Users/jeongjung-geun/Desktop/Project/brity/src/components/SignUp.js",["70","71"],"import React, { useState } from \"react\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport { authService } from \"fbase\";\n\nconst SignUp = () => {\n    const history = useHistory();\n    const [Proceeding, setProceeding] = useState(0);\n    const [name, setname] = useState(\"\");\n    const [phnum, setphnum] = useState();\n    const [userid, setuserid] = useState(\"\");\n    const [password, setpassword] = useState(\"\");\n    const [year, setyear] = useState(\"\");\n    const [month, setmonth] = useState(\"\");\n    const [date, setdate] = useState(\"\");\n    const [search, setsearch] = useState(false);\n    const [address, setaddress] = useState();\n    const [subaddress, setsubaddress] = useState();\n    const [error, seterror] = useState();\n    const [focusname, setfocusname] = useState(false);\n    const [focusph, setfocusph] = useState(false);\n    const [focusid, setfocusid] = useState(false);\n    const [focuspw, setfocuspw] = useState(false);\n    const [focusyear, setfocusyear] = useState(false);\n    const [focusmonth, setfocusmonth] = useState(false);\n    const [focusdate, setfocusdate] = useState(false);\n    const [focussubadd, setfocussubadd] = useState(false);\n    const [pwshow, setpwshow] = useState(false);\n    const [all, setall] = useState(false);\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if(name === \"name\"){\n            setname(value);\n        } else if(name === \"ph-number\"){\n            setphnum(value);\n        } else if(name === \"user-id\"){\n            setuserid(value);\n        } else if(name === \"pw\"){\n            setpassword(value);\n        } else if(name === \"year\"){\n            setyear(value);\n        } else if(name === \"month\"){\n            setmonth(value);\n        } else if(name === \"date\"){\n            setdate(value);\n        } else if(name === \"detail-address\"){\n            setsubaddress(value);\n        }\n    };\n    const onDelete = (event) => {\n        setname(\"\");\n        console.log(name);\n    }\n    const onFocus = (event) => {\n        const {target: {name}} = event;\n        if(name === \"name\"){\n            setfocusname((prev) => !prev);\n        } else if(name === \"ph-number\"){\n            setfocusph((prev) => !prev);\n        } else if(name === \"user-id\"){\n            setfocusid((prev) => !prev);\n        } else if(name === \"pw\"){\n            setfocuspw((prev) => !prev);\n        } else if(name === \"year\"){\n            setfocusyear((prev) => !prev);\n        } else if(name === \"month\"){\n            setfocusmonth((prev) => !prev);\n        } else if(name === \"date\"){\n            setfocusdate((prev) => !prev);\n        } else if(name === \"detail-address\"){\n            setfocussubadd((prev) => !prev);\n        }\n    };\n    const decresProceeding = () => setProceeding(Proceeding - 1);\n    const incresProceeding = () => setProceeding(Proceeding + 1);\n    const togglesearch = () => setsearch((prev) => !prev);\n    const handleComplete = (data) => {\n        let fullAddress = data.address;\n        let extraAddress = '';\n\n        if (data.addressType === 'R') {\n            if (data.bname !== '') {\n                extraAddress += data.bname;\n            }\n            if (data.buildingName !== ''){\n                extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\n            }\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\n        }\n        setaddress(fullAddress);\n        togglesearch();\n    };\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        try {\n            let data;\n            data = await authService.createUserWithEmailAndPassword(\n                userid,\n                password\n            );\n            console.log(data);\n        } catch (err) {\n            seterror(err.message);\n        }\n        history.push(\"/\");\n    };\n    const togglepwshow = (event) => {\n        event.preventDefault();\n        setpwshow((prev) => !prev);\n    }\n    const toggleall = () => setall((prev) => !prev);\n    return(\n        <>\n            <div id=\"wrap\" className={\"sign-up-0\" + (Proceeding+1) + \" sign-up\"}>\n                <header id=\"header\">\n                    { Proceeding > 0 ? (\n                        <button onClick={decresProceeding}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\n                    ) : (\n                        <>\n                            <Link to=\"/\">\n                                <button onClick={decresProceeding}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\n                            </Link> \n                        </>\n                    )}\n                </header>\n                <div id=\"content\" className=\"content\">\n                {\n                    (() => {\n                        if(Proceeding === 0) {\n                            return(\n                                <>\n                                    <div className=\"logo-wrap\">\n                                        <h2>Brity</h2>\n                                        <p>admin</p>\n                                    </div>\n                                    <p>입력하신 이메일로 등록한 계정이 없습니다<br/>\n                                        바로 계정 만들기를 시작하겠습니다 😉</p>\n                                    <div className=\"form-box\">\n                                        <form className={(focusname ? \"selected\" : \"\") + (name ? \" filled\" : \"\")}>\n                                            <label for=\"user-name\">이름<span className=\"required\">*</span></label>\n                                            <input \n                                                type=\"text\"\n                                                className=\"input-basic\" \n                                                id=\"user-name\"\n                                                name=\"name\"\n                                                value={name}\n                                                onChange={onChange}\n                                                onBlur={onFocus}\n                                                onFocus={onFocus}\n                                                placeholder=\"본인이름을 입력하세요\"/>\n                                            <button onClick={onDelete}></button>\n                                            <div className=\"message\">{error}</div>\n                                        </form>\n                                        <form className={(focusph ? \"selected\" : \"\") + (phnum ? \" filled\" : \"\")}>\n                                            <label for=\"ph-number\">휴대폰 번호<span className=\"required\">*</span></label>\n                                            <input \n                                                type=\"text\" \n                                                pattern=\"[0-9]*\"\n                                                className=\"input-basic\" \n                                                id=\"ph-number\" \n                                                name=\"ph-number\"\n                                                value={phnum}\n                                                onChange={onChange}\n                                                onBlur={onFocus}\n                                                onFocus={onFocus}\n                                                placeholder=\"휴대폰 번호를 입력하세요\"/>\n                                            <button></button>\n                                        </form>\n                                        <div className=\"btn-wrap\">\n                                            {name && phnum ? (\n                                                <button className=\"btn-basic next enable\" onClick={incresProceeding}>다음</button>\n                                            ) : (\n                                                <button className=\"btn-basic next\">다음</button>\n                                            )}\n                                        </div>\n                                    </div>\n                                    <Link to=\"/\">\n                                        <button className=\"btn-purple fix-bottom enable\">로그인 하기</button>\n                                    </Link>\n                                </>\n                            );\n                        }\n                        else if (Proceeding === 1){\n                            return (\n                                <>\n                                    <div className=\"logo-wrap\">\n                                        <h2>아이디 만들기</h2>\n                                    </div>\n                                    <p>지금 설정하신 아이디으로 링크가 생성됩니다.<br/>\n                                        나중엔 변경 불가합니다 🔏</p>\n                                    <div className=\"form-box\">\n                                        <form className={(focusid ? \"selected\" : \"\") + (userid ? \" filled\" : \"\")}>\n                                            <label for=\"user-id\">아이디(닉네임)<span className=\"required\">*</span></label>\n                                            <input \n                                                type=\"text\" \n                                                className=\"input-basic\" \n                                                id=\"user-id\"\n                                                name=\"user-id\"\n                                                value={userid}\n                                                onChange={onChange}\n                                                onBlur={onFocus}\n                                                onFocus={onFocus}\n                                                placeholder=\"아이디를 입력하세요\"/>\n                                            <button></button>\n                                            <div className=\"message\">변경 불가 사항🔒</div>\n                                        </form>\n                                        <div className=\"btn-wrap\">\n                                            {userid ? (\n                                                <button className=\"btn-basic next enable\" onClick={incresProceeding}>다음</button>\n                                            ) : (\n                                                <button className=\"btn-basic next\">다음</button>\n                                            )}\n                                        </div>\n                                    </div>\n                                </>\n                            );\n                        }\n                        else if (Proceeding === 2){\n                            return (\n                                <>\n                                    <div className=\"logo-wrap\">\n                                        <h2>비밀번호 만들기</h2>\n                                    </div>\n                                    <p>로그인에 필요한 비밀번호를 만드세요</p>\n                                    <div className=\"form-box\">\n                                        <form className={(focuspw ? \"selected\" : \"\") + (pwshow ? \" pw-veiw\" : \" pw-hide\")}>\n                                            <label for=\"pw\">비밀번호<span className=\"required\">*</span></label>\n                                            <input \n                                                type=\"password\" \n                                                className=\"input-basic\" \n                                                name=\"pw\"\n                                                value={password}\n                                                onChange={onChange}\n                                                onBlur={onFocus}\n                                                onFocus={onFocus}\n                                                id=\"pw\" \n                                                placeholder=\"비밀번호를 입력하세요\"/>\n                                            <button onClick={togglepwshow}></button>\n                                            <div className=\"message\">🤫소문자, 숫자 포함 8자리 이상</div>\n                                        </form>\n                                        <div className=\"btn-wrap\">\n                                            {password ? (\n                                                <button className=\"btn-basic next enable\" onClick={incresProceeding}>다음</button>\n                                            ) : (\n                                                <button className=\"btn-basic next\">다음</button>\n                                            )}\n                                        </div>\n                                    </div>\n                                </>\n                            );\n                        }\n                        else if (Proceeding === 3){\n                            return (\n                                <>\n                                    <div className=\"logo-wrap\">\n                                        <h2>생일 등록하기</h2>\n                                    </div>\n                                    <p>개인정보는 공개되지 않는 정보에요 🤫<br/>\n                                        정보는 나중에 얼마든지 수정할 수 있어요</p>\n                                    <div className=\"form-box\">\n                                        <p>생일</p>\n                                        <form className={(focusyear ? \"selected\" : \"\") + (year ? \" filled\" : \"\")}>\n                                            <div>\n                                                <label for=\"year\"></label>\n                                                <input \n                                                    type=\"number\" \n                                                    id=\"year\" \n                                                    min=\"1900\" \n                                                    max=\"2020\" \n                                                    className=\"input-basic\" \n                                                    name=\"year\"\n                                                    onChange={onChange}\n                                                    onBlur={onFocus}\n                                                    onFocus={onFocus}\n                                                    placeholder=\"연도\"/> \n                                            </div>\n                                            <div>\n                                                <label for=\"month\"></label>\n                                                <input \n                                                    type=\"number\" \n                                                    id=\"month\" \n                                                    min=\"1\" \n                                                    max=\"12\" \n                                                    className=\"input-basic\" \n                                                    name=\"month\"\n                                                    onChange={onChange}\n                                                    onBlur={onFocus}\n                                                    onFocus={onFocus}\n                                                    placeholder=\"월\"/>\n                                            </div>\n                                            <div>\n                                                <label for=\"date\"></label>\n                                                <input \n                                                    type=\"number\" \n                                                    id=\"date\" \n                                                    min=\"1\" \n                                                    max=\"31\" \n                                                    className=\"input-basic\"\n                                                    name=\"date\"\n                                                    onChange={onChange}\n                                                    onBlur={onFocus}\n                                                    onFocus={onFocus}\n                                                    placeholder=\"일\"/>\n                                            </div>\n                                        </form>\n                                        <div className=\"btn-wrap\">\n                                            {(year && month && date) ? (\n                                                <button className=\"btn-basic next enable\" onClick={incresProceeding}>다음</button>\n                                            ) : (\n                                                <button className=\"btn-basic next\">다음</button>\n                                            )}\n                                        </div>\n                                    </div>\n                                </>\n                            );\n                        }\n                        else if (Proceeding === 4) {\n                            return(\n                                <>\n                                    <div className=\"logo-wrap\">\n                                        <h2>주소 등록하기</h2>\n                                    </div>\n                                    <p>개인정보는 공개되지 않는 정보에요 🤫<br/>\n                                        정보는 나중에 얼마든지 수정할 수 있어요</p>\n                                    <div className=\"form-box\">\n                                        <p>주소</p>\n                                        <form className=\"ico-serch\">\n                                            { !search ? (\n                                                <>\n                                                    <label for=\"address\"></label>\n                                                    <input \n                                                        type=\"text\" \n                                                        className=\"input-basic\" \n                                                        id=\"address\" \n                                                        value={address}\n                                                        placeholder=\"우편번호를 입력하세요\"/>\n                                                    <button onClick={togglesearch}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-search.svg'} alt=\"검색\"/></button>\n                                                </>\n                                            ) : (\n                                                <DaumPostcode \n                                                    onComplete={handleComplete}/>\n                                            )}\n                                            <div className=\"message\">우편번호를 입력해주세요</div>\n                                        </form>\n                                        <form className={(focussubadd ? \"selected\" : \"\") + (subaddress ? \" filled\" : \"\")}>\n                                            <label for=\"detail-address\"></label>\n                                            <input \n                                                type=\"text\" \n                                                class=\"input-basic\" \n                                                id=\"detail-address\" \n                                                name=\"detail-address\"\n                                                value={subaddress}\n                                                onChange={onChange}\n                                                onBlur={onFocus}\n                                                onFocus={onFocus}\n                                                placeholder=\"상세주소를 입력하세요\"/>\n                                            <button></button>\n                                            <div className=\"message\">상세주소를 입력해주세요</div>\n                                        </form>\n                                        <form className=\"btn-wrap\">\n                                            {(address && subaddress) ? (\n                                                <button className=\"btn-basic next enable\" onClick={incresProceeding}>다음</button>\n                                            ) : (\n                                                <button className=\"btn-basic next\">다음</button>\n                                            )}\n                                        </form>\n                                    </div>\n                                </>\n                            );\n                        }\n                        else if (Proceeding === 5) {\n                            return(\n                                <>\n                                    <div className=\"logo-wrap\">\n                                        <h2>약관 동의</h2>\n                                    </div>\n                                    <p>회원님의 개인 정보를 안전하게 보호합니다 🤫<br/>\n                                        모든 약관에 동의하시고, 새로운 서비스를 경험해보세요</p>\n                                    <div className=\"form-box\">\n                                        <form>\n                                            <ul>\n                                                <li className=\"check-circle\">\n                                                    {all ? (\n                                                        <input type=\"checkbox\" id=\"survice-check\" checked/>\n                                                    ) : (\n                                                        <input type=\"checkbox\" id=\"survice-check\"/>\n                                                    )}\n                                                    <label for=\"survice-check\">서비스 이용 약관 운영 및 동의<span class=\"required\">(필수)</span></label>\n                                                </li>\n                                                <li className=\"check-circle\">\n                                                    {all ? (\n                                                        <input type=\"checkbox\" id=\"info-check\" checked/>\n                                                    ) : (\n                                                        <input type=\"checkbox\" id=\"info-check\"/>\n                                                    )}\n                                                    <label for=\"info-check\">개인정보 수집 및 이용 동의<span class=\"required\">(필수)</span></label>\n                                                </li>\n                                                <li className=\"check-circle\">\n                                                    {all ? (\n                                                        <input type=\"checkbox\" id=\"ad-check\" checked/>\n                                                    ) : (\n                                                        <input type=\"checkbox\" id=\"ad-check\"/>\n                                                    )}\n                                                    <label for=\"ad-check\">마케팅 정보SMS, 이메일 수신 동의<span>(선택)</span></label>\n                                                </li>\n                                                <li className=\"check-circle all\">\n                                                    <input type=\"checkbox\" id=\"all\" onChange={toggleall}/>\n                                                    <label for=\"all\">모두 동의하고 계속할래요</label>\n                                                    <div className=\"message\">{error}</div>\n                                                </li>\n                                            </ul>\n                                        </form>\n                                        <form className=\"btn-wrap\">\n                                            {(address && subaddress) ? (\n                                                <button className=\"btn-basic next enable\" onClick={incresProceeding}>다음</button>\n                                            ) : (\n                                                <button className=\"btn-basic next\">다음</button>\n                                            )}\n                                        </form>\n                                    </div>\n                                </>\n                            );\n                        }\n                        else if(Proceeding === 6) {\n                            return(\n                                <>\n                                    <div className=\"logo-wrap\">\n                                        <h2>Brity에 오신 것을<br/>환영합니다 :)</h2>\n                                    </div>\n                                    <p>다음 정보로 회원가입이 완료되었습니다 🤩</p>\n                                    <div className=\"text-box\">\n                                        <p>e-mail</p>\n                                        <p>{userid}</p>\n                                        <p>link / ID</p>\n                                        <p>link.milleniz.com/{userid}</p>\n                                    </div>\n                                    <form className=\"btn-wrap\">\n                                        <button className=\"btn-purple enable\" onClick={onSubmit}>다음</button>\n                                    </form>\n                                </>\n                            );\n                        }\n                    })()\n                }\n                </div>\n                <footer id=\"footer\"></footer>\n            </div>\n        </>\n    );\n};\n\nexport default SignUp;","/Users/jeongjung-geun/Desktop/Project/brity/src/components/Addcard.js",["72"],"import { dbService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Addcard = ({userObj}) => {\n    const history = useHistory();\n    const [name, setname] = useState(\"\");\n    const [sub, setsub] = useState(\"\");\n    const [Processing, setProcessing] = useState(0);\n    const [Color, setColor] = useState(\"\");\n    const [select, setselect] = useState(true);\n    const [size, setsize] = useState(true);\n    const gradientcolor = [\"linear-gradient(136deg, #d4b2da 1%, #9cd6e0)\", \n                            \"linear-gradient(136deg, #86c9ae 1%, #704ddf)\",\n                            \"linear-gradient(136deg, #4590e1 1%, #de72b2)\",\n                            \"linear-gradient(135deg, #fa7696, #fed946 100%)\",\n                            \"linear-gradient(136deg, #c71d6f 1%, #d09693 100%)\",\n                            \"linear-gradient(136deg, #134e5e 1%, #71b280)\",\n                            \"linear-gradient(135deg, #16222a, #3a6073 100%)\",\n                            \"linear-gradient(135deg, #3a6186, #89253e 100%)\",\n                            \"linear-gradient(136deg, #8e2de2 1%, #4a00e0)\",\n                            \"linear-gradient(136deg, #4767af 1%, #1a2b4c)\",\n                            \"linear-gradient(136deg, #545454 1%, #111112 96%)\"];\n    const flatcolor = [\"#264653\", \"#2a9d8f\", \"#e9c46a\", \"#f4a261\", \"#e76f51\", \"#ce4257\", \"#720026\", \"#4f000b\", \"#540d6e\", \" #132572\", \"#1d1e20\"];\n    const pastelcolor = [\"#e3b5b7\", \"#ddb5cb\", \"#c8bbdb\", \"#b5cbdc\", \"#b7d0cb\", \"#e4d8b9\", \"#e1c6b3\", \"#cebdb3\", \"#988585\", \" #644d56\", \"#353240\"];\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if(name === \"name\"){\n            setname(value);\n        } else if(name === \"sub\"){\n            setsub(value);\n        }\n    }\n    const onClickColor = (event, colorname) => {\n        setColor(colorname);\n    }\n    const onSubmit = async (event) => {\n        if (name === \"\" || sub === \"\") {\n            return;\n        }\n        event.preventDefault();\n        const cardObj = {\n            title: name,\n            subtitle: sub,\n            cardcolor: Color,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n        }\n        await dbService.collection(\"nweets\").add(cardObj);\n        setname(\"\");\n        setsub(\"\");\n        history.push(\"/\");\n    };\n    const toggleProcessing0 = () => setProcessing(0);\n    const toggleProcessing1 = () => setProcessing(1);\n    const toggleProcessing2 = () => setProcessing(2);\n    const gethome = () => history.push(\"/\");\n    const toggleselect = () => setselect((prev) => !prev);\n    const togglesize = () => setsize((prev) => !prev);\n    return(\n        <div id=\"wrap\" className={\"ad-card\" + (Processing>0 ? (Processing === 1 ? (\" ad-card-size\") : (\" ad-card-cover\")) : (\"\"))}>\n            <header className=\"header\">\n                <div className=\"menu-wrap\">\n                    <button className=\"back\" onClick={toggleProcessing0}><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-chevron-left.svg\"} alt=\"이전으로\"/></button>\n                    <p>{(Processing>0 ? (Processing === 1 ? (\"카드 크기 선택\") : (\"카드 커버 선택\")) : (\"🔗 링크 카드 만들기\"))}</p>\n                    <button className=\"close\" onClick={gethome}><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-times.svg\"} alt=\"닫기\"/></button>\n                </div>\n            </header>\n            <div className=\"content\">\n                { (() => {\n                    if (Processing === 0){\n                        return(\n                            <>\n                                <div className=\"exempli border-bottom\">\n                                    <h2>카드 예시</h2>\n                                    <div className=\"card\">\n                                        <h3><span>🛍</span>  |  B. {sub? sub : \"(서브 타이틀)\"}</h3>\n                                        <p>카카오톡 문의  |  A. {name ? name : \"(카드 이름)\"}</p>\n                                    </div>\n                                </div>\n                                <div className=\"form-box border-bottom\">\n                                    <form>\n                                        <label for=\"card-name\">A. 어떤 이름의 링크 카드를 만들어 볼까요?<span className=\"required\">*</span></label>\n                                        <input \n                                            type=\"text\" \n                                            id=\"card-name\" \n                                            className=\"input-basic\" \n                                            name=\"name\"\n                                            value={name}\n                                            onChange={onChange}\n                                            placeholder=\"카드에 보여질 이름을 적어주세요  ex. 카카오톡 문의\"/>\n                                        <div className=\"message\">카드 이름을 적어주세요</div>\n                                    </form>\n                                    <form>\n                                        <label for=\"sub-card-name\">B. 어떤 서브 타이틀을 적어 놓을까요?</label>\n                                        <input \n                                            type=\"text\" \n                                            id=\"sub-card-name\" \n                                            className=\"input-basic\" \n                                            name=\"sub\"\n                                            value={sub}\n                                            onChange={onChange}\n                                            placeholder=\"서브 타이틀 내용을 적어주세요  ex. 🛍\"/>\n                                        <div className=\"message\">정확한 링크 주소를 입력해주세요</div>\n                                    </form>\n                                </div>\n                                <div className=\"toggle-box\">\n                                    <div className=\"toggle-on\">\n                                        <p>링크 공개 여부<span>ON</span></p>\n                                        <button className=\"btn-toggle\"><span></span></button>\n                                    </div>\n                                </div>\n                                <div className=\"card-size-box\">\n                                    <button className=\"select\" onClick={toggleProcessing1}>\n                                        <p>카드 크기 선택<span>LARGE</span></p>\n                                        <img src={process.env.PUBLIC_URL + \"02-icon-01-outline-chevron-right.svg\"} alt=\"선택\"/>\n                                    </button>\n                                    <button onClick={toggleProcessing2}>\n                                        <p>카드 커버 선택<span>미선택</span></p>\n                                        <img src={process.env.PUBLIC_URL + \"02-icon-01-outline-chevron-right.svg\"} alt=\"선택\"/>\n                                    </button>\n                                </div>\n                                { (name && sub) ? (\n                                    <button className=\"btn-purple-filled enable\" onClick={onSubmit}>링크 만들기 완료</button>\n                                ) : (\n                                    <button className=\"btn-purple-filled\">링크 만들기 완료</button>\n                                )}\n                            </>\n                        );\n                    } else if( Processing === 1){\n                        return(\n                            <>\n                                <h2>원하는 카드 크기를 선택해주세요</h2>\n                                <div className=\"form-box border-bottom\">\n                                    <form className=\"check-circle\">\n                                        <input type=\"checkbox\" name=\"checkbox\" id=\"size-s\" checked={!size && \"checked\"} onClick={togglesize}/>\n                                        <label for=\"size-s\">S</label>\n                                    </form>\n                                    <form className=\"check-circle\">\n                                        <input checked type=\"checkbox\" name=\"checkbox\" id=\"size-l\" checked={size && \"checked\"} onClick={togglesize}/>\n                                        <label for=\"size-l\">L</label>\n                                    </form>\n                                    <p className=\"size-s-error\">📢 지금은 ‘L’ 사이즈 카드만 지원하고 있어요<br/>\n                                        이른 시일 안에 선택 할 수 있도록 노력하겠습니다 🙇‍♂️</p>\n                                </div>\n                                <div className=\"card-box\">\n                                    <p>카드 크기 예시</p>\n                                    <div className=\"card-wrap\">\n                                        <div className=\"card\">\n                                            <button><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-arrows.svg\"} alt=\"이동 화살표\"/></button>\n                                            <p>S</p>\n                                        </div>\n                                        <div className=\"card checked\">\n                                            <button><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-arrows.svg\"} alt=\"이동 화살표\"/></button>\n                                            <p>L</p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <button className=\"btn-purple-filled enable\" onClick={toggleProcessing0}>카드 크기 적용하기</button>\n                            </>\n                        );\n                    } else if (Processing === 2){\n                        return(\n                            <>\n                                <h2>원하는 카드 색상을 선택해주세요</h2>\n                                <div className=\"form-box border-bottom\">\n                                    <form className=\"check-circle\">\n                                        <input type=\"checkbox\" name=\"checkbox\" id=\"bd-check-color\" checked={select && \"checked\"} onClick={toggleselect}/>\n                                        <label for=\"bd-check-color\">색상 선택하기</label>\n                                    </form>\n                                    <form className=\"check-circle\">\n                                        <input type=\"checkbox\" name=\"checkbox\" id=\"bd-check-img\" checked={!select && \"checked\"}onClick={toggleselect}/>\n                                        <label for=\"bd-check-img\">이미지 올리기</label>\n                                    </form>\n                                </div>\n                                { select ? (\n                                    <div className=\"colorBox\">\n                                        <h3>색상 카드 중 선택해주세요</h3>\n                                        <div className=\"color-box-wrap\">\n                                            <div className=\"gradients\">\n                                                <h4>Gradients</h4>\n                                                <div className=\"color-chip-wrap\">\n                                                    {gradientcolor.map(key => {\n                                                        if(key === Color){\n                                                            return <div className=\"check\" onClick={(e) => onClickColor(e, key)}></div>\n                                                        } else {\n                                                            return <div onClick={(e) => onClickColor(e, key)}></div>\n                                                        }\n                                                    })}\n                                                </div>\n                                            </div>\n                                            <div className=\"flat-color\">\n                                                <h4>Flat colors</h4>\n                                                <div className=\"color-chip-wrap\">\n                                                    {flatcolor.map(key => {\n                                                        if(key === Color){\n                                                            return <div className=\"check\" onClick={(e) => onClickColor(e, key)}></div>\n                                                        } else {\n                                                            return <div onClick={(e) => onClickColor(e, key)}></div>\n                                                        }\n                                                    })}\n                                                </div>\n                                            </div>\n                                            <div className=\"pastel-color\">\n                                                <h4>Pastel colors </h4>\n                                                <div className=\"color-chip-wrap\">\n                                                    {pastelcolor.map(key => {\n                                                        if(key === Color){\n                                                            return <div className=\"check\" onClick={(e) => onClickColor(e, key)}></div>\n                                                        } else {\n                                                            return <div onClick={(e) => onClickColor(e, key)}></div>\n                                                        }\n                                                    })}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ) : (\n                                    <div className=\"imgBox\">\n                                        <div className=\"form-box\">\n                                            <form>\n                                                <label for=\"card-img\" className=\"ad-img-box\">\n                                                    <p>원하는 이미지를 올려주세요</p>\n                                                    <div>\n                                                        <p>📷</p>\n                                                        <p>이미지 올리기</p>\n                                                        <p>클릭 후 이미지 파일을 선택하거나,<br/>\n                                                        직접 끌어와서 업로드해주세요 </p>\n                                                    </div>\n                                                </label>\n                                                <input type=\"file\" id=\"card-img\" className=\"input-basic\"/>\n                                                <div className=\"img-del-btn\">\n                                                    <button><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-trash.svg\"} alt=\"이미지 삭제하기\"></img></button>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                )}\n                                <button className=\"btn-purple-filled enable\" onClick={toggleProcessing0}>카드 커버 적용하기</button>\n                            </>\n                        );\n                    } \n                })()}\n                \n            </div>\n        </div>\n    );\n}\n\nexport default Addcard;","/Users/jeongjung-geun/Desktop/Project/brity/src/components/Findemail.js",[],"/Users/jeongjung-geun/Desktop/Project/brity/src/components/Findpw.js",["73"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Findpw = () => {\n    const [Proceeding, setProceeding] = useState(0);\n    const [email, setemail] = useState(\"\");\n    const [newpw, setnewpw] = useState();\n    const [newpw2, setnewpw2] = useState();\n    const [error, seterror] = useState(\"\");\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if(name === \"email\"){\n            setemail(value);\n        } else if(name === \"new-pw\"){\n            setnewpw(value);\n        } else if(name === \"new-pw-re\"){\n            setnewpw2(value);\n        }\n    };\n    const onDecrease = () => setProceeding(Proceeding - 1);\n    const onIncrease = () => setProceeding(Proceeding + 1);\n\n    return(\n        <>\n            <div id=\"wrap\" className={\"reset-pw0\" + Proceeding + \" reset-pw\"}>\n                <header id=\"header\">\n                    { Proceeding > 0 ? (\n                        <button onClick={onDecrease}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\n                    ) : (\n                        <>\n                            <Link to=\"/\">\n                                <button><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>            \n                            </Link>\n                        </>\n                    )}\n                </header>\n                <div id=\"content\" className=\"content\">\n                {\n                    (() => {\n                        if (Proceeding === 0) {\n                            return(\n                                <>\n                                    <div className=\"logo-wrap\">\n                                        <h2>비밀번호 재설정🔏</h2>\n                                    </div>\n                                    <p>잊어버린 비밀번호를 새롭게 변경할 수 있어요 🧐</p>\n                                    <div className=\"form-box\">\n                                        <form>\n                                            <label for=\"user-id\">이메일 or 아이디<span className=\"required\">*</span></label>\n                                            <input \n                                                type=\"text\" \n                                                name=\"email\"\n                                                id=\"user-id\" \n                                                className=\"input-basic\" \n                                                placeholder=\"이메일이나 아이디를 입력하세요\"\n                                                onChange={onChange}/>\n                                            <button></button>\n                                        </form>\n\n                                        <form className=\"btn-wrap\">\n                                            {email ? (\n                                                <button className=\"btn-basic next enable\" onClick={onIncrease}>다음</button>\n                                            ) : (\n                                                <button className=\"btn-basic next\">다음</button>\n                                            )}\n                                        </form>\n                                    </div>\n                                </>\n                            );\n                        }\n                        else if (Proceeding === 1) {\n                            return(\n                                <>\n                                    <div className=\"logo-wrap\">\n                                        <h2>비밀번호 변경하기</h2>\n                                    </div>\n                                    <p><span className=\"user-id\">{email}</span> 님의 비밀번호를 변경하겠습니다<br/>\n                                        새로운 번호를 입력해주세요</p>\n                                    <div className=\"form-box\">\n                                        <div>\n                                            <form>\n                                                <label for=\"new-pw\">새 비밀번호<span className=\"required\">*</span></label>\n                                                <input \n                                                    type=\"password\" \n                                                    className=\"input-basic\" \n                                                    id=\"new-pw\"\n                                                    name=\"new-pw\"\n                                                    onChange={onChange}\n                                                    placeholder=\"새롭게 설정할 비밀번호를 입력하세요\"/>\n                                                <button type=\"submit\"></button>\n                                                <div className=\"message\">새롭게 설정할 비밀번호를 적어주세요</div>\n                                            </form>\n                                            <form>\n                                                <label for=\"new-pw\">새 비밀번호 확인</label>\n                                                <input \n                                                    type=\"password\" \n                                                    className=\"input-basic\" \n                                                    id=\"new-pw\" \n                                                    name=\"new-pw-re\"\n                                                    onChange={onChange}\n                                                    placeholder=\"새 비밀번호를 확인해주세요\"/>\n                                                <button type=\"submit\"></button>\n                                                <div className=\"message\">{error}</div>\n                                            </form>\n                                        </div>\n                                        <form className=\"btn-wrap\">\n                                            {newpw && newpw2 ? (\n                                                <button className=\"btn-basic next enable\" onClick={onIncrease}>다음</button>\n                                            ) : (\n                                                <button className=\"btn-basic next\">다음</button>\n                                            )}\n                                        </form>\n                                    </div>\n                                </>\n                            );\n                        }\n                        else if(Proceeding === 2){\n                            return(\n                                <>\n                                    <div className=\"logo-wrap\">\n                                        <h2>비밀번호 변경이 완료되었어요 :)</h2>\n                                    </div>\n                                    <p>새로운 비밀번호로 변경 완료되었습니다<br/>\n                                        바뀐 비밀번호로 다시 로그인해 주세요</p>\n                                    <div className=\"text-box\">\n                                        <p>e-mail</p>\n                                        <p className=\"user-id\">{email}</p>\n                                    </div>\n                                    <div className=\"form-box\">\n                                        <form className=\"btn-wrap\">\n                                            <Link to=\"/\">\n                                                <button className=\"btn-purple enable\">로그인 하기</button>\n                                            </Link>\n                                        </form>\n                                    </div>\n                                </>\n                            );\n                        }\n                    })()\n                } \n                </div>\n                <footer id=\"footer\"></footer>\n            </div>\n        </>\n    );\n};\n\nexport default Findpw;","/Users/jeongjung-geun/Desktop/Project/brity/src/components/Navigation.js",[],["74","75"],"/Users/jeongjung-geun/Desktop/Project/brity/src/routes/Profile.js",["76"],"import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n        refreshUser();\n    };\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n        }\n        refreshUser();\n    };\n    const getMyNweets = async() => {\n        const nweets = await dbService\n            .collection(\"nweets\")\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\")\n            .get();\n            console.log(nweets.docs.map((doc) => doc.data()));\n    };\n    useEffect(() => {\n        getMyNweets();\n    }, []);\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input \n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Display name\"\n                    value={newDisplayName}\n                    onChange={onChange}\n                    className=\"formInput\" />\n                <input \n                    type=\"submit\" \n                    value=\"Update Profile\" \n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}/>\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n}\n\nexport default Profile;","/Users/jeongjung-geun/Desktop/Project/brity/src/routes/Home.js",[],"/Users/jeongjung-geun/Desktop/Project/brity/src/components/AuthForm.js",["77"],"import { authService, firebaseInstance } from \"fbase\";\nimport React, { useState } from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [Proceeding, setProceeding] = useState(false);\n    const [focusemail, setfocusemail] = useState(false);\n    const [focuspw, setfocuspw] = useState(false);\n    const [pwshow, setpwshow] = useState(false);\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if(name === \"email\"){\n            setEmail(value);\n        } else if(name === \"password\"){\n            setPassword(value);\n        }\n    };\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        try {\n            let data;\n            data = await authService.signInWithEmailAndPassword(\n                email, \n                password\n            );\n            console.log(data);\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n    const onSocialClick = async (event) => {\n        const {\n            target: {name},\n        } = event;\n        let provider;\n        if(name === \"google\"){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n    };\n    const toggleProceeding = () => setProceeding((prev) => !prev);\n    const onFocus = (event) => {\n        const {target: {name}} = event;\n        if(name === \"email\"){\n            setfocusemail((prev) => !prev);\n        } else if(name === \"password\"){\n            setfocuspw((prev) => !prev);\n        }\n    };\n    const togglepwshow = (event) => {\n        event.preventDefault();\n        setpwshow((prev) => !prev);\n    }\n    const onDelete = (event) => {\n        event.preventDefault();\n        setEmail(\"\");\n    }\n    return(\n        <>\n            <div id=\"wrap\" className={Proceeding ? \"login-pw\" : \"login-email\"}>\n                <header id=\"header\">\n                    <button onClick={toggleProceeding}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\n                </header>\n                <div id=\"content\" className=\"content\">\n                    \n                    {!Proceeding ? (\n                        <>\n                            <div className=\"logo-wrap\">\n                                <h1>Brity</h1>\n                                <p>admin</p>\n                            </div>\n                            <p>안녕하세요, 브리티 관리자 페이지 입니다😀<br></br>\n                                브리티와 함께 영역을 확장해볼까요?</p>\n                            <div className=\"form-box\">\n                                <form className={(focusemail ? \"selected\" : \"\") + (email ? \" filled\" : \"\")}>\n                                    <label for=\"user-email\">이메일</label>\n                                    <input \n                                        name=\"email\" \n                                        type=\"email\" \n                                        className=\"input-basic\"\n                                        id=\"user-email\" \n                                        placeholder=\"이메일이나 아이디를 입력하세요\"\n                                        value={email}\n                                        onFocus={onFocus}\n                                        onBlur={onFocus}\n                                        onChange={onChange}/>\n                                    <button onClick={onDelete}></button>\n                                    <div className=\"message\">{error}</div>\n                                </form>\n                                <div className=\"btn-wrap\">\n                                    <Link to=\"/Findemail\">\n                                        이메일을 잊으셨나요?\n                                    </Link>\n                                    {email ? (\n                                        <button className=\"btn-basic next enable\" onClick={toggleProceeding}>다음</button>\n                                    ) : (\n                                        <button className=\"btn-basic next\">다음</button>\n                                    )}\n                                </div>\n                            </div>\n                            <a onClick={onSocialClick} name=\"google\" className=\"login-google btn-purple enable\">Continue with &nbsp;<img src={process.env.PUBLIC_URL + 'google.svg'} alt=\"google\"/></a>         \n                        </>\n                        ) : (\n                        <>\n                            <div className=\"logo-wrap\">\n                                <h2>Brity</h2>\n                                <p>admin</p>\n                            </div>\n                            <p className=\"user-id\">{email}</p>\n                            <div className=\"form-box\">\n                                <form className={(focuspw ? \"selected\" : \"\") + (pwshow ? \" pw-veiw\" : \" pw-hide\")}>\n                                    <label for=\"login-pw\">비밀번호</label>\n                                    <input \n                                        name=\"password\" \n                                        type={pwshow ? \"text\" : \"password\"}\n                                        className=\"input-basic\" \n                                        id=\"login-pw\"\n                                        placeholder=\"비밀번호를 입력하세요\"\n                                        value={password}\n                                        onFocus={onFocus}\n                                        onBlur={onFocus}\n                                        onChange={onChange}/>\n                                        <button onClick={togglepwshow}></button>\n                                        <div className=\"message\">{error}</div>\n                                </form>\n                                <div className=\"check-circle square\">\n                                    <input type=\"checkbox\" id=\"pw-save\"/>\n                                    <label for=\"pw-save\">로그인 유지하기</label>\n                                </div>\n                                <div className=\"btn-wrap\">\n                                    <Link to=\"/Findpw\">\n                                        비밀번호를 잊으셨나요?\n                                    </Link>\n                                    {password ? (\n                                        <button className=\"btn-basic next enable\" onClick={onSubmit}>다음</button>\n                                    ) : (\n                                        <button className=\"btn-basic next\">다음</button>\n                                    )}\n                                </div>\n                            </div>\n                        </>\n                    )}\n                    <Link to=\"/SignUp\">\n                        <button className=\"btn-purple fix-bottom enable\">Brity 계정 만들기</button>\n                    </Link>   \n                </div>\n            </div>\n            <footer id=\"footer\"></footer>\n        </>\n    );\n};\n\nexport default AuthForm;","/Users/jeongjung-geun/Desktop/Project/brity/src/components/CardDragList.js",["78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":44,"column":19,"nodeType":"85","messageId":"86","endLine":44,"endColumn":32},{"ruleId":"87","severity":1,"message":"88","line":111,"column":29,"nodeType":"89","endLine":111,"endColumn":40},{"ruleId":"83","severity":1,"message":"90","line":25,"column":12,"nodeType":"85","messageId":"86","endLine":25,"endColumn":22},{"ruleId":"83","severity":1,"message":"91","line":26,"column":12,"nodeType":"85","messageId":"86","endLine":26,"endColumn":21},{"ruleId":"87","severity":1,"message":"88","line":140,"column":100,"nodeType":"89","endLine":140,"endColumn":127},{"ruleId":"83","severity":1,"message":"92","line":9,"column":19,"nodeType":"85","messageId":"86","endLine":9,"endColumn":27},{"ruleId":"79","replacedBy":"93"},{"ruleId":"81","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":38,"column":8,"nodeType":"97","endLine":38,"endColumn":10,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":105,"column":29,"nodeType":"101","endLine":105,"endColumn":113},{"ruleId":"95","severity":1,"message":"102","line":8,"column":8,"nodeType":"97","endLine":8,"endColumn":10,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'attachmentUrl' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'focusmonth' is assigned a value but never used.","'focusdate' is assigned a value but never used.","'seterror' is assigned a value but never used.",["104"],["105"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyNweets'. Either include it or remove the dependency array.","ArrayExpression",["106"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'nweets'. Either include it or remove the dependency array. If 'setlist' needs the current value of 'nweets', you can also switch to useReducer instead of useState and read 'nweets' in the reducer.",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [getMyNweets]",{"range":"112","text":"113"},"Update the dependencies array to be: [nweets]",{"range":"114","text":"115"},[1173,1175],"[getMyNweets]",[276,278],"[nweets]"]