[{"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\index.js":"1","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\App.js":"2","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\fbase.js":"3","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Router.js":"4","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\SignUp.js":"5","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Findpw.js":"6","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Addcard.js":"7","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Findemail.js":"8","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Addnotice.js":"9","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\AuthForm.js":"10","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Profile.js":"11","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Home.js":"12","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\CardDragList.js":"13","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Customerhelp.js":"14","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\AccountDelete.js":"15","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\UserHome.js":"16"},{"size":241,"mtime":1609825542236,"results":"17","hashOfConfig":"18"},{"size":1389,"mtime":1610601180387,"results":"19","hashOfConfig":"18"},{"size":742,"mtime":1609750977857,"results":"20","hashOfConfig":"18"},{"size":2491,"mtime":1610601208105,"results":"21","hashOfConfig":"18"},{"size":27799,"mtime":1610543292388,"results":"22","hashOfConfig":"18"},{"size":8296,"mtime":1610543439665,"results":"23","hashOfConfig":"18"},{"size":25225,"mtime":1610598920590,"results":"24","hashOfConfig":"18"},{"size":1061,"mtime":1609831006797,"results":"25","hashOfConfig":"18"},{"size":28781,"mtime":1610599286546,"results":"26","hashOfConfig":"18"},{"size":7422,"mtime":1610543271798,"results":"27","hashOfConfig":"18"},{"size":41469,"mtime":1610359054623,"results":"28","hashOfConfig":"18"},{"size":12337,"mtime":1610601224124,"results":"29","hashOfConfig":"18"},{"size":3467,"mtime":1610599796768,"results":"30","hashOfConfig":"18"},{"size":1025,"mtime":1609828780883,"results":"31","hashOfConfig":"18"},{"size":7887,"mtime":1610263736726,"results":"32","hashOfConfig":"18"},{"size":6628,"mtime":1610251899398,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ll13vf",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\index.js",[],["72","73"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\App.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\fbase.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Router.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\SignUp.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Findpw.js",["74"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Findpw = () => {\r\n    const [Proceeding, setProceeding] = useState(0);\r\n    const [email, setemail] = useState(\"\");\r\n    const [newpw, setnewpw] = useState();\r\n    const [newpw2, setnewpw2] = useState();\r\n    const [error, seterror] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setemail(value);\r\n        } else if(name === \"new-pw\"){\r\n            setnewpw(value);\r\n        } else if(name === \"new-pw-re\"){\r\n            setnewpw2(value);\r\n        }\r\n    };\r\n    const onDecrease = () => setProceeding(Proceeding - 1);\r\n    const onIncrease = () => setProceeding(Proceeding + 1);\r\n\r\n    return(\r\n        <>\r\n            <div id=\"wrap\" className={\"reset-pw0\" + (Proceeding + 1) + \" reset-pw join\"}>\r\n                <header id=\"header\">\r\n                    { Proceeding > 0 ? (\r\n                        <button onClick={onDecrease}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\r\n                    ) : (\r\n                        <>\r\n                            <Link to=\"/\">\r\n                                <button><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>            \r\n                            </Link>\r\n                        </>\r\n                    )}\r\n                </header>\r\n                <div id=\"content\" className=\"content\">\r\n                {\r\n                    (() => {\r\n                        if (Proceeding === 0) {\r\n                            return(\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>비밀번호 재설정🔏</h2>\r\n                                    </div>\r\n                                    <p>잊어버린 비밀번호를 새롭게 변경할 수 있어요 🧐</p>\r\n                                    <div className=\"form-box\">\r\n                                        <form>\r\n                                            <label for=\"user-id\">이메일 or 아이디<span className=\"required\">*</span></label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                name=\"email\"\r\n                                                id=\"user-id\" \r\n                                                className=\"input-basic\" \r\n                                                placeholder=\"이메일이나 아이디를 입력하세요\"\r\n                                                onChange={onChange}/>\r\n                                            <button></button>\r\n                                        </form>\r\n\r\n                                        <form className=\"btn-wrap\">\r\n                                            {email ? (\r\n                                                <button className=\"btn-basic next enable\" onClick={onIncrease}>다음</button>\r\n                                            ) : (\r\n                                                <button className=\"btn-basic next\">다음</button>\r\n                                            )}\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                        else if (Proceeding === 1) {\r\n                            return(\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>비밀번호 변경하기</h2>\r\n                                    </div>\r\n                                    <p><span className=\"user-id\">{email}</span> 님의 비밀번호를 변경하겠습니다<br/>\r\n                                        새로운 번호를 입력해주세요</p>\r\n                                    <div className=\"form-box\">\r\n                                        <div>\r\n                                            <form>\r\n                                                <label for=\"new-pw\">새 비밀번호<span className=\"required\">*</span></label>\r\n                                                <input \r\n                                                    type=\"password\" \r\n                                                    className=\"input-basic\" \r\n                                                    id=\"new-pw\"\r\n                                                    name=\"new-pw\"\r\n                                                    onChange={onChange}\r\n                                                    placeholder=\"새롭게 설정할 비밀번호를 입력하세요\"/>\r\n                                                <button type=\"submit\"></button>\r\n                                                <div className=\"message\">새롭게 설정할 비밀번호를 적어주세요</div>\r\n                                            </form>\r\n                                            <form>\r\n                                                <label for=\"new-pw\">새 비밀번호 확인<span className=\"required\">*</span></label>\r\n                                                <input \r\n                                                    type=\"password\" \r\n                                                    className=\"input-basic\" \r\n                                                    id=\"new-pw\" \r\n                                                    name=\"new-pw-re\"\r\n                                                    onChange={onChange}\r\n                                                    placeholder=\"새 비밀번호를 확인해주세요\"/>\r\n                                                <button type=\"submit\"></button>\r\n                                                <div className=\"message\">{error}</div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <form className=\"btn-wrap\">\r\n                                            {newpw && newpw2 ? (\r\n                                                <button className=\"btn-basic next enable\" onClick={onIncrease}>비밀번호 변경하기</button>\r\n                                            ) : (\r\n                                                <button className=\"btn-basic next\">비밀번호 변경하기</button>\r\n                                            )}\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                        else if(Proceeding === 2){\r\n                            return(\r\n                                <>\r\n                                    <div className=\"logo-wrap\">\r\n                                        <h2>비밀번호 변경이 완료되었어요 :)</h2>\r\n                                    </div>\r\n                                    <p>새로운 비밀번호로 변경 완료되었습니다<br/>\r\n                                        바뀐 비밀번호로 다시 로그인해 주세요</p>\r\n                                    <div className=\"text-box\">\r\n                                        <p>e-mail</p>\r\n                                        <p className=\"user-id\">{email}</p>\r\n                                    </div>\r\n                                    <div className=\"form-box\">\r\n                                        <form className=\"btn-wrap\">\r\n                                            <Link to=\"/\">\r\n                                                <button className=\"btn-purple enable\">로그인 하기</button>\r\n                                            </Link>\r\n                                        </form>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        }\r\n                    })()\r\n                } \r\n                </div>\r\n                <footer id=\"footer\"></footer>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Findpw;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Addcard.js",["75"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Findemail.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Addnotice.js",["76","77","78"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\AuthForm.js",["79"],"import { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [Proceeding, setProceeding] = useState(false);\r\n    const [focusemail, setfocusemail] = useState(false);\r\n    const [focuspw, setfocuspw] = useState(false);\r\n    const [pwshow, setpwshow] = useState(false);\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            data = await authService.signInWithEmailAndPassword(\r\n                email, \r\n                password\r\n            );\r\n            console.log(data);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    };\r\n    const toggleProceeding = () => setProceeding((prev) => !prev);\r\n    const onFocus = (event) => {\r\n        const {target: {name}} = event;\r\n        if(name === \"email\"){\r\n            setfocusemail((prev) => !prev);\r\n        } else if(name === \"password\"){\r\n            setfocuspw((prev) => !prev);\r\n        }\r\n    };\r\n    const togglepwshow = (event) => {\r\n        event.preventDefault();\r\n        setpwshow((prev) => !prev);\r\n    }\r\n    return(\r\n        <>\r\n            <div id=\"wrap\" className={Proceeding ? \"login-pw join\" : \"login-email join\"}>\r\n                <header id=\"header\">\r\n                    <button onClick={toggleProceeding}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-chevron-left.svg'} alt=\"이전\"></img></button>\r\n                </header>\r\n                <div id=\"content\" className=\"content\">\r\n                    \r\n                    {!Proceeding ? (\r\n                        <>\r\n                            <div className=\"logo-wrap\">\r\n                                <h1>Brity</h1>\r\n                                <p>admin</p>\r\n                            </div>\r\n                            <p>안녕하세요, 브리티 관리자 페이지 입니다😀<br></br>\r\n                                브리티와 함께 영역을 확장해볼까요?</p>\r\n                            <div className=\"form-box\">\r\n                                <form className={(focusemail ? \"selected\" : \"\") + (email ? \" filled\" : \"\")}>\r\n                                    <label for=\"user-email\">이메일</label>\r\n                                    <input \r\n                                        name=\"email\" \r\n                                        type=\"email\" \r\n                                        className=\"input-basic\"\r\n                                        id=\"user-email\" \r\n                                        placeholder=\"이메일이나 아이디를 입력하세요\"\r\n                                        value={email}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onFocus}\r\n                                        onChange={onChange}/>\r\n                                    <button onClick={() => {setEmail(\"\")}}></button>\r\n                                    <div className=\"message\">{error}</div>\r\n                                </form>\r\n                                <div className=\"btn-wrap\">\r\n                                    <Link to=\"/Findemail\">\r\n                                        이메일을 잊으셨나요?\r\n                                    </Link>\r\n                                    {email ? (\r\n                                        <button className=\"btn-basic next enable\" onClick={toggleProceeding}>다음</button>\r\n                                    ) : (\r\n                                        <button className=\"btn-basic next\">다음</button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <a onClick={onSocialClick} name=\"google\" className=\"login-google btn-purple enable\">Continue with &nbsp;<img src={process.env.PUBLIC_URL + 'google.svg'} alt=\"google\"/></a>         \r\n                        </>\r\n                        ) : (\r\n                        <>\r\n                            <div className=\"logo-wrap\">\r\n                                <h2>Brity</h2>\r\n                                <p>admin</p>\r\n                            </div>\r\n                            <p className=\"user-id\">{email}</p>\r\n                            <div className=\"form-box\">\r\n                                <form className={(focuspw ? \"selected\" : \"\") + (pwshow ? \" pw-veiw\" : \" pw-hide\")}>\r\n                                    <label for=\"login-pw\">비밀번호</label>\r\n                                    <input \r\n                                        name=\"password\" \r\n                                        type={pwshow ? \"text\" : \"password\"}\r\n                                        className=\"input-basic\" \r\n                                        id=\"login-pw\"\r\n                                        placeholder=\"비밀번호를 입력하세요\"\r\n                                        value={password}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onFocus}\r\n                                        onChange={onChange}/>\r\n                                        <button onClick={togglepwshow}></button>\r\n                                        <div className=\"message\">{error}</div>\r\n                                </form>\r\n                                <div className=\"check-circle square\">\r\n                                    <input type=\"checkbox\" id=\"pw-save\"/>\r\n                                    <label for=\"pw-save\">로그인 유지하기</label>\r\n                                </div>\r\n                                <div className=\"btn-wrap\">\r\n                                    <Link to=\"/Findpw\">\r\n                                        비밀번호를 잊으셨나요?\r\n                                    </Link>\r\n                                    {password ? (\r\n                                        <button className=\"btn-basic next enable\" onClick={onSubmit}>다음</button>\r\n                                    ) : (\r\n                                        <button className=\"btn-basic next\">다음</button>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    <Link to=\"/SignUp\">\r\n                        <button className=\"btn-purple fix-bottom enable\">Brity 계정 만들기</button>\r\n                    </Link>   \r\n                </div>\r\n            </div>\r\n            <footer id=\"footer\"></footer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Profile.js",["80","81","82","83","84","85","86"],"import { firebaseInstance, authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport DaumPostcode from \"react-daum-postcode\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nconst Profile = ({refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [page, setpage] = useState(0);\r\n    const [fix, setfix] = useState(false);\r\n    const [instagram, setinstagram] = useState(\"\");\r\n    const [facebook, setfacebook] = useState(\"\");\r\n    const [youtube, setyoutube] = useState(\"\");\r\n    const [tiktok, settiktok] = useState(\"\");\r\n    const [twitter, settwitter] = useState(\"\");\r\n    const [email, setemail] = useState(authService.currentUser.email);\r\n    const [name, setname] = useState(\"\");\r\n    const [year, setyear] = useState(\"\");\r\n    const [month, setmonth] = useState(\"\");\r\n    const [date, setdate] = useState(\"\");\r\n    const [gender, setgender] = useState(\"\");\r\n    const [address, setaddress] = useState(\"\");\r\n    const [subadd, setsubadd] = useState(\"\");\r\n    const [pw, setpw] = useState(\"\");\r\n    const [newpw, setnewpw] = useState(\"\");\r\n    const [newpwre, setnewpwre] = useState(\"\");\r\n    const [search, setsearch] = useState(false);\r\n    const [focusname, setfocusname] = useState(false);\r\n    const [focusemail, setfocusemail] = useState(false);\r\n    const [focuspw, setfocuspw] = useState(false);\r\n    const [focusyear, setfocusyear] = useState(false);\r\n    const [focusmonth, setfocusmonth] = useState(false);\r\n    const [focusdate, setfocusdate] = useState(false);\r\n    const [focussubadd, setfocussubadd] = useState(false);\r\n    const [focusnewpw, setfocusnewpw] = useState(false);\r\n    const [focusnewpwre, setfocusnewpwre] = useState(false);\r\n    const [pwshow, setpwshow] = useState(false);\r\n    const [newpwshow, setnewpwshow] = useState(false);\r\n    const [newpwreshow, setnewpwreshow] = useState(false);\r\n    const [error, seterror] = useState(false);\r\n    const [btnover, setbtnover] = useState(false);\r\n    const handleScroll = () => {\r\n        const {pageYOffset} = window;\r\n        setfix(pageYOffset > 0);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let userdata = dbService.collection(\"users\").doc(authService.currentUser.email);\r\n        let getdoc = userdata.get()\r\n            .then(doc => {\r\n                if(!doc.exists) {\r\n                    dbService.collection(\"users\").doc(authService.currentUser.email).set({\r\n                        email: authService.currentUser.email,\r\n                    });\r\n                } else {\r\n                    console.log(\"DATA : \", doc.data());\r\n                    if(doc.data().email === undefined) setemail(authService.currentUser.email);\r\n                    else setemail(doc.data().email);\r\n                    if(doc.data().name === undefined) setname(\"\");\r\n                    else setname(doc.data().name);\r\n                    if(doc.data().gender === undefined) setgender(2);\r\n                    else setgender(doc.data().gender);\r\n                    if(doc.data().address === undefined) setaddress(\"\");\r\n                    else setaddress(doc.data().address);\r\n                    if(doc.data().subadd === undefined) setsubadd(\"\");\r\n                    else setsubadd(doc.data().subadd);\r\n                    if(doc.data().birth === undefined){\r\n                        setyear(\"\");\r\n                        setmonth(\"\");\r\n                        setdate(\"\");\r\n                    }\r\n                    else {\r\n                        setyear(Math.floor(Number(doc.data().birth) / 10000));\r\n                        setmonth(Math.floor((Number(doc.data().birth) % 10000) / 100));\r\n                        setdate(Math.floor(Number(doc.data().birth) % 100));\r\n                    }\r\n                    setinstagram(doc.data().instagram === undefined ? \"\" : doc.data().instagram);\r\n                    setfacebook(doc.data().facebook === undefined ? \"\" : doc.data().facebook);\r\n                    setyoutube(doc.data().youtube === undefined ? \"\" : doc.data().youtube);\r\n                    settiktok(doc.data().tiktok === undefined ? \"\" : doc.data().tiktok);\r\n                    settwitter(doc.data().twitter === undefined ? \"\" : doc.data().twitter);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        window.addEventListener('scroll', handleScroll);\r\n    }, []);\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"name\"){\r\n            setname(value);\r\n        } else if(name === \"user-email\"){\r\n            setemail(value);\r\n        } else if(name === \"year\"){\r\n            setyear(value);\r\n        } else if(name === \"month\"){\r\n            setmonth(value);\r\n        } else if(name === \"date\"){\r\n            setdate(value);\r\n        } else if(name === \"detail-address\"){\r\n            setsubadd(value);\r\n        } else if(name === \"pw\"){\r\n            setpw(value);\r\n        } else if(name === \"new-pw\"){\r\n            setnewpw(value);\r\n        } else if(name === \"new-pw-re\"){\r\n            setnewpwre(value);\r\n        } else if(name === \"instagram\"){\r\n            setinstagram(value);\r\n        } else if(name === \"facebook\"){\r\n            setfacebook(value);\r\n        } else if(name === \"youtube\"){\r\n            setyoutube(value);\r\n        } else if(name === \"tiktok\"){\r\n            settiktok(value);\r\n        } else if(name === \"twitter\"){\r\n            settwitter(value);\r\n        }\r\n    };\r\n    const onFocus = (event) => {\r\n        const {target: {name}} = event;\r\n        if(name === \"name\"){\r\n            setfocusname((prev) => !prev);\r\n        } else if(name === \"user-email\"){\r\n            setfocusemail((prev) => !prev);\r\n        } else if(name === \"year\"){\r\n            setfocusyear((prev) => !prev);\r\n        } else if(name === \"month\"){\r\n            setfocusmonth((prev) => !prev);\r\n        } else if(name === \"date\"){\r\n            setfocusdate((prev) => !prev);\r\n        } else if(name === \"detail-address\"){\r\n            setfocussubadd((prev) => !prev);\r\n        } else if(name === \"pw\"){\r\n            setfocuspw((prev) => !prev);\r\n        } else if(name === \"new-pw\"){\r\n            setfocusnewpw((prev) => !prev);\r\n        } else if(name === \"new-pw-re\"){\r\n            setfocusnewpwre((prev) => !prev);\r\n        }\r\n    };\r\n    const onLogOutClick = (e) => {\r\n        e.preventDefault();\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n        refreshUser();\r\n    };\r\n    const gethome = () => history.push(\"/\");\r\n    const getdelete =() => history.push(\"/delete\");\r\n    const togglepage = (num) => {\r\n        setpage(num);\r\n        seterror(false);\r\n    }\r\n    const toggleclassName = () => {\r\n        if(page === 0) return \"ad-card account-menu account\"\r\n        else if(page === 1) return \"ad-card account-sns account\"\r\n        else if(page > 1){\r\n            let pagenum = \"account-info0\" + String(page-1) + \" account account-info\";\r\n            return pagenum \r\n        }\r\n    }\r\n    const togglemenuName = () => {\r\n        if(page === 0) return \"🛠 내 계정 관리\"\r\n        else if(page === 1) return \"SNS 계정 정보\"\r\n        else if(page >= 2) return \"개인 정보\" \r\n    }\r\n    const selectgender = (event) => {\r\n        const {target: {value}} = event;\r\n        setgender(value);\r\n        console.log(gender);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const data = {\r\n            email: email,\r\n            name: name,\r\n            birth: year*10000 + month*100 + date,\r\n            gender: gender,\r\n            address: address,\r\n            subadd: subadd,\r\n        }\r\n        await dbService.collection('users').doc(authService.currentUser.email).update(data);\r\n        setpage(2);\r\n    };\r\n    const onSubmit2 = async (event) => {\r\n        const data = {\r\n            instagram: instagram,\r\n            facebook: facebook,\r\n            youtube: youtube,\r\n            tiktok: tiktok,\r\n            twitter: twitter,\r\n        }\r\n        await dbService.collection('users').doc(authService.currentUser.email).update(data);\r\n        setpage(0);\r\n    };\r\n    const togglesearch = () => setsearch((prev) => !prev);\r\n    const handleComplete = (data) => {\r\n        let fullAddress = data.address;\r\n        let extraAddress = '';\r\n\r\n        if (data.addressType === 'R') {\r\n            if (data.bname !== '') {\r\n                extraAddress += data.bname;\r\n            }\r\n            if (data.buildingName !== ''){\r\n                extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        setaddress(fullAddress);\r\n        togglesearch();\r\n    };\r\n    const reauthenticate = async () => {\r\n        const user = authService.currentUser;\r\n        try{\r\n            let cred = await firebaseInstance.auth.EmailAuthProvider.credential(\r\n                email,\r\n                pw\r\n            );\r\n            let reauth = await user.reauthenticateWithCredential(\r\n                cred\r\n            );\r\n            if(reauth.message === undefined){\r\n                setpw(\"\");\r\n                return true\r\n            } else{\r\n                setpw(\"\");\r\n                return false\r\n            }\r\n        } catch (err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    const updatepw = async () => {\r\n        let password = newpw;\r\n        authService.currentUser.updatePassword(password).then(function() {\r\n            setnewpw(\"\");\r\n            setnewpwre(\"\");\r\n            togglepage(2);\r\n        }).catch(function(err){\r\n            console.log(err);\r\n        });\r\n    };\r\n    const btnstyle1 = (over) => ({\r\n        borderRight: over ? \"1px solid #fff\" : \"1px solid #ebebeb\",\r\n        borderTop: over ? \"1px solid #fff\" : \"1px solid #ebebeb\",\r\n    });\r\n    const btnstyle2 = (over) => ({\r\n        borderTop: over ? \"1px solid #fff\" : \"1px solid #ebebeb\",\r\n    });\r\n    return (\r\n        <div id=\"wrap\" className={toggleclassName()}>\r\n            <header className={`header${fix ? ' fix' : ''}`}>\r\n                <div className=\"menu-wrap\">\r\n                    <button className=\"back\" onClick={() => togglepage(0)}><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-chevron-left.svg\"} alt=\"이전으로\"/></button>\r\n                    <p>{togglemenuName()}</p>\r\n                    { page < 3 ? (\r\n                        <button className=\"close\" onClick={gethome}><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-times.svg\"} alt=\"닫기\"/></button>\r\n                    ) : (\r\n                        <button className=\"btn-purple-light enable\" onClick={onSubmit}>저장</button>\r\n                    )}\r\n                    \r\n                </div>\r\n            </header>\r\n            <div className=\"content\">\r\n                { \r\n                    (() => {\r\n                    if (page === 0){\r\n                        return(\r\n                            <>\r\n                                <div className=\"form-box border-bottom\">\r\n                                    <form className=\"hover-style\"><button onClick={() => togglepage(1)}>SNS 계정 정보<img src={process.env.PUBLIC_URL + \"02-icon-03-18-px-outline-chevron-right.svg\"} alt=\"바로가기\"/></button></form>\r\n                                    <form className=\"hover-style\"><button onClick={() => togglepage(2)}>개인 정보<img src={process.env.PUBLIC_URL + \"02-icon-03-18-px-outline-chevron-right.svg\"} alt=\"바로가기\"/></button></form>\r\n                                </div>\r\n                                <div className=\"form-box\">\r\n                                    <form className=\"hover-style\">\r\n                                        <Popup\r\n                                        trigger={<button>로그아웃</button>}\r\n                                        modal>\r\n                                        {close => (<div className=\"bg-opacity alert on\">\r\n                                            <div className=\"alert-wrap\">\r\n                                                <div className=\"alert-box\">\r\n                                                    <div className=\"text-box\">\r\n                                                        <p className=\"p-header\">😨 로그아웃 하실 건가요?</p>\r\n                                                        <p className=\"p-text\">정말로 로그아웃 하시는 거라면<br/>\r\n                                                            아쉽지만, 다음에 또 만나요 🙋‍♀️</p>\r\n                                                    </div>\r\n                                                    <div className=\"btn-box\">\r\n                                                        <button onClick={close} onMouseEnter={() => setbtnover(true)} onMouseOut={() => setbtnover(false)} style={btnstyle1(btnover)}>취소</button>\r\n                                                        <button onClick={onLogOutClick} onMouseEnter={() => setbtnover(true)} onMouseOut={() => setbtnover(false)} style={btnstyle2(btnover)}>로그아웃</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        )}\r\n                                    </Popup></form>\r\n                                    <form className=\"hover-style\"><button onClick={getdelete}>계정삭제</button></form>\r\n                                </div>\r\n                            </>\r\n                        );\r\n                    } else if(page === 1){\r\n                        return(\r\n                            <>\r\n                                <div className=\"form-box\">\r\n                                    <form>\r\n                                        <label for=\"insta-id\">Instagram</label>\r\n                                        <input \r\n                                            id=\"insta-id\" \r\n                                            type=\"text\" \r\n                                            name=\"instagram\"\r\n                                            value={instagram}\r\n                                            onChange={onChange}\r\n                                            placeholder=\"아이디를 입력해주세요\"/>\r\n                                    </form>\r\n                                    <form>\r\n                                        <label for=\"facebook-id\">Facebook</label>\r\n                                        <input \r\n                                            id=\"facebook-id\" \r\n                                            type=\"text\"  \r\n                                            name=\"facebook\"\r\n                                            value={facebook}\r\n                                            onChange={onChange}\r\n                                            placeholder=\"아이디를 입력해주세요\"/>\r\n                                    </form>\r\n                                    <form>\r\n                                        <label for=\"youtube-id\">YouTube</label>\r\n                                        <input \r\n                                            id=\"youtube-id\" \r\n                                            type=\"text\"  \r\n                                            name=\"youtube\"\r\n                                            value={youtube}\r\n                                            onChange={onChange}\r\n                                            placeholder=\"채널 주소를 입력해주세요\"/>\r\n                                    </form>\r\n                                    <form>\r\n                                        <label for=\"tiktok-id\">TikTok</label>\r\n                                        <input \r\n                                            id=\"tiktok-id\" \r\n                                            type=\"text\"  \r\n                                            name=\"tiktok\"\r\n                                            value={tiktok}\r\n                                            onChange={onChange}\r\n                                            placeholder=\"아이디를 입력해주세요\"/>\r\n                                    </form>\r\n                                    <form>\r\n                                        <label for=\"twitter-id\">Twitter</label>\r\n                                        <input \r\n                                            id=\"twitter-id\" \r\n                                            type=\"text\"  \r\n                                            name=\"twitter\"\r\n                                            value={twitter}\r\n                                            onChange={onChange}\r\n                                            placeholder=\"아이디를 입력해주세요\"/>\r\n                                    </form>\r\n                                </div>\r\n                                <Popup\r\n                                    trigger={<button className=\"btn-purple fix-bottom enable\">🔒저장하기</button>}\r\n                                    modal\r\n                                    onClose={onSubmit2}>\r\n                                        {close => (\r\n                                            <div className=\"bg-opacity alert on\">\r\n                                                <div className=\"alert-wrap\">\r\n                                                    <div className=\"alert-box small\">\r\n                                                        <div className=\"text-box\">\r\n                                                            <p className=\"p-header\">🔒 저장완료</p>\r\n                                                            <p className=\"p-text\">입력하신 정보가 저장 되었어요 👍</p>\r\n                                                        </div>\r\n                                                        <div className=\"btn-box\">\r\n                                                            <button onClick={close}>닫기</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                </Popup>\r\n                            </>\r\n                        );\r\n                    } else if(page === 2){\r\n                        return(\r\n                            <>\r\n                                <div className=\"form-box border-bottom\">\r\n                                    <div className=\"hover-style\">\r\n                                        <button>\r\n                                            <span>이름</span>\r\n                                            <p className=\"user-name\">{name}</p>\r\n                                            <img src={process.env.PUBLIC_URL + \"02-icon-03-18-px-outline-chevron-right.svg\"} alt=\"수정하기\" onClick={() => togglepage(3)}/>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"hover-style\">\r\n                                        <button>\r\n                                            <span>생년월일</span>\r\n                                            <p className=\"user-birth\">{year + \". \" + month + \". \" + date}</p>\r\n                                            <img src={process.env.PUBLIC_URL + \"02-icon-03-18-px-outline-chevron-right.svg\"} alt=\"수정하기\" onClick={() => togglepage(4)}/>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"hover-style\">\r\n                                        <button>\r\n                                            <span>성별</span>\r\n                                            <p className=\"user-gender\">{gender == 2 ? \"선택안함\" : (gender == 0 ? \"남성\" : \"여성\")}</p>\r\n                                            <img src={process.env.PUBLIC_URL + \"02-icon-03-18-px-outline-chevron-right.svg\"} alt=\"수정하기\" onClick={() => togglepage(5)}/>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"hover-style\">\r\n                                        <button>\r\n                                            <span>주소</span>\r\n                                            <p className=\"user-address\">\r\n                                                <span>{address}</span>\r\n                                                <span>{subadd}</span>\r\n                                            </p>\r\n                                            <img src={process.env.PUBLIC_URL + \"02-icon-03-18-px-outline-chevron-right.svg\"} alt=\"수정하기\" onClick={() => togglepage(6)}/>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-box border-bottom\">\r\n                                    <div className=\"hover-style\">\r\n                                        <button>\r\n                                            <span>이메일 주소</span>\r\n                                            <p className=\"user-email\">{email}</p>\r\n                                            <img src={process.env.PUBLIC_URL + \"02-icon-03-18-px-outline-chevron-right.svg\"} alt=\"수정하기\" onClick={() => togglepage(7)}/>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"hover-style\">\r\n                                        <button>\r\n                                            <span>비밀번호</span>\r\n                                            <p className=\"user-pw\">••••••••</p>\r\n                                            <img src={process.env.PUBLIC_URL + \"02-icon-03-18-px-outline-chevron-right.svg\"} alt=\"수정하기\" onClick={() => togglepage(8)}/>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </>\r\n                        );\r\n                    } else if(page === 3){\r\n                        return(\r\n                            <>\r\n                                <h2>이름 수정하기</h2>\r\n                                <p>🖍 수정할 내용을 입력해 주세요</p>\r\n                                <div className=\"form-box\">\r\n                                    <form className={(focusname ? \"selected\" : \"\") + (name ? \" filled\" : \"\") + (error ? \" error\" : \"\")}>\r\n                                        <label for=\"user-name\">이름</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"user-name\"\r\n                                            name=\"name\"\r\n                                            className=\"input-basic\"\r\n                                            placeholder=\"이름을 입력해주세요\"\r\n                                            value={name}\r\n                                            onFocus={onFocus}\r\n                                            onBlur={onFocus}\r\n                                            onChange={onChange}/>\r\n                                        <button onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            name && setname(\"\");\r\n                                        }}></button>\r\n                                        <div className=\"message\">이름을 입력해주세요</div>\r\n                                    </form>\r\n                                </div>\r\n                                {name ? (\r\n                                    <button className=\"btn-purple fix-bottom enable\" onClick={onSubmit}>🔒저장하기</button>\r\n                                ) : (\r\n                                    <button className=\"btn-purple fix-bottom\" onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        seterror(true);\r\n                                    }}>🔒저장하기</button>\r\n                                )}\r\n                                \r\n                            </>\r\n                        );\r\n                    } else if(page === 4){\r\n                        return(\r\n                            <>\r\n                                <h2>생일 수정하기</h2>\r\n                                <p>개인정보는 공개되지 않는 정보에요 🤫<br/>\r\n                                    🖍 수정할 내용을 입력해 주세요</p>\r\n                                <div className=\"form-box\">\r\n                                    <p>생일</p>\r\n                                    <div className=\"birth\">\r\n                                        <form className={focusyear ? \"selected\" : \"\"}>\r\n                                            <label for=\"year\"></label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                id=\"year\"\r\n                                                name=\"year\"\r\n                                                min=\"1900\"\r\n                                                max=\"2020\"\r\n                                                onChange={onChange}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onFocus}\r\n                                                className=\"input-basic\"\r\n                                                placeholder=\"연도\"/>\r\n                                        </form>\r\n                                        <form className={focusmonth ? \"selected\" : \"\"}>\r\n                                            <label for=\"month\"></label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                id=\"month\"\r\n                                                name=\"month\"\r\n                                                min=\"1\"\r\n                                                max=\"12\"\r\n                                                onChange={onChange}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onFocus}\r\n                                                className=\"input-basic\"\r\n                                                placeholder=\"월\"/>\r\n                                        </form>\r\n                                        <form className={focusdate ? \"selected\" : \"\"}>\r\n                                            <label for=\"date\"></label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                id=\"date\"\r\n                                                name=\"date\"\r\n                                                min=\"1\"\r\n                                                max=\"31\"\r\n                                                onChange={onChange}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onFocus}\r\n                                                className=\"input-basic\"\r\n                                                placeholder=\"일\"/>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                {year && month && date ? (\r\n                                    <button className=\"btn-purple fix-bottom enable\" onClick={onSubmit}>🔒저장하기</button>\r\n                                ) : (\r\n                                    <button className=\"btn-purple fix-bottom\">🔒저장하기</button>\r\n                                )}\r\n                                \r\n                            </>\r\n                        );\r\n                    } else if(page === 5){\r\n                        return(\r\n                            <>\r\n                                <h2>성별 수정하기</h2>\r\n                                <p>성별</p>\r\n                                <div className=\"form-box hover-style\">\r\n                                    <form className=\"check-circle\">\r\n                                        <input type=\"checkbox\" id=\"male\" value=\"0\" onClick={selectgender} checked={gender == 0 && \"checked\"}/>\r\n                                        <label for=\"male\">남자</label>\r\n                                    </form>\r\n                                    <form className=\"check-circle\">\r\n                                        <input type=\"checkbox\" id=\"female\" value=\"1\" onClick={selectgender} checked={gender == 1 && \"checked\"}/>\r\n                                        <label for=\"female\">여자</label>\r\n                                    </form>\r\n                                    <form className=\"check-circle\">\r\n                                        <input type=\"checkbox\" id=\"none\" value=\"2\" onClick={selectgender} checked={gender == 2 && \"checked\"}/>\r\n                                        <label for=\"none\">선택안함</label>\r\n                                    </form>\r\n                                </div>\r\n                                <button className=\"btn-purple fix-bottom enable\" onClick={onSubmit}>🔒저장하기</button>\r\n                            </>\r\n                        );\r\n                    } else if(page === 6){\r\n                        return(\r\n                            <>\r\n                                <h2>주소 수정하기</h2>\r\n                                <p>개인정보는 공개되지 않는 정보에요 🤫<br/>\r\n                                    🖍 수정할 내용을 입력해 주세요</p>\r\n                                <div className=\"form-box\">\r\n                                    <form className=\"search-address\">\r\n                                        { !search ? (\r\n                                            <>\r\n                                                <label for=\"address\">주소</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    className=\"input-basic\" \r\n                                                    id=\"address\" \r\n                                                    value={address}\r\n                                                    placeholder=\"우편번호를 입력하세요\"/>\r\n                                                <button onClick={togglesearch}><img src={process.env.PUBLIC_URL + '02-icon-01-outline-search.svg'} alt=\"검색\"/></button>\r\n                                            </>\r\n                                        ) : (\r\n                                            <DaumPostcode \r\n                                                onComplete={handleComplete}/>\r\n                                        )}\r\n                                        <div className=\"message\">우편번호를 입력해주세요</div>\r\n                                    </form>\r\n                                    <form className={(focussubadd ? \"selected\" : \"\") + (subadd ? \" filled\" : \"\")}>\r\n                                        <label for=\"detail-address\"></label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"input-basic\"\r\n                                            id=\"detail-address\"\r\n                                            name=\"detail-address\"\r\n                                            onChange={onChange}\r\n                                            onFocus={onFocus}\r\n                                            onBlur={onFocus}\r\n                                            placeholder=\"상세주소를 입력하세요\" />\r\n                                        <button onClick={() => {\r\n                                            subadd && setsubadd(\"\");\r\n                                        }}></button>\r\n                                        <div className=\"message\">상세 주소를 입력해주세요</div>\r\n                                    </form>\r\n                                </div>\r\n                                { address && subadd ? (\r\n                                    <button className=\"btn-purple fix-bottom enable\" onClick={onSubmit}>🔒저장하기</button>\r\n                                ) : (\r\n                                    <button className=\"btn-purple fix-bottom\">🔒저장하기</button>\r\n                                )}\r\n                            </>\r\n                        );\r\n                    } else if(page === 7){\r\n                        return(\r\n                            <>\r\n                                <h2>이메일 수정하기</h2>\r\n                                <p>🖍 수정할 내용을 입력해 주세요</p>\r\n                                <div className=\"form-box\">\r\n                                    <form className={(focusemail ? \"selected\" : \"\") + (email ? \" filled\" : \"\")}>\r\n                                        <label for=\"user-email\">이메일</label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"input-basic\"\r\n                                            id=\"user-email\"\r\n                                            name=\"user-email\"\r\n                                            onFocus={onFocus}\r\n                                            onBlur={onFocus}\r\n                                            onChange={onChange}\r\n                                            value={email} />\r\n                                        <button onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            email && setemail(\"\");\r\n                                        }}></button>\r\n                                        <div className=\"message\">이메일 형식이 올바르지 않아요</div>\r\n                                    </form>\r\n                                </div>\r\n                                { email ? (\r\n                                    <button className=\"btn-purple fix-bottom enable\" onClick={onSubmit}>🔒저장하기</button>\r\n                                ) : (\r\n                                    <button className=\"btn-purple fix-bottom\">🔒저장하기</button>\r\n                                )}\r\n                                \r\n                            </>\r\n                        );\r\n                    } else if(page === 8){\r\n                        return(\r\n                            <>\r\n                                <h2>비밀번호 수정하기</h2>\r\n                                <p>정보를 안전하게 보호하기 위해<br/>\r\n                                    본인임을 인증해 주세요</p>\r\n                                <div className=\"form-box\">\r\n                                    <form className={(focuspw ? \"selected\" : \"\") + (pwshow ? \" pw-veiw\" : \" pw-hide\") + (error ? \" error\" : \"\")}>\r\n                                        <label for=\"user-pw\">비밀번호</label>\r\n                                        <input\r\n                                            type={pwshow ? \"text\" : \"password\"}\r\n                                            className=\"input-basic\"\r\n                                            id=\"user-email\"\r\n                                            name=\"pw\"\r\n                                            onChange={onChange}\r\n                                            onFocus={onFocus}\r\n                                            onBlur={onFocus}\r\n                                            placeholder=\"\" />\r\n                                        <button onClick={(e) => {\r\n                                            e.preventDefault()\r\n                                            setpwshow((prev) => !prev);\r\n                                        }}></button>\r\n                                        <div className=\"message\">비밀번호가 일치하지 않아요</div>\r\n                                    </form>\r\n                                </div>\r\n                                {pw.length>0 ? (\r\n                                    <button className=\"btn-basic next enable\" onClick={async () => {(await reauthenticate() ? togglepage(9) : seterror(true))}}>계속</button>\r\n                                ) : (\r\n                                    <button className=\"btn-basic next\">계속</button>\r\n                                )}\r\n                                \r\n                            </>\r\n                        );\r\n                    } else if(page === 9){\r\n                        return(\r\n                            <>\r\n                                <h2>비밀번호 수정하기</h2>\r\n                                <p>새로운 비밀번호로 변경하겠습니다 🤓<br/>\r\n                                    앞으로 로그인할 때 변경한 비밀번호를 입력해 주세요</p>\r\n                                <div className=\"form-box\">\r\n                                    <form className={(focusnewpw ? \"selected\" : \"\") + (newpwshow ? \" pw-veiw\" : \" pw-hide\")}>\r\n                                        <label for=\"new-user-pw\">새 비밀번호<span className=\"required\">*</span></label>\r\n                                        <input\r\n                                            type={newpwshow ? \"text\" : \"password\"}\r\n                                            className=\"input-basic\"\r\n                                            id=\"new-user-pw\"\r\n                                            name=\"new-pw\"\r\n                                            value={newpw}\r\n                                            onChange={onChange}\r\n                                            onFocus={onFocus}\r\n                                            onBlur={onFocus}\r\n                                            placeholder=\"새롭게 설정할 비밀번호를 입력하세요\" />\r\n                                        <button onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            setnewpwshow((prev) => !prev);\r\n                                        }}></button>\r\n                                        <div className=\"message\">8자 이상, 소문자 숫자가 포함되어야 합니다</div>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"form-box\">\r\n                                    <form className={(focusnewpwre ? \"selected\" : \"\") + (newpwreshow ? \" pw-veiw\" : \" pw-hide\") + (newpw !== newpwre ? \" error\" : \"\")}>\r\n                                        <label for=\"new-user-pw-re\">새 비밀번호 확인<span class=\"required\">*</span></label>\r\n                                        <input\r\n                                            type={newpwreshow ? \"text\" : \"password\"}\r\n                                            className=\"input-basic\"\r\n                                            id=\"new-user-pw-re\"\r\n                                            name=\"new-pw-re\"\r\n                                            value={newpwre}\r\n                                            onChange={onChange}\r\n                                            onFocus={onFocus}\r\n                                            onBlur={onFocus}\r\n                                            placeholder=\"새 비밀번호를 확인해주세요\" />\r\n                                        <button onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            setnewpwreshow((prev) => !prev);\r\n                                        }}></button>\r\n                                        <div className=\"message\">비밀번호가 일치하지 않아요</div>\r\n                                    </form>\r\n                                </div>\r\n                                { (newpw === newpwre) && newpw ? (\r\n                                    <button className=\"btn-purple fix-bottom enable\" onClick={updatepw}>🔒저장하기</button>\r\n                                ) : (\r\n                                    <button className=\"btn-purple fix-bottom\">🔒저장하기</button>\r\n                                )}\r\n                                \r\n                            </>\r\n                        );\r\n                    }\r\n                })()\r\n            }     \r\n            </div>\r\n            <footer className=\"footer\"></footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\Home.js",["87","88"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\CardDragList.js",["89"],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\components\\Customerhelp.js",[],"C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\AccountDelete.js",["90"],"import { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nconst AccountDelete = ({refreshUser}) => {\r\n    const history = useHistory();\r\n    const [Proceeding, setProceeding] = useState(false);\r\n    const [btnover, setbtnover] = useState(false);\r\n    const [check, setcheck] = useState(false);\r\n    const [password, setpassword] = useState(\"\");\r\n    const [pwshow, setpwshow] = useState(false);\r\n    const [focuspassword, setfocuspassword] = useState(false);\r\n    const [error, seterror] = useState(false);\r\n    const getback = () => history.push(\"/Profile\");\r\n    const gethome = () => history.push(\"/\");\r\n    const toggleProceeding = () => setProceeding((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"password\"){\r\n            setpassword(value);\r\n        }\r\n    }\r\n    const reauthenticate = async () => {\r\n        const user = authService.currentUser;\r\n        try{\r\n            let cred = await firebaseInstance.auth.EmailAuthProvider.credential(\r\n                user.email,\r\n                password\r\n            );\r\n            let reauth = await user.reauthenticateWithCredential(\r\n                cred\r\n            );\r\n            if(reauth.message === undefined){\r\n                setpassword(\"\");\r\n                return true\r\n            } else{\r\n                seterror(true);\r\n                return false\r\n            }\r\n        } catch (err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    const accountDelete = () => {\r\n        const user = authService.currentUser;\r\n        user.delete().then(function() {\r\n            history.push(\"/\");\r\n            refreshUser();\r\n        }).catch(function(error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n    const btnstyle1 = (over) => ({\r\n        borderRight: over ? \"1px solid #fff\" : \"1px solid #ebebeb\",\r\n        borderTop: over ? \"1px solid #fff\" : \"1px solid #ebebeb\",\r\n    });\r\n    const btnstyle2 = (over) => ({\r\n        borderTop: over ? \"1px solid #fff\" : \"1px solid #ebebeb\",\r\n    });\r\n    return(\r\n        <div id=\"wrap\" className={\"ad-card account-delete \" + (!Proceeding ? \"\" : \"account-delete02 \") + \"account\"}>\r\n            <header className=\"header\">\r\n                <div className=\"menu-wrap\">\r\n                    <button className=\"back\" onClick={getback}><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-chevron-left.svg\"} alt=\"이전으로\"/></button>\r\n                    <p>계정삭제</p>\r\n                    <button className=\"close\" onClick={gethome}><img src={process.env.PUBLIC_URL + \"02-icon-01-outline-times.svg\"} alt=\"닫기\"/></button>\r\n                </div>\r\n            </header>\r\n            <div className=\"content\">\r\n                { !Proceeding ? (\r\n                    <>\r\n                        <h2>\r\n                            <span className=\"user-name\">{authService.currentUser.email}</span>님의 계정을 삭제합니다<br/>\r\n                            계정삭제 전, 아래 내용을 꼭 확인해주세요\r\n                        </h2>\r\n                        <ul className=\"text-box\">\r\n                            <li>📢 계정삭제 안내사항</li>\r\n                            <li>👉 브리티계정 삭제 시 해당 계정으로 이용하던 서비스의 이용계약이 해지되어 더는 이용할 수 없습니다.</li>\r\n                            <li>👉 브리티계정 정보 및 이용하였던 개별 서비스 데이터가 삭제됩니다.</li>\r\n                            <li>👉 탈퇴한 회원의 정보와 서비스 이용기록은 복구할 수 없으며 일괄 삭제 처리됩니다.</li>\r\n                        </ul>\r\n                        <form className=\"check-circle\">\r\n                            <input type=\"checkbox\" id=\"ddd\" onClick={() => setcheck((prev) => !prev)} checked={check && \"checked\"}/>\r\n                            <label for=\"ddd\">위 내용을 모두 확인 했습니다, 이에 동의하며 계정삭제를 진행하겠습니다.</label>\r\n                        </form>\r\n                        {check ? (\r\n                            <button className=\"btn-basic enable\" onClick={toggleProceeding}>삭제하기</button>\r\n                        ) : (\r\n                            <button className=\"btn-basic\">삭제하기</button>\r\n                        )}\r\n                        \r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <h2>\r\n                            정보를 안전하게 보호하기 위해<br/>\r\n                            계정삭제 전, 본인임을 인증해 주세요\r\n                        </h2>\r\n                        <div className=\"form-box\">\r\n                            <form className={(focuspassword ? \"selected\" : \"\") + (pwshow ? \" pw-veiw\" : \" pw-hide\") + (error ? \" error\" : \"\")}>\r\n                                <label for=\"login-pw\">비밀번호</label>\r\n                                <input \r\n                                    type={pwshow ? \"text\" : \"password\"}\r\n                                    className=\"input-basic\" \r\n                                    id=\"login-pw\" \r\n                                    name=\"password\"\r\n                                    onChange={onChange}\r\n                                    onFocus={() => setfocuspassword(false)}\r\n                                    onBlur={() => setfocuspassword(true)}\r\n                                    value={password}\r\n                                    placeholder=\"비밀번호를 입력하세요\"/>\r\n                                <button onClick={() => setpwshow((prev) => !prev)}></button>\r\n                                <div className=\"message\">비밀번호가 일치하지 않아요</div>\r\n                            </form>\r\n                        </div>\r\n                        {password ? (\r\n                            <Popup\r\n                            trigger={<button className=\"btn-basic enable\">완료하기</button>}\r\n                            modal>\r\n                                { close => (\r\n                                    <div className=\"bg-opacity alert on\">\r\n                                        <div className=\"alert-wrap\">\r\n                                            <div className=\"alert-box\">\r\n                                                <div className=\"text-box\">\r\n                                                    <p className=\"p-header\">계정삭제.. 하실 건가요?</p>\r\n                                                    <p className=\"p-text\">아쉽지만, 다음에 더 발전된 모습으로 찾아뵙겠습니다🙇‍♀️ 꼭 다시 만나요!</p>\r\n                                                </div>\r\n                                                <div className=\"btn-box\">\r\n                                                    <button onClick={close} onMouseEnter={() => setbtnover(true)} onMouseOut={() => setbtnover(false)} style={btnstyle1(btnover)}>취소❤️</button>\r\n                                                    <button onClick={accountDelete} onMouseEnter={() => setbtnover(true)} onMouseOut={() => setbtnover(false)} style={btnstyle2(btnover)}>계정삭제</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </Popup>\r\n                        ) : (\r\n                            <button className=\"btn-basic\">완료하기</button>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AccountDelete;","C:\\Users\\wndrms\\Desktop\\dev\\project\\brity\\src\\routes\\UserHome.js",["91"],"import { dbService } from \"fbase\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nconst UserHome = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    const [fix, setfix] = useState(false);\r\n    const [check, setcheck] = useState(false);\r\n    const ref = useRef(null);\r\n    const handleScroll = () => {\r\n        if(ref.current) {\r\n            setfix(ref.current.getBoundingClientRect().top <= 0);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n                id:doc.id, \r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', () => handleScroll);\r\n        };\r\n    }, []);\r\n    return(\r\n        <div id=\"wrap\" className=\"user-home admin-home\">\r\n            <header className={`header${fix ? ' fix' : ''}`} ref={ref}>\r\n                <div className=\"menu-wrap home-menu-btn\">\r\n                    <Popup\r\n                        trigger={<p className=\"user-name\">{userObj.displayName}</p>}\r\n                        modal>\r\n                        { close => (\r\n                            <div className=\"bg-opacity alert on\">\r\n                                <div className=\"alert-wrap\">\r\n                                    <div className=\"alert-box small\">\r\n                                        <div className=\"text-box\">\r\n                                            <p className=\"p-header\">@{userObj.displayName}</p>\r\n                                            <p className=\"p-text\">링크 주소가 복사되었어요</p>\r\n                                        </div>\r\n                                        <div className=\"btn-box\">\r\n                                            <button onClick={close}>닫기</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </Popup>\r\n                    <p>with by <u>brity</u></p>\r\n                    <button className=\"menu\">\r\n                        <Popup\r\n                            trigger={<img src={process.env.PUBLIC_URL + \"02-icon-01-outline-bars.svg\"} alt=\"menu\"/>}\r\n                            modal\r\n                            closeOnDocumentClick>\r\n                            <nav className=\"bg-opacity on\" style={{height: \"calc(100% - 200px)\"}}>\r\n                                <div className=\"sheet-wrap sns-sheet\">\r\n                                    <div className=\"sheet-box\">\r\n                                        <button className=\"drag-btn\"><span></span></button>\r\n                                        <div className=\"sheet-name\">SNS</div>\r\n                                        <ul className=\"sheet-list\">\r\n                                            { check ? (\r\n                                                <>\r\n                                                    <li>\r\n                                                        <button>\r\n                                                            <img src={process.env.PUBLIC_URL + \"instagram-icon.svg\"} alt=\"instagram\"/>\r\n                                                        </button>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <button>\r\n                                                            <img src={process.env.PUBLIC_URL + \"facebook-icon.svg\"} alt=\"facebook\"/>\r\n                                                        </button>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <button>\r\n                                                            <img src={process.env.PUBLIC_URL + \"youtube-icon.svg\"} alt=\"youtube\"/>\r\n                                                        </button>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <button>\r\n                                                            <img src={process.env.PUBLIC_URL + \"tiktok-icon.svg\"} alt=\"Tiktok\"/>\r\n                                                        </button>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <button>\r\n                                                            <img src={process.env.PUBLIC_URL + \"twitter-icon.svg\"} alt=\"twitter\"/>\r\n                                                        </button>\r\n                                                    </li>\r\n                                                </>\r\n                                            ) : (\r\n                                                <li className=\"none-sns-message\">현재 등록된 SNS 주소가 없어요😯</li>\r\n                                            )}\r\n                                        </ul>\r\n                                        <p>go to. <u>Brity</u></p>\r\n                                    </div>\r\n                                </div>\r\n                            </nav>\r\n                        </Popup>\r\n                    </button>\r\n                </div>\r\n            </header>\r\n            <div className=\"content\">\r\n                {\r\n                    (nweets.length > 0 ? (\r\n                        nweets.map((nweet) => (\r\n                            <div className=\"card\">\r\n                                <h3>{nweet.subtitle}</h3>\r\n                                <p>{nweet.title}</p>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"empty-box\">\r\n                                <p>💁</p>\r\n                                <p>생성된 카드가 아직 없어요</p>\r\n                                <p>버튼을 눌러 새로운 카드를<br/>\r\n                                    만들어 볼까요?</p>\r\n                            </div>\r\n                        </>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserHome;",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":9,"column":19,"nodeType":"98","messageId":"99","endLine":9,"endColumn":27},{"ruleId":"100","severity":1,"message":"101","line":257,"column":100,"nodeType":"102","endLine":257,"endColumn":127},{"ruleId":"96","severity":1,"message":"103","line":87,"column":19,"nodeType":"98","messageId":"99","endLine":87,"endColumn":32},{"ruleId":"100","severity":1,"message":"101","line":224,"column":49,"nodeType":"102","endLine":224,"endColumn":60},{"ruleId":"100","severity":1,"message":"101","line":301,"column":104,"nodeType":"102","endLine":301,"endColumn":131},{"ruleId":"104","severity":1,"message":"105","line":101,"column":29,"nodeType":"106","endLine":101,"endColumn":113},{"ruleId":"96","severity":1,"message":"107","line":2,"column":28,"nodeType":"98","messageId":"99","endLine":2,"endColumn":34},{"ruleId":"96","severity":1,"message":"108","line":49,"column":13,"nodeType":"98","messageId":"99","endLine":49,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":399,"column":80,"nodeType":"111","messageId":"112","endLine":399,"endColumn":82},{"ruleId":"109","severity":1,"message":"110","line":399,"column":104,"nodeType":"111","messageId":"112","endLine":399,"endColumn":106},{"ruleId":"109","severity":1,"message":"110","line":537,"column":123,"nodeType":"111","messageId":"112","endLine":537,"endColumn":125},{"ruleId":"109","severity":1,"message":"110","line":541,"column":125,"nodeType":"111","messageId":"112","endLine":541,"endColumn":127},{"ruleId":"109","severity":1,"message":"110","line":545,"column":123,"nodeType":"111","messageId":"112","endLine":545,"endColumn":125},{"ruleId":"113","severity":1,"message":"114","line":42,"column":31,"nodeType":"115","messageId":"116","endLine":42,"endColumn":33},{"ruleId":"113","severity":1,"message":"114","line":51,"column":36,"nodeType":"115","messageId":"116","endLine":51,"endColumn":38},{"ruleId":"117","severity":1,"message":"118","line":8,"column":8,"nodeType":"119","endLine":8,"endColumn":10,"suggestions":"120"},{"ruleId":"96","severity":1,"message":"121","line":25,"column":11,"nodeType":"98","messageId":"99","endLine":25,"endColumn":25},{"ruleId":"96","severity":1,"message":"122","line":8,"column":19,"nodeType":"98","messageId":"99","endLine":8,"endColumn":27},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'seterror' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'attachmentUrl' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useRef' is defined but never used.","'getdoc' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'nweets'. Either include it or remove the dependency array. If 'setlist' needs the current value of 'nweets', you can also switch to useReducer instead of useState and read 'nweets' in the reducer.","ArrayExpression",["125"],"'reauthenticate' is assigned a value but never used.","'setcheck' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Update the dependencies array to be: [nweets]",{"range":"128","text":"129"},[283,285],"[nweets]"]